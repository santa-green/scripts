-- поиск РН по которым можно вернуть товар
IF 99=99
BEGIN
USE ElitDistr
EXECUTE AS LOGIN = 'pvm0' -- для запуска OPENROWSET('Microsoft.ACE.OLEDB.12.0'
--GO
--REVERT

--установить дату наборов
IF OBJECT_ID (N'tempdb..#D', N'U') IS NOT NULL DROP TABLE #D
CREATE TABLE #D (BDate SMALLDATETIME, EDate SMALLDATETIME)
INSERT #D --(1 число если дата запуска скрипта с 16 по 31 и    16 число прошлого месяца если дата запуска с 1 по 15 текущего месяца)
 SELECT '20181101' BDate, --начало периода поиска по продажам в ElitR и дата создания всех документов
		'20181115' EDate  --конец периода поиска по продажам в ElitR
SELECT BDate, EDate FROM #D 

/*
1 перед запуском скриптов для нового периода импортируйте с медка реестры по РН и корректировкам за последнии 2 месяца и только зарегестрированые
  и вложите их в файлы: \\s-sql-d4\OT38ElitServer\Import\Реестр_Медок_дозаливка_J1201009.xlsx и  \\s-sql-d4\OT38ElitServer\Import\Реестр_Медок_Возвраты_дозаливка_J1201209.xlsx
  Начальная дата РН с 1.02.2017 ,  Начальная дата Корр с 1.02.2017
  РН (за последнии 2 месяца до начала наборов)- статус: зар.ЭРПН, Тип: ПН, Користувач: Вси, IПН: 410869004616, Напрямок: Виданий, Стан обработки: Вси
  Корр (за последнии 2 месяца до сегодня)- статус: зар.ЭРПН, Тип: Дод2, Користувач: Вси, IПН: 410869004616, Напрямок: Виданий, Стан обработки: Вси
  
2 высылает номера налоговых для возвратов 
 - нужно синхронизировать медок и РН
 - шаблон для заливки налоговых номеров в возвраты
*/
END

SELECT '$$$$$-- блок загрузки справочников --$$$$$'
IF 11=0
BEGIN  
	IF OBJECT_ID (N'tempdb..#TempRet', N'U') IS NOT NULL DROP TABLE #TempRet
	CREATE TABLE #TempRet ( N INT, ProdIDMA INT, ProdIDMA_Qty NUMERIC(21,9), ProdIDMA_RealPrice NUMERIC(21,9), ChID INT, DocID INT, TaxDocID INT, TaxDocDate SMALLDATETIME, ProdID INT, PPID INT, QtyInv NUMERIC(21,9), vozv_Elit NUMERIC(21,9), vozv_ElitDistr NUMERIC(21,9), QtyRet NUMERIC(21,9), rem NUMERIC(21,9), abs_razn NUMERIC(21,9), QtyRealRet NUMERIC(21,9), CodeID2 INT, SrcPosID_Inv INT, Pos_Medoc INT, sumQtyInv INT)
	
	IF OBJECT_ID (N'tempdb..#TempRetFinal', N'U') IS NOT NULL DROP TABLE #TempRetFinal
	CREATE TABLE #TempRetFinal ( N INT, ProdIDMA INT, ProdIDMA_Qty NUMERIC(21,9), ProdIDMA_RealPrice NUMERIC(21,9), ChID INT, DocID INT, TaxDocID INT, TaxDocDate SMALLDATETIME, ProdID INT, PPID INT, QtyInv NUMERIC(21,9), vozv_Elit NUMERIC(21,9), vozv_ElitDistr NUMERIC(21,9), QtyRet NUMERIC(21,9), rem NUMERIC(21,9), abs_razn NUMERIC(21,9), QtyRealRet NUMERIC(21,9), CodeID2 INT, SrcPosID_Inv INT, Pos_Medoc INT, sumQtyInv INT)

	IF OBJECT_ID (N'tempdb..#TempFindProdElit', N'U') IS NOT NULL DROP TABLE #TempFindProdElit
	CREATE TABLE #TempFindProdElit (N INT, ProdIDMA INT, ProdIDMA_Qty NUMERIC(21,9), ProdID_Elit INT, DNN SMALLDATETIME, NNN INT, ProdName VARCHAR(250), UM VARCHAR(50), Pos INT, TQty NUMERIC(21,9), Price NUMERIC(21,9), SumCC NUMERIC(21,9), QtyRealRet NUMERIC(21,9), CodeID2 INT, rating INT )

	IF OBJECT_ID (N'tempdb..#TempFindProdElitAll', N'U') IS NOT NULL DROP TABLE #TempFindProdElitAll
	CREATE TABLE #TempFindProdElitAll (N INT, ProdIDMA INT, ProdIDMA_Qty NUMERIC(21,9), ProdID_Elit INT, DNN SMALLDATETIME, NNN INT, ProdName VARCHAR(250), UM VARCHAR(50), Pos INT, TQty NUMERIC(21,9), Price NUMERIC(21,9), SumCC NUMERIC(21,9), QtyRealRet NUMERIC(21,9), CodeID2 INT, rating INT )

	IF OBJECT_ID (N'tempdb..#TempFindProdElitAll_tmp', N'U') IS NOT NULL DROP TABLE #TempFindProdElitAll_tmp
	CREATE TABLE #TempFindProdElitAll_tmp (N INT, ProdIDMA INT, ProdIDMA_Qty NUMERIC(21,9), ProdID_Elit INT, DNN SMALLDATETIME, NNN INT, ProdName VARCHAR(250), UM VARCHAR(50), Pos INT, TQty NUMERIC(21,9), Price NUMERIC(21,9), SumCC NUMERIC(21,9), QtyRealRet NUMERIC(21,9), CodeID2 INT, rating INT )

	--загружаем справочник по наборам
	IF OBJECT_ID (N'tempdb..#ProdIdNabor', N'U') IS NOT NULL DROP TABLE #ProdIdNabor
	CREATE TABLE #ProdIdNabor(ProdIDMA int null, ProdID int null, ProdIdNabor int null, ProdName varchar(250))
	INSERT #ProdIdNabor
		SELECT distinct * FROM OPENROWSET('Microsoft.ACE.OLEDB.12.0', N'Excel 12.0; IMEX=1; Database=\\s-sql-d4\OT38ElitServer\Import\ElitDistr\Справочник_наборов.xlsx' , 'select * from [Лист1$]') as ex;
	--SELECT * FROM #ProdIdNabor
	
	--загрузка приходов во временные таблицы
	IF OBJECT_ID (N'tempdb..#Rec1', N'U') IS NOT NULL DROP TABLE #Rec1
	CREATE TABLE #Rec1 (ProdID int null, PPID int null, TQty numeric(21,9) null, Price numeric(21,9) null)
	INSERT #Rec1
	SELECT r.ProdID, r.PPID, ISNULL(TRem.TQty,0), r.Price 
	FROM OPENROWSET('Microsoft.ACE.OLEDB.12.0', N'Excel 12.0; IMEX=1; Database=\\s-sql-d4\OT38ElitServer\Import\ElitDistr\import_t_Rec-ElitDistr.xlsx' , 'select * from [Основной товар$]') as R
	LEFT JOIN (SELECT ProdID, PPID, SUM(Qty) TQty FROM ElitDistr.dbo.t_Rem where OurID = 1 and StockID = 20 group by ProdID, PPID) TRem on TRem.ProdID = r.ProdID and TRem.PPID = r.PPID
	WHERE r.ProdID IS NOT NULL and r.PPID <> 0 and r.Price  > 0
	--SELECT distinct ProdID FROM #Rec1 ORDER BY 1,2 --30916
	--SELECT * FROM #Rec1 where ProdID in (30726,31395) ORDER BY 1
	--SELECT * FROM ElitDistr.dbo.t_Rem where OurID = 1 and StockID = 20 and ProdID in (32560)
	--SELECT * FROM ElitDistr.dbo.t_Ret m,ElitDistr.dbo.t_RetD d where m.chid=d.chid and m.OurID = 1 and m.StockID = 20 and d.ProdID in (32560)
	
	IF OBJECT_ID (N'tempdb..#Rec2', N'U') IS NOT NULL DROP TABLE #Rec2
	CREATE TABLE #Rec2 (ProdID int null, PPID int null, TQty numeric(21,9) null, Price numeric(21,9) null)
	INSERT #Rec2
	SELECT r.ProdID, r.PPID, ISNULL(TRem.TQty,0), r.Price 
	FROM OPENROWSET('Microsoft.ACE.OLEDB.12.0', N'Excel 12.0; IMEX=1; Database=\\s-sql-d4\OT38ElitServer\Import\ElitDistr\import_t_Rec-ElitDistr.xlsx' , 'select * from [Мусор$]') as R
	LEFT JOIN (SELECT ProdID, PPID, SUM(Qty) TQty FROM ElitDistr.dbo.t_Rem where OurID = 1 and StockID = 20 group by ProdID, PPID) TRem on TRem.ProdID = r.ProdID and TRem.PPID = r.PPID
	WHERE r.ProdID IS NOT NULL and r.PPID <> 0 and r.Price  > 0
	--SELECT * FROM #Rec2 ORDER BY 1,2

	IF OBJECT_ID (N'tempdb..#Rec3', N'U') IS NOT NULL DROP TABLE #Rec3
	CREATE TABLE #Rec3 (ProdID int null, PPID int null, TQty numeric(21,9) null, Price numeric(21,9) null)
	INSERT #Rec3
	SELECT r.ProdID, r.PPID, ISNULL(TRem.TQty,0), r.Price 
	FROM OPENROWSET('Microsoft.ACE.OLEDB.12.0', N'Excel 12.0; IMEX=1; Database=\\s-sql-d4\OT38ElitServer\Import\ElitDistr\import_t_Rec-ElitDistr.xlsx' , 'select * from [Чай$]') as R
	LEFT JOIN (SELECT ProdID, PPID, SUM(Qty) TQty FROM ElitDistr.dbo.t_Rem where OurID = 1 and StockID = 20 group by ProdID, PPID) TRem on TRem.ProdID = r.ProdID and TRem.PPID = r.PPID
	WHERE r.ProdID IS NOT NULL and r.PPID <> 0 and r.Price  > 0
	and EXISTS ( SELECT top 1 1 FROM r_Prods p where p.ProdID = R.ProdID);-- не добавлять в приход товары которых нет в справочнике товаров
	--select distinct ProdID from #Rec3


/*
	--проверка по реестру РН
	IF OBJECT_ID (N'tempdb..#Reestr_RN', N'U') IS NOT NULL DROP TABLE #Reestr_RN
	SELECT distinct * 
	 INTO #Reestr_RN
	FROM OPENROWSET('Microsoft.ACE.OLEDB.12.0', N'Excel 12.0; IMEX=1; Database=\\s-sql-d4\OT38ElitServer\Import\ElitDistr\Реестр_РН.xls' , 'select * from [Sheet1$]') as ex;
	--SELECT * FROM #Reestr_RN
	--SELECT distinct [Реєстр# номер] FROM #Reestr_RN where [Реєстр# номер] is not null ORDER BY 1
	SELECT [Реєстр# номер],* FROM #Reestr_RN where [Реєстр# номер] is not null and [Реєстр# номер] not in (SELECT distinct SEND_DPA_RN FROM ElitDistr.dbo.at_t_Medoc)
	--SELECT SEND_DPA_RN,* FROM ElitDistr.dbo.at_t_Medoc where SEND_DPA_RN is not null and SEND_DPA_RN not in (SELECT distinct [Реєстр# номер] FROM #Reestr_RN where [Реєстр# номер] is not null)
	
	SELECT SEND_DPA_RN,* FROM ElitDistr.dbo.at_t_Medoc where SEND_DPA_RN in (9198202772,9198203400,9171938011,9171940247) 
	--delete ElitDistr.dbo.at_t_Medoc where SEND_DPA_RN in (9198202772,9198203400,9171938011,9171940247) 
	
	SELECT * FROM #Reestr_RN where cast([Реєстр# номер] as bigint)  in (9127136002,9128366659,9132340078) 
	SELECT * FROM #Reestr_RN where [Реєстр# номер]like '%9127136002%'
		
	SELECT *
	FROM ElitDistr.dbo.at_t_Medoc where SEND_DPA_RN in (	SELECT [Реєстр# номер] FROM #Reestr_RN where [Реєстр# номер] is not null and [Реєстр# номер] not in (SELECT distinct SEND_DPA_RN FROM ElitDistr.dbo.at_t_Medoc) group by [Реєстр# номер] ) ORDER BY SEND_DPA_RN

	--проверка по реестру корректировок
	IF OBJECT_ID (N'tempdb..#Reestr_kor', N'U') IS NOT NULL DROP TABLE #Reestr_kor
	SELECT distinct * 
	 INTO #Reestr_kor
	FROM OPENROWSET('Microsoft.ACE.OLEDB.12.0', N'Excel 12.0; IMEX=1; Database=\\s-sql-d4\OT38ElitServer\Import\ElitDistr\Реестр_корректировок.xls' , 'select * from [Sheet1$]') as ex;
	SELECT * FROM #Reestr_kor
	SELECT distinct [Реєстр# номер] FROM #Reestr_kor where [Реєстр# номер] is not null ORDER BY 1
	SELECT [Реєстр# номер] FROM #Reestr_kor where [Реєстр# номер] is not null group by [Реєстр# номер] having COUNT( [Реєстр# номер]) <> 1 ORDER BY 1
SELECT [Реєстр# номер],* FROM #Reestr_kor where [Реєстр# номер] is not null and [Реєстр# номер] not in (SELECT distinct SEND_DPA_RN FROM ElitDistr.dbo.at_t_Medoc_ret)
	
	SELECT SEND_DPA_DATE, SEND_DPA_RN SEND_DPA_RN_,TAB1_A01, TAB1_A011, TAB1_A013,  TAB1_A2, TAB1_A3, TAB1_A31 ,*
	FROM ElitDistr.dbo.at_t_Medoc_RET where SEND_DPA_RN in (9127136002,9128366659,9132340078) ORDER BY SEND_DPA_RN
		
	SELECT * FROM #Reestr_kor where [Реєстр# номер] in (9127136002,9128366659,9132340078) ORDER BY [Реєстр# номер]
	
	--SELECT * FROM #Rec3 ORDER BY 1,2
	
630002, 632577
	SELECT * FROM ElitDistr.dbo.r_Prods where ProdID in (630002,630003,630004,630013,630014,630015,630018,630029,630030,630031,630032,630033,630034,630035,630036,630037,630038,630039,630040,630041,630042,630043,630044,630045,630046,630047,630050,630053,630054,630056,630057,630061,630062,630063,630064,630065,630066,630070,630071,630083,630084,630085,630086,630087,630088,630089,630090,630091,630092,630093,630094,630095,630096,630097,630098,630099,630100,630101,630102,630103,630104,630105,630106,630108,630109,630110,630111,630112,630113,630114,630115,630116,630117,630118,630119,630120,630121,630122,630123,630124,630125,630126,630127,630128,630129,630130,630131,630133,630134,630136,630144,630145,630146,630149,630152,630155,630176,630182,630183,630184,630185,630188,630189,630190,630192,630193,630195,630196,630197,630198,630199,630200,630202,630203,630205,630206,630208,630209,630210,630211,630214,630215,630216,630217,630218,630219,632328,632329,632330,632331,632332,632333,632334,632335,632336,632337,632338,632339,632340,632341,632342,632343,632344,632345,632346,632347,632348,632349,632350,632351,632352,632353,632354,632355,632356,632357,632358,632359,632361,632362,632363,632364,632366,632367,632368,632369,632370,632371,632372,632373,632374,632375,632376,632377,632378,632379,632380,632381,632382,632383,632384,632385,632386,632388,632389,632390,632391,632392,632393,632394,632395,632396,632397,632398,632399,632400,632401,632402,632403,632404,632405,632406,632407,632408,632409,632410,632411,632412,632413,632414,632415,632416,632417,632418,632419,632420,632421,632422,632423,632424,632425,632426,632427,632428,632429,632430,632431,632432,632433,632434,632435,632436,632437,632438,632439,632440,632441,632442,632443,632444,632445,632446,632447,632448,632449,632450,632451,632452,632454,632455,632456,632457,632458,632459,632460,632461,632462,632463,632464,632465,632466,632467,632468,632469,632470,632471,632472,632473,632474,632475,632476,632477,632478,632479,632480,632481,632482,632483,632484,632485,632486,632487,632488,632489,632490,632492,632494,632496,632498,632500,632502,632503,632504,632508,632509,632513,632515,632516,632517,632518,632519,632520,632521,632522,632523,632524,632525,632526,632527,632528,632529,632530,632531,632532,632533,632534,632535,632536,632537,632538,632539,632541,632542,632544,632552,632571,632572,632573,632574,632577,632578)
	SELECT distinct ProdID, ProdName FROM OPENROWSET('Microsoft.ACE.OLEDB.12.0', N'Excel 12.0; IMEX=1; Database=\\s-sql-d4\OT38ElitServer\Import\ElitDistr\import_t_Rec-ElitDistr.xlsx' , 'select * from [Чай$]') as R
	WHERE ProdID in (432453,600830,632579,632580,632581,632582,632584,632585,632586,632587,632589,632591,632592,632593,632594,632595,632596,632597,632598,632599,632600,632601,632602,632603,632604,632605,632606,632607,632608,632609,632610,632611,632612,632613,632614,632615,632616,632617,632618,632619,632620,632621,632622,632623,632624,632625,632626,632627,632628,632629,632630,632631,632632,632633,632634,632635,632636,632637,632663,632733,632734,636637,636638,636639,636656,636659,636660,636661,636669,636683,636684,636685,636686,636687,636688,636689,636690,636691,636692,636693,636694,636695,636696,636697,636698,636699,636700,636701,636702,636703,636704,636705,636706,636707,636708,636709,636710,636711,636712,636713,636714,636715,636716,636717,636718,636719,636720,636721,636722,636723,636724,636725,636726,636727,636728,636729,636730,636731,636732,636733,636734,636735,636736,636737,636738,636739,636740,636741,636742,636743,636744,636745,636746,636747,636748,636749,636750,636751,636752,636753,636754,636755,636756,636757,636758,636759)

--товары которых нет в ElitDistr.dbo.r_Prods
SELECT distinct ProdID FROM #Rec3 where ProdID not in (SELECT distinct ProdID FROM ElitDistr.dbo.r_Prods ) ORDER BY 1

--добавить новые товары в ElitDistr.dbo.r_Prods_	
DECLARE @ProdID INT, @ProdName varchar(250)
DECLARE CURSOR1 CURSOR LOCAL FAST_FORWARD
FOR 
	SELECT distinct ProdID, ProdName FROM OPENROWSET('Microsoft.ACE.OLEDB.12.0', N'Excel 12.0; IMEX=1; Database=\\s-sql-d4\OT38ElitServer\Import\ElitDistr\import_t_Rec-ElitDistr.xlsx' , 'select * from [Чай$]') as R
	WHERE ProdID in (432453,600830,632579,632580,632581,632582,632584,632585,632586,632587,632589,632591,632592,632593,632594,632595,632596,632597,632598,632599,632600,632601,632602,632603,632604,632605,632606,632607,632608,632609,632610,632611,632612,632613,632614,632615,632616,632617,632618,632619,632620,632621,632622,632623,632624,632625,632626,632627,632628,632629,632630,632631,632632,632633,632634,632635,632636,632637,632663,632733,632734,636637,636638,636639,636656,636659,636660,636661,636669,636683,636684,636685,636686,636687,636688,636689,636690,636691,636692,636693,636694,636695,636696,636697,636698,636699,636700,636701,636702,636703,636704,636705,636706,636707,636708,636709,636710,636711,636712,636713,636714,636715,636716,636717,636718,636719,636720,636721,636722,636723,636724,636725,636726,636727,636728,636729,636730,636731,636732,636733,636734,636735,636736,636737,636738,636739,636740,636741,636742,636743,636744,636745,636746,636747,636748,636749,636750,636751,636752,636753,636754,636755,636756,636757,636758,636759)

OPEN CURSOR1
	FETCH NEXT FROM CURSOR1 INTO @ProdID, @ProdName
WHILE @@FETCH_STATUS = 0
BEGIN
	--Script
	--INSERT ElitDistr.dbo.r_Prods_
		SELECT (SELECT ISNULL(MAX(ChID) + 1, 1) FROM ElitDistr.dbo.r_Prods_ ) ChID, @ProdID ProdID, @ProdName ProdName, UM, Country, Notes, PCatID, PGrID, Article1, Article2, Article3, Weight, Age, TaxPercent, PriceWithTax, Note1, Note2, Note3, MinPriceMC, MaxPriceMC, MinRem, CstDty, CstPrc, CstExc, StdExtraR, StdExtraE, MaxExtra, MinExtra, UseAlts, UseCrts, PGrID1, PGrID2, PGrID3, PGrAID, PBGrID, LExpSet, EExpSet, InRems, IsDecQty, File1, File2, File3, AutoSet, Extra1, Extra2, Extra3, Extra4, Extra5, Norma1, Norma2, Norma3, Norma4, Norma5, RecMinPriceCC, RecMaxPriceCC, RecStdPriceCC, RecRemQty, InStopList, PrepareTime, AmortID, WeightGr, WeightGrWP, PGrID4, PGrID5, DistrID, ImpID, FEAprodID, ScaleGrID, ScaleStandard, ScaleConditions, ScaleComponents, ExcCostCC, CstDtyNotes, CstExcNotes, BoxVolume, SalesChannelID, IndRetPriceCC, IndWSPriceCC, SupID
		FROM ElitDistr.dbo.r_Prods_ where ProdID = 630002
	INSERT ElitDistr.dbo.r_ProdMQ_	
		SELECT @ProdID ProdID, UM, Qty, Weight, Notes, cast(@ProdID as varchar)+'_шт' BarCode, cast(@ProdID as varchar)+'_шт' ProdBarCode, PLID 
		FROM r_ProdMQ_ WHERE ProdID = 630002
	 
	FETCH NEXT FROM CURSOR1 INTO @ProdID, @ProdName
END
CLOSE CURSOR1
DEALLOCATE CURSOR1

SELECT * FROM ElitDistr.dbo.r_Prods where ProdID in (432453,600830,632579,632580,632581,632582,632584,632585,632586,632587,632589,632591,632592,632593,632594,632595,632596,632597,632598,632599,632600,632601,632602,632603,632604,632605,632606,632607,632608,632609,632610,632611,632612,632613,632614,632615,632616,632617,632618,632619,632620,632621,632622,632623,632624,632625,632626,632627,632628,632629,632630,632631,632632,632633,632634,632635,632636,632637,632663,632733,632734,636637,636638,636639,636656,636659,636660,636661,636669,636683,636684,636685,636686,636687,636688,636689,636690,636691,636692,636693,636694,636695,636696,636697,636698,636699,636700,636701,636702,636703,636704,636705,636706,636707,636708,636709,636710,636711,636712,636713,636714,636715,636716,636717,636718,636719,636720,636721,636722,636723,636724,636725,636726,636727,636728,636729,636730,636731,636732,636733,636734,636735,636736,636737,636738,636739,636740,636741,636742,636743,636744,636745,636746,636747,636748,636749,636750,636751,636752,636753,636754,636755,636756,636757,636758,636759 )
SELECT * FROM ElitDistr.dbo.r_ProdMQ_ where ProdID in (432453,600830,632579,632580,632581,632582,632584,632585,632586,632587,632589,632591,632592,632593,632594,632595,632596,632597,632598,632599,632600,632601,632602,632603,632604,632605,632606,632607,632608,632609,632610,632611,632612,632613,632614,632615,632616,632617,632618,632619,632620,632621,632622,632623,632624,632625,632626,632627,632628,632629,632630,632631,632632,632633,632634,632635,632636,632637,632663,632733,632734,636637,636638,636639,636656,636659,636660,636661,636669,636683,636684,636685,636686,636687,636688,636689,636690,636691,636692,636693,636694,636695,636696,636697,636698,636699,636700,636701,636702,636703,636704,636705,636706,636707,636708,636709,636710,636711,636712,636713,636714,636715,636716,636717,636718,636719,636720,636721,636722,636723,636724,636725,636726,636727,636728,636729,636730,636731,636732,636733,636734,636735,636736,636737,636738,636739,636740,636741,636742,636743,636744,636745,636746,636747,636748,636749,636750,636751,636752,636753,636754,636755,636756,636757,636758,636759 )

SELECT * FROM r_ProdMQ WHERE ProdID = 630002 and UM = @UM /*штрихкод*/
SELECT * FROM r_ProdMQ WHERE ProdID = 432453 and UM = @UM /*штрихкод*/
	
	SELECT distinct ProdID, ProdName FROM ElitDistr.dbo.r_Prods where ProdID in (630002,630003,630004,630013,630014,630015,630018,630029,630030,630031,630032,630033,630034,630035,630036,630037,630038,630039,630040,630041,630042,630043,630044,630045,630046,630047,630050,630053,630054,630056,630057,630061,630062,630063,630064,630065,630066,630070,630071,630083,630084,630085,630086,630087,630088,630089,630090,630091,630092,630093,630094,630095,630096,630097,630098,630099,630100,630101,630102,630103,630104,630105,630106,630108,630109,630110,630111,630112,630113,630114,630115,630116,630117,630118,630119,630120,630121,630122,630123,630124,630125,630126,630127,630128,630129,630130,630131,630133,630134,630136,630144,630145,630146,630149,630152,630155,630176,630182,630183,630184,630185,630188,630189,630190,630192,630193,630195,630196,630197,630198,630199,630200,630202,630203,630205,630206,630208,630209,630210,630211,630214,630215,630216,630217,630218,630219,632328,632329,632330,632331,632332,632333,632334,632335,632336,632337,632338,632339,632340,632341,632342,632343,632344,632345,632346,632347,632348,632349,632350,632351,632352,632353,632354,632355,632356,632357,632358,632359,632361,632362,632363,632364,632366,632367,632368,632369,632370,632371,632372,632373,632374,632375,632376,632377,632378,632379,632380,632381,632382,632383,632384,632385,632386,632388,632389,632390,632391,632392,632393,632394,632395,632396,632397,632398,632399,632400,632401,632402,632403,632404,632405,632406,632407,632408,632409,632410,632411,632412,632413,632414,632415,632416,632417,632418,632419,632420,632421,632422,632423,632424,632425,632426,632427,632428,632429,632430,632431,632432,632433,632434,632435,632436,632437,632438,632439,632440,632441,632442,632443,632444,632445,632446,632447,632448,632449,632450,632451,632452,632454,632455,632456,632457,632458,632459,632460,632461,632462,632463,632464,632465,632466,632467,632468,632469,632470,632471,632472,632473,632474,632475,632476,632477,632478,632479,632480,632481,632482,632483,632484,632485,632486,632487,632488,632489,632490,632492,632494,632496,632498,632500,632502,632503,632504,632508,632509,632513,632515,632516,632517,632518,632519,632520,632521,632522,632523,632524,632525,632526,632527,632528,632529,632530,632531,632532,632533,632534,632535,632536,632537,632538,632539,632541,632542,632544,632552,632571,632572,632573,632574,632577,632578)
	except
	SELECT distinct ProdID, ProdName FROM OPENROWSET('Microsoft.ACE.OLEDB.12.0', N'Excel 12.0; IMEX=1; Database=\\s-sql-d4\OT38ElitServer\Import\ElitDistr\import_t_Rec-ElitDistr.xlsx' , 'select * from [Чай$]') as R
	WHERE ProdID in (630002,630003,630004,630013,630014,630015,630018,630029,630030,630031,630032,630033,630034,630035,630036,630037,630038,630039,630040,630041,630042,630043,630044,630045,630046,630047,630050,630053,630054,630056,630057,630061,630062,630063,630064,630065,630066,630070,630071,630083,630084,630085,630086,630087,630088,630089,630090,630091,630092,630093,630094,630095,630096,630097,630098,630099,630100,630101,630102,630103,630104,630105,630106,630108,630109,630110,630111,630112,630113,630114,630115,630116,630117,630118,630119,630120,630121,630122,630123,630124,630125,630126,630127,630128,630129,630130,630131,630133,630134,630136,630144,630145,630146,630149,630152,630155,630176,630182,630183,630184,630185,630188,630189,630190,630192,630193,630195,630196,630197,630198,630199,630200,630202,630203,630205,630206,630208,630209,630210,630211,630214,630215,630216,630217,630218,630219,632328,632329,632330,632331,632332,632333,632334,632335,632336,632337,632338,632339,632340,632341,632342,632343,632344,632345,632346,632347,632348,632349,632350,632351,632352,632353,632354,632355,632356,632357,632358,632359,632361,632362,632363,632364,632366,632367,632368,632369,632370,632371,632372,632373,632374,632375,632376,632377,632378,632379,632380,632381,632382,632383,632384,632385,632386,632388,632389,632390,632391,632392,632393,632394,632395,632396,632397,632398,632399,632400,632401,632402,632403,632404,632405,632406,632407,632408,632409,632410,632411,632412,632413,632414,632415,632416,632417,632418,632419,632420,632421,632422,632423,632424,632425,632426,632427,632428,632429,632430,632431,632432,632433,632434,632435,632436,632437,632438,632439,632440,632441,632442,632443,632444,632445,632446,632447,632448,632449,632450,632451,632452,632454,632455,632456,632457,632458,632459,632460,632461,632462,632463,632464,632465,632466,632467,632468,632469,632470,632471,632472,632473,632474,632475,632476,632477,632478,632479,632480,632481,632482,632483,632484,632485,632486,632487,632488,632489,632490,632492,632494,632496,632498,632500,632502,632503,632504,632508,632509,632513,632515,632516,632517,632518,632519,632520,632521,632522,632523,632524,632525,632526,632527,632528,632529,632530,632531,632532,632533,632534,632535,632536,632537,632538,632539,632541,632542,632544,632552,632571,632572,632573,632574,632577,632578)

	SELECT distinct ProdID FROM #Rec3 ORDER BY 1
	SELECT * FROM #Rec3 where ProdID not in (SELECT distinct ProdID FROM ElitDistr.dbo.r_Prods ) ORDER BY 1
	SELECT distinct ProdID FROM #Rec3 where ProdID in (SELECT distinct ProdID FROM ElitDistr.dbo.r_Prods ) ORDER BY 1
	SELECT distinct ProdID FROM #Rec3 where ProdID not in (SELECT distinct ProdID FROM Elit.dbo.r_Prods ) ORDER BY 1
	SELECT distinct ProdID FROM #Rec3 where ProdID not in (SELECT distinct ProdID FROM ElitR.dbo.r_Prods ) ORDER BY 1
	
	*/


/*реестры с Медок*/
/*
	--загружаем справочник с медка реестр налоговых накладных
	IF OBJECT_ID (N'ElitDistr.dbo.at_t_Medoc', N'U') IS NOT NULL DROP TABLE ElitDistr.dbo.at_t_Medoc
	SELECT * 
	 INTO ElitDistr.dbo.at_t_Medoc	
	FROM OPENROWSET('Microsoft.ACE.OLEDB.12.0', N'Excel 12.0; IMEX=1; Database=\\s-sql-d4\OT38ElitServer\Import\Реестр_Медок.xlsx' , 'select * from [Лист1$]') as ex;
	--SELECT * FROM ElitDistr.dbo.at_t_Medoc
	
	--загружаем справочник с медка по возвратам
	IF OBJECT_ID (N'ElitDistr.dbo.at_t_Medoc_RET', N'U') IS NOT NULL DROP TABLE ElitDistr.dbo.at_t_Medoc_RET
	SELECT * 
	 INTO ElitDistr.dbo.at_t_Medoc_RET	
	FROM OPENROWSET('Microsoft.ACE.OLEDB.12.0', N'Excel 12.0; IMEX=1; Database=\\s-sql-d4\OT38ElitServer\Import\Реестр_Медок_Возвраты.xlsx' , 'select * from [Лист1$]') as ex;
    --SELECT * FROM ElitDistr.dbo.at_t_Medoc_RET WHERE SEND_DPA_RN = '' OR SEND_DPA_RN IS NULL
	
*/

	--догружаем справочник с медка реестр налоговых накладных
	IF OBJECT_ID (N'tempdb..#Medoc', N'U') IS NOT NULL DROP TABLE #Medoc
	SELECT * 
	 INTO #Medoc	
	FROM OPENROWSET('Microsoft.ACE.OLEDB.12.0', N'Excel 12.0; IMEX=1; Database=\\s-sql-d4\OT38ElitServer\Import\Реестр_Медок_дозаливка_J1201009.xlsx' , 'select * from [Лист1$]') as ex;
	--SELECT * FROM #Medoc
	--Удалить не зарегестрированные РН
	DELETE ElitDistr.dbo.at_t_Medoc WHERE SEND_DPA_RN = '' OR SEND_DPA_RN IS NULL
	--Добавить новые и зарегестрированные РН
	SELECT * FROM #Medoc WHERE SEND_DPA_RN <> '' and SEND_DPA_RN not in (SELECT SEND_DPA_RN FROM ElitDistr.dbo.at_t_Medoc)
	INSERT ElitDistr.dbo.at_t_Medoc
		SELECT * FROM #Medoc WHERE SEND_DPA_RN <> '' and SEND_DPA_RN not in (SELECT SEND_DPA_RN FROM ElitDistr.dbo.at_t_Medoc)	
/*	
BEGIN TRAN

	INSERT ElitDistr.dbo.at_t_Medoc (SN)
		SELECT top 1000 --* 
		 SN--, *
		FROM #Medoc WHERE SEND_DPA_RN <> '' and SEND_DPA_RN not in (SELECT SEND_DPA_RN FROM ElitDistr.dbo.at_t_Medoc) and TAB1_A133 is null
	--INSERT ElitDistr.dbo.at_t_Medoc
	--	SELECT * FROM #Medoc WHERE SEND_DPA_RN <> '' and SEND_DPA_RN not in (SELECT SEND_DPA_RN FROM ElitDistr.dbo.at_t_Medoc) and TAB1_A133 is  null

	--SELECT * FROM #Medoc WHERE SEND_DPA_RN in (9215482561,9205365004)

	--insert at_t_Medoc
	--	SELECT * FROM ElitDistr.dbo.at_t_Medoc_ 

ROLLBACK TRAN	
*/	
		
	--догружаем справочник с медка по корректировкам
	IF OBJECT_ID (N'tempdb..#Medoc_RET', N'U') IS NOT NULL DROP TABLE #Medoc_RET
	SELECT * 
	 INTO #Medoc_RET	
	FROM OPENROWSET('Microsoft.ACE.OLEDB.12.0', N'Excel 12.0; IMEX=1; Database=\\s-sql-d4\OT38ElitServer\Import\Реестр_Медок_Возвраты_дозаливка_J1201209.xlsx' , 'select * from [Лист1$]') as ex;
    --SELECT * FROM #Medoc_RET WHERE SEND_DPA_RN IS not NULL
	--Удалить не зарегестрированные корректировки к РН
	DELETE ElitDistr.dbo.at_t_Medoc_RET WHERE SEND_DPA_RN = '' OR SEND_DPA_RN IS NULL
	--Добавить новые и зарегестрированные корректировки к РН
	SELECT * FROM #Medoc_RET WHERE SEND_DPA_RN <> '' and SEND_DPA_RN not in (SELECT SEND_DPA_RN FROM ElitDistr.dbo.at_t_Medoc_RET)
	INSERT ElitDistr.dbo.at_t_Medoc_RET
		SELECT * FROM #Medoc_RET WHERE SEND_DPA_RN <> '' and SEND_DPA_RN not in (SELECT SEND_DPA_RN FROM ElitDistr.dbo.at_t_Medoc_RET) 
	
	
	--суммы в базах по медку 
	--зарегистрированные РН с 1.02.2017 
	SELECT SUM(TAB1_A10) 'Сумма без НДС. РН с 1.02.2017' FROM ElitDistr.dbo.at_t_Medoc
	SELECT COUNT(*) 'Кол. РН' FROM (SELECT SEND_DPA_RN FROM ElitDistr.dbo.at_t_Medoc group by SEND_DPA_RN) s1
	--зарегистрированные корр с 1.02.2017 
	SELECT SUM(TAB1_A013) 'Сумма без НДС. Корр с 1.02.2017'FROM ElitDistr.dbo.at_t_Medoc_RET
	SELECT COUNT(*) 'Кол. Корр' FROM (SELECT SEND_DPA_RN FROM ElitDistr.dbo.at_t_Medoc_RET group by SEND_DPA_RN) s1


	--таблица исключений РН
	  IF OBJECT_ID (N'tempdb..#NotInv', N'U') IS NOT NULL DROP TABLE #NotInv
		CREATE TABLE #NotInv (Num INT IDENTITY(1,1) NOT NULL ,TaxDocID INT null, TaxDocDate SMALLDATETIME null, ProdID INT NULL, Qty NUMERIC(21,9))
		
		INSERT #NotInv
		--="union all select "&C4&",'"&ТЕКСТ(D4;"ГГГГ-ММ-ДД")&"',"&H4&","&L4&""
		select           3614,'2017-04-11 00:00:00.000',null,null
		union all select 8248,'2017-04-24 00:00:00.000',null,null
		union all select 2832,'2017-05-11 00:00:00.000',null,null
		union all select 5651,'2017-06-19 00:00:00.000',null,null
		union all select 5847,'2017-12-19 00:00:00.000',null,null
		union all select 1432,'2017-06-06 00:00:00.000',null,null
		union all select 3462,'2017-05-12 00:00:00.000',null,null
		union all select 6885,'2018-09-21 00:00:00',null,null
		--еще списочек налоговых
		union all select 5257,'2017-05-17 00:00:00.000',null,null
		union all select 5763,'2017-05-18 00:00:00.000',null,null
		union all select 7706,'2017-05-24 00:00:00.000',null,null
		union all select 8955,'2017-05-26 00:00:00.000',null,null
		union all select  831,'2017-06-02 00:00:00.000',null,null
		union all select 1396,'2017-06-06 00:00:00.000',null,null
		union all select  808,'2017-07-04 00:00:00.000',null,null
		union all select 3063,'2017-07-11 00:00:00.000',null,null
		union all select 7092,'2017-07-21 00:00:00.000',null,null
		union all select 9516,'2017-08-29 00:00:00.000',null,null
		union all select 4653,'2017-10-13 00:00:00.000',null,null
		union all select 1294,'2017-11-03 00:00:00.000',null,null
		union all select 7081,'2017-11-21 00:00:00.000',null,null
		union all select 9530,'2017-11-28 00:00:00.000',null,null
		union all select 4151,'2018-02-13 00:00:00.000',null,null
		union all select 3809,'2017-05-13 00:00:00',null,NULL
		union all select 9918,'2017-05-30 00:00:00',null,NULL
		union all select 4628,'2018-10-12 00:00:00',null,null
			
		SELECT * FROM #NotInv


BEGIN TRAN
		
	UPDATE ElitDistr.dbo.at_t_Medoc SET TAB1_A13 = 'Коньяк Агмарті КВВК 8 років 40% 0,5*12' WHERE TAB1_A13 = 'Коньяк Агмарті КВВЯ 8 років 40% 0,5*12' AND N2_11 = 8984 AND N11 = '2017-10-27'


	SELECT * FROM ElitDistr.dbo.at_t_Medoc WHERE TAB1_A13 = 'Коньяк Агмарті КВВЯ 8 років 40% 0,5*12' AND N2_11 = 8984 AND N11 = '2017-10-27'
		
ROLLBACK TRAN
/*		


		SELECT * FROM #NotInv

SELECT distinct N2_11 NNN, N11 DNN FROM ElitDistr.dbo.at_t_Medoc where N2_11  in (SELECT TaxDocID FROM #NotInv) ORDER BY NNN,DNN
SELECT distinct N2_11 NNN,N2 DNN FROM ElitDistr.dbo.at_t_Medoc_RET  where N2_11  in (SELECT TaxDocID FROM #NotInv) ORDER BY NNN,DNN

SELECT TAB1_A1 Pos,TAB1_A13 ProdName, N2_11 NNN, N11 DNN, TAB1_A14 UM, TAB1_A15 Qty, TAB1_A16 Price ,  TAB1_A10 SumCC, 1 TypeDoc
FROM ElitDistr.dbo.at_t_Medoc where N2_11  in (SELECT TaxDocID FROM #NotInv)
ORDER BY NNN,DNN

SELECT TAB1_A01 Pos,TAB1_A3 ProdName, N2_11 NNN,N2 DNN,TAB1_A4 UM ,TAB1_A5 Qty,TAB1_A6 Price, TAB1_A013 SumCC,  2 TypeDoc
FROM ElitDistr.dbo.at_t_Medoc_RET  where N2_11  in (SELECT TaxDocID FROM #NotInv)
ORDER BY DNN
		
		
*/  
	
/*	
проверить в Реестр_Медок.xlsx поле N11
проверить в Реестр_Медок_Возвраты.xlsx поле N2

SELECT TAB1_A1 Pos,TAB1_A13 ProdName, N2_11 NNN, N11 DNN, TAB1_A14 UM, TAB1_A15 Qty, TAB1_A16 Price ,  TAB1_A10 SumCC, 1 TypeDoc
FROM ElitDistr.dbo.at_t_Medoc 

SELECT TAB1_A01 Pos,TAB1_A3 ProdName, N2_11 NNN,N2 DNN,TAB1_A4 UM ,TAB1_A5 Qty,TAB1_A6 Price, TAB1_A013 SumCC,  2 TypeDoc
FROM ElitDistr.dbo.at_t_Medoc_RET 

	--Добавить новые и не зарегестрированные корректировки к РН
	INSERT ElitDistr.dbo.at_t_Medoc_RET
		SELECT * FROM #Medoc_RET WHERE ISNULL(SEND_DPA_RN,'') not in (SELECT SEND_DPA_RN FROM ElitDistr.dbo.at_t_Medoc_RET) 
		
	SELECT count(*) FROM ElitDistr.dbo.at_t_Medoc
	SELECT count(*) FROM ElitDistr.dbo.at_t_Medoc_RET
	14.06.2018 14.12 at_t_Medoc 45425  at_t_Medoc_RET 8402	
	18.06.2018 15.21 at_t_Medoc 45425  at_t_Medoc_RET 8543	
	18.06.2018 17.40 at_t_Medoc 45425  at_t_Medoc_RET 8402	
	18.06.2018 17.40 at_t_Medoc 44761  at_t_Medoc_RET 8549	
	19.06.2018 15.50 at_t_Medoc 44761  at_t_Medoc_RET 8673	
	
	SELECT sum(TAB1_A10) FROM ElitDistr.dbo.at_t_Medoc
54515552,76
54515552,7600001

	SELECT sum(TAB1_A013) FROM ElitDistr.dbo.at_t_Medoc_RET
-8249127,97
-8249127,97000001

	SELECT * FROM #Medoc_RET WHERE SEND_DPA_RN <> '' and SEND_DPA_RN not in (SELECT SEND_DPA_RN FROM ElitDistr.dbo.at_t_Medoc) 
	SELECT * FROM ElitDistr.dbo.at_t_Medoc
	SELECT * FROM ElitDistr.dbo.at_t_Medoc_RET WHERE SEND_DPA_RN = '' OR SEND_DPA_RN IS NULL
	SELECT * FROM #Medoc_RET WHERE SEND_DPA_RN = '' OR SEND_DPA_RN IS NULL
   
	
	--загружаем справочник с медка реестр налоговых накладных
	IF OBJECT_ID (N'tempdb..#Medoc', N'U') IS NOT NULL DROP TABLE #Medoc
	SELECT * 
	 INTO #Medoc	
	FROM OPENROWSET('Microsoft.ACE.OLEDB.12.0', N'Excel 12.0; IMEX=1; Database=\\s-sql-d4\OT38ElitServer\Import\Реестр_Медок.xlsx' , 'select * from [Лист1$]') as ex;
	--SELECT * FROM #Medoc
	
	--загружаем справочник с медка по возвратам
	IF OBJECT_ID (N'tempdb..#Medoc_RET', N'U') IS NOT NULL DROP TABLE #Medoc_RET
	SELECT * 
	 INTO #Medoc_RET	
	FROM OPENROWSET('Microsoft.ACE.OLEDB.12.0', N'Excel 12.0; IMEX=1; Database=\\s-sql-d4\OT38ElitServer\Import\Реестр_Медок_Возвраты.xlsx' , 'select * from [Лист1$]') as ex;
    --SELECT * FROM #Medoc_RET

	--SELECT * into ElitDistr.dbo.at_t_Medoc_Ret_original FROM ElitDistr.dbo.at_t_Medoc_Ret
*/

  
    
END
--##############################################################################
SELECT '##### Основной расчет'
IF 12=0
BEGIN

DECLARE @Testing INT = 0 --  1-отладка   0-не выводить доп. результыты
DECLARE @BDate SMALLDATETIME = (SELECT top 1 BDate FROM #D)--'2018-08-16' --начало периода поиска по продажам в ElitR
DECLARE @EDate SMALLDATETIME = (SELECT top 1 EDate FROM #D) --'2018-08-31' --конец периода поиска по продажам в ElitR
--DECLARE @BDateInv SMALLDATETIME = '2017-03-01' --начало периода поиска по РН
--DECLARE @EDateInv SMALLDATETIME = '2018-05-15' --конец периода поиска по РН
--DECLARE @LastDayMount SMALLDATETIME = '2018-03-31' --последний день предыдущего месяца
DECLARE @ProdIDMA INT 
DECLARE @ProdID_Elit INT
DECLARE @FindProdID_Elit INT
DECLARE @ProdIDMA_Qty NUMERIC(21,9)
DECLARE @ProdIDMA_RetQty NUMERIC(21,9)
DECLARE @ProdIDMA_RealPrice NUMERIC(21,9)
DECLARE @ProdIDMA_SumQty NUMERIC(21,9) 
DECLARE @PPID_Inv INT 


--формируем список товаров в ElitR по которым ищем продажи
DECLARE @ChIDTable TABLE(ChID int NULL) 
INSERT INTO @ChIDTable 
	--SELECT max(num) FROM #NotInv group by ProdID --для ручного подбора возвратов
	SELECT AValue FROM dbo.zf_FilterToTable('802440,800780,803003,802443,600894,802396,800353,802466,600736,600297,  600072,600132,600133,600134,600135,600136,600159,600160,600168,600267,600267,600299,600712,600712,600721,600721,600731,600732,600742,600743,600744,600745,600757,600757,600758,600758,600758,600760,600760,600773,600773,600816,600816,600816,600832,600839,600839,600840,600840,600882,600883,600883,600884,600884,600884,600884,600884,600885,600885,600887,600891,600891,600892,600895,600895,600987,601070,601070,601078,601085,601085,601085,601085,601086,601095,601095,601105,601106,601111,601115,601116,601626,601773,601784,602042,602290,602505,602507,602563,602563,602563,602564,602564,602669,602669,602755,602755,603053,603053,603053,603928,603936,603975,604603,604851,604979,604980,604980,800084,800084,800164,800164,800164,800165,800165,800594,800594,800594,800621,800779,801098,801099,801301,801451,801562,801563,801564,801565,801642,801720,801721,801935,801949,801952,802174,802185,802375,802376,802394,802399,802402,802408,802412,802412,802424,802424,802471,802484,802485,802486,802489,802489,802490,802490,802511,802650,802651,802656,802657,802705,802705,802751,802751,802752,802982,803013,803013,803016')
	--SELECT AValue FROM dbo.zf_FilterToTable('600072,600132,600133,600134,600135,600136,600159,600160,600168,600267,600267,600299,600712,600712,600721,600721,600731,600732,600742,600743,600744,600745,600757,600757,600758,600758,600758,600760,600760,600773,600773,600816,600816,600816,600832,600839,600839,600840,600840,600882,600883,600883,600884,600884,600884,600884,600884,600885,600885,600887,600891,600891,600892,600895,600895,600987,601070,601070,601078,601085,601085,601085,601085,601086,601095,601095,601105,601106,601111,601115,601116,601626,601773,601784,602042,602290,602505,602507,602563,602563,602563,602564,602564,602669,602669,602755,602755,603053,603053,603053,603928,603936,603975,604603,604851,604979,604980,604980,800084,800084,800164,800164,800164,800165,800165,800594,800594,800594,800621,800779,801098,801099,801301,801451,801562,801563,801564,801565,801642,801720,801721,801935,801949,801952,802174,802185,802375,802376,802394,802399,802402,802408,802412,802412,802424,802424,802471,802484,802485,802486,802489,802489,802490,802490,802511,802650,802651,802656,802657,802705,802705,802751,802751,802752,802982,803013,803013,803016')
	--SELECT AValue FROM dbo.zf_FilterToTable('802440,800780,803003,802443,600894,802396,800353,802466,600736,600297') -- 10 новых набора с 6,07,2018
	--WHERE AValue in (600299) -- для отладки
	--WHERE AValue not in (600299) -- для отладки исключить эти товары
--SELECT distinct * FROM @ChIDTable


--ПРОВЕРКА НАЛИЧИЯ ТОВАРА В ПРИХОДАХ ОТ БУХГАЛТЕРИИ
IF 3=3
BEGIN

	--SELECT distinct 'ПРОВЕРКА' 'ОТСУТСТВУЕТ ТОВАР В ПРИХОДАХ ОТ БУХГАЛТЕРИИ',ec.ProdID , ExtProdID FROM Elit.dbo.r_ProdEC ec 
	--where ISNUMERIC(ExtProdID) = 1 and cast(ExtProdID as bigint) in (SELECT DISTINCT ChID FROM @ChIDTable)
	--and not exists(SELECT top 1 1 FROM #Rec1 where ProdID = (ec.ProdID))

	/*
		SELECT distinct ec.ProdID , ExtProdID
		--,cast(ExtProdID as bigint)
		,len(ExtProdID)
		FROM Elit.dbo.r_ProdEC ec 
		where ISNUMERIC(ExtProdID) = 1 --ORDER BY 4
		and ExtProdID like '% %'
	*/

	SELECT 'ОТСУТСТВУЕТ ТОВАР В ПРИХОДАХ ОТ БУХГАЛТЕРИИ' 'ПРОВЕРКА' 
	,ExtProdID 'код ElitR'
	--, sum([exists]) sum_exists
	,(SELECT top 1 ProdID FROM Elit.dbo.r_ProdEC ec where ISNUMERIC(ExtProdID) = 1 and cast(ExtProdID as bigint) in (s1.ExtProdID)  ) 'код Elit' 
	,(SELECT ISNULL(sum(ds.Qty),0) FROM ElitR.dbo.t_Sale ms JOIN ElitR.dbo.t_SaleD ds ON ds.ChID = ms.ChID
		WHERE ds.ProdID in (ExtProdID) and ms.DocDate between (SELECT top 1 BDate FROM #D) and (SELECT top 1 EDate FROM #D) and ms.CodeID1 = 63 and ms.CodeID3 <> 89 and ms.OurID = 6) 'продажи'
	FROM (
		SELECT distinct ec.ProdID , ExtProdID,isnull((SELECT top 1 1 FROM #Rec1 where ProdID = (ec.ProdID)),0) 'exists' FROM Elit.dbo.r_ProdEC ec 
		where ISNUMERIC(ExtProdID) = 1 and cast(ExtProdID as bigint) in (SELECT DISTINCT AValue FROM dbo.zf_FilterToTable('802440,800780,803003,802443,600894,802396,800353,802466,600736,600297,600072,600132,600133,600134,600135,600136,600159,600160,600168,600267,600267,600299,600712,600712,600721,600721,600731,600732,600742,600743,600744,600745,600757,600757,600758,600758,600758,600760,600760,600773,600773,600816,600816,600816,600832,600839,600839,600840,600840,600882,600883,600883,600884,600884,600884,600884,600884,600885,600885,600887,600891,600891,600892,600895,600895,600987,601070,601070,601078,601085,601085,601085,601085,601086,601095,601095,601105,601106,601111,601115,601116,601626,601773,601784,602042,602290,602505,602507,602563,602563,602563,602564,602564,602669,602669,602755,602755,603053,603053,603053,603928,603936,603975,604603,604851,604979,604980,604980,800084,800084,800164,800164,800164,800165,800165,800594,800594,800594,800621,800779,801098,801099,801301,801451,801562,801563,801564,801565,801642,801720,801721,801935,801949,801952,802174,802185,802375,802376,802394,802399,802402,802408,802412,802412,802424,802424,802471,802484,802485,802486,802489,802489,802490,802490,802511,802650,802651,802656,802657,802705,802705,802751,802751,802752,802982,803013,803013,803016'))
	)s1
	group by ExtProdID
	having sum([exists]) = 0
	--and (SELECT ISNULL(sum(ds.Qty),0) FROM ElitR.dbo.t_Sale ms JOIN ElitR.dbo.t_SaleD ds ON ds.ChID = ms.ChID
	--	WHERE ds.ProdID in (ExtProdID) and ms.DocDate between @BDate and @EDate and ms.CodeID1 = 63 and ms.CodeID3 <> 89 and ms.OurID = 6) <> 0
	ORDER BY 4 desc 	

/*
		SELECT distinct ec.ProdID , ExtProdID,isnull((SELECT top 1 1 FROM #Rec1 where ProdID = (ec.ProdID)),0) 'exists' FROM Elit.dbo.r_ProdEC ec 
		where ISNUMERIC(ExtProdID) = 1 and cast(ExtProdID as bigint) in (SELECT DISTINCT AValue FROM dbo.zf_FilterToTable('601095'))

	SELECT s1.ProdID, ISNULL(s1.Qty,0) - ISNULL(s2.Qty,0) Qty, s3.ProdID
	,ISNULL((SELECT SUM(TQty) FROM #Rec1 where ProdID in (s3.ProdID)) ,0) RecQty
	FROM 
  	--кол проданных товаров которое будем возращать
	(SELECT ds.ProdID,ISNULL(sum(ds.Qty),0) Qty FROM ElitR.dbo.t_Sale ms JOIN ElitR.dbo.t_SaleD ds ON ds.ChID = ms.ChID
	WHERE ds.ProdID in (SELECT DISTINCT ChID FROM @ChIDTable) and ms.DocDate between @BDate and @EDate and ms.CodeID1 = 63 and ms.CodeID3 <> 89 and ms.OurID = 6
	group by ds.ProdID) s1
	left join 
	--кол возращенных товаров 
	(SELECT ds.ProdID,ISNULL(sum(ds.Qty),0) Qty FROM ElitR.dbo.t_CRRet ms JOIN ElitR.dbo.t_CRRetD ds ON ds.ChID = ms.ChID
	WHERE ds.ProdID in (SELECT DISTINCT ChID FROM @ChIDTable) and ms.DocDate between @BDate and @EDate and ms.CodeID1 = 63 and ms.CodeID3 <> 89 and ms.OurID = 6
	group by ds.ProdID) s2
	on s1.ProdID = s2.ProdID
	left join (SELECT distinct ec.ProdID , ExtProdID FROM Elit.dbo.r_ProdEC ec where ISNUMERIC(ExtProdID) = 1 and cast(ExtProdID as bigint) in (SELECT DISTINCT ChID FROM @ChIDTable)) s3
	on s3.ExtProdID = s1.ProdID
	--where ISNULL((SELECT SUM(TQty) FROM #Rec1 where ProdID in (s3.ProdID)) ,0) < ISNULL(s1.Qty,0) - ISNULL(s2.Qty,0)
*/

	
END



--обнуляем времменые таблицы и переменные
DELETE #TempRet	
DELETE #TempRetFinal	
DELETE #TempFindProdElit
DELETE #TempFindProdElitAll
DELETE #TempFindProdElitAll_tmp
SET @ProdIDMA_SumQty = 0
DECLARE @p1 int = 0

--курсор по товарам в ElitR (выборка всех вариантов для возвратов)
DECLARE kalc CURSOR STATIC FOR
SELECT DISTINCT ChID FROM @ChIDTable ORDER BY 1
OPEN kalc
FETCH NEXT FROM kalc INTO @ProdIDMA 
 WHILE @@FETCH_STATUS = 0    		 
  BEGIN 
	SET @p1 += 1
	RAISERROR ('Выполнено kalc %u из %u', 10,1,@p1,@@CURSOR_ROWS) WITH NOWAIT
	 
  IF 2=2
  BEGIN
	--кол проданных товаров которое будем возращать
	SELECT @ProdIDMA_Qty = ISNULL(sum(ds.Qty),0), @ProdIDMA_RealPrice = MIN(ds.RealPrice) FROM ElitR.dbo.t_Sale ms JOIN ElitR.dbo.t_SaleD ds ON ds.ChID = ms.ChID
	WHERE ds.ProdID in (@ProdIDMA) and ms.DocDate between @BDate and @EDate and ms.CodeID1 = 63 and ms.CodeID3 <> 89 and ms.OurID = 6
	
	--кол возращенных товаров 
	SELECT @ProdIDMA_RetQty = ISNULL(sum(ds.Qty),0) FROM ElitR.dbo.t_CRRet ms JOIN ElitR.dbo.t_CRRetD ds ON ds.ChID = ms.ChID
	WHERE ds.ProdID in (@ProdIDMA) and ms.DocDate between @BDate and @EDate and ms.CodeID1 = 63 and ms.CodeID3 <> 89 and ms.OurID = 6
	
	--для отладки 0001
	IF @Testing = 1 OR 1=0 SELECT @ProdIDMA_Qty ProdIDMA_Qty ,@ProdIDMA_RetQty ProdIDMA_RetQty, @ProdIDMA_RealPrice ProdIDMA_RealPrice
		
	--отнять возвраты
	SET @ProdIDMA_Qty = @ProdIDMA_Qty - @ProdIDMA_RetQty
	
	--КОРРЕКЦИЯ КОЛИЧЕСТВА ПРОДАЖ 
	--IF @ProdIDMA = 600712 SET @ProdIDMA_Qty = @ProdIDMA_Qty - 1
	
	--общее кол проданных товаров которое будем возращать (для контроля расчета)
	SELECT @ProdIDMA_SumQty = @ProdIDMA_SumQty + @ProdIDMA_Qty
	
	IF @Testing = 1 OR 1=0 SELECT @ProdIDMA ProdIDMA
	IF @Testing = 1 OR 1=0 SELECT @ProdIDMA_Qty ProdIDMA_Qty
	IF @Testing = 1 OR 1=0 SELECT @ProdIDMA_RealPrice ProdIDMA_RealPrice
	
	--подбор в базе МЕДОК элитовских товаров по которым будет возврат
	INSERT INTO #TempFindProdElit
		SELECT  ROW_NUMBER()OVER(ORDER BY ProdName,Pos) N, @ProdIDMA ProdIDMA, @ProdIDMA_Qty ProdIDMA_Qty
		--, (SELECT top 1 p1.ProdID FROM Elit.dbo.r_Prods p1 where p1.Notes = un.ProdName) ProdID_Elit, 
		, (SELECT top 1 p1.ProdID FROM Elit.dbo.r_Prods p1 LEFT JOIN at_FindMedocNameD f ON f.ProdID = p1.ProdID and f.InUse = 1 where p1.Notes = un.ProdName OR f.NameMedoc = un.ProdName) ProdID_Elit, 
		DNN,NNN, ProdName,UM,Pos , SUM(Qty) TQty, 
		--MAX(Price) Price, SUM(Qty) * MAX(Price) SumCC, 
		@ProdIDMA_RealPrice Price, SUM(Qty) * @ProdIDMA_RealPrice SumCC, 
		0 QtyRealRet,  0 CodeID2 , 0 rating FROM (
			SELECT TAB1_A1 Pos,TAB1_A13 ProdName, N2_11 NNN, N11 DNN, TAB1_A14 UM, TAB1_A15 Qty, TAB1_A16 Price ,  TAB1_A10 SumCC, 1 TypeDoc
			FROM ElitDistr.dbo.at_t_Medoc 
			WHERE (TAB1_A13 in (SELECT p.Notes FROM elit.dbo.r_Prods p where p.ProdID in (SELECT distinct ec.ProdID FROM Elit.dbo.r_ProdEC ec where ISNUMERIC(ExtProdID) = 1 and cast(ExtProdID as bigint) in (@ProdIDMA))) 
			OR TAB1_A13 in (SELECT p.NameMedoc  FROM at_FindMedocNameD p where InUse = 1 and p.ProdID in (SELECT distinct ec.ProdID FROM Elit.dbo.r_ProdEC ec where ISNUMERIC(ExtProdID) = 1 and cast(ExtProdID as bigint) in (@ProdIDMA))) )
			AND NOT EXISTS (SELECT top 1 1 FROM #NotInv ni where ni.TaxDocID = N2_11 and ni.TaxDocDate = N11) --исключить документы по таблице исключений
			--AND  SEND_DPA_DATE < @EDateInv 
			--AND  SEND_DPA_DATE IS NOT NULL --дата отправки в налоговую не пустая
		UNION ALL
			SELECT TAB1_A01 Pos,TAB1_A3 ProdName, N2_11 NNN,N2 DNN,TAB1_A4 UM ,TAB1_A5 Qty,TAB1_A6 Price, TAB1_A013 SumCC,  2 TypeDoc
			FROM ElitDistr.dbo.at_t_Medoc_RET 
			WHERE (TAB1_A3 in (SELECT p.Notes FROM elit.dbo.r_Prods p where p.ProdID in (SELECT distinct ec.ProdID FROM Elit.dbo.r_ProdEC ec where ISNUMERIC(ExtProdID) = 1 and cast(ExtProdID as bigint) in (@ProdIDMA)))
			OR TAB1_A3 in (SELECT p.NameMedoc  FROM at_FindMedocNameD p where InUse = 1 and p.ProdID in (SELECT distinct ec.ProdID FROM Elit.dbo.r_ProdEC ec where ISNUMERIC(ExtProdID) = 1 and cast(ExtProdID as bigint) in (@ProdIDMA))) )
			AND NOT EXISTS (SELECT top 1 1 FROM #NotInv ni where ni.TaxDocID = N2_11 and ni.TaxDocDate = N2) --исключить документы по таблице исключений
			--AND  SEND_DPA_DATE < @EDateInv 
			--AND  SEND_DPA_DATE IS NOT NULL --дата отправки в налоговую не пустая
		) un 
		GROUP BY DNN,NNN, ProdName,UM,Pos 
		HAVING SUM(Qty) > 0 
		AND 10797 = (SELECT top 1 CompID FROM Elit.dbo.t_Inv i WHERE i.TaxDocDate = DNN and i.TaxDocID = NNN)--только РН которые по предприятию 10797
		AND @ProdIDMA_Qty > 0 -- искать только если были продажи
		ORDER BY ProdID_Elit,DNN,NNN,ProdIDMA,Price,TQty desc
	
	--для отладки	
    IF @Testing = 1 OR 1=0 IF @ProdIDMA in (600134)  SELECT * FROM #TempFindProdElit --where ProdIDMA in (600134)--600133
    IF @Testing = 1 OR 1=0 SELECT * FROM #TempFindProdElit  where NNN in (1432) ORDER BY  ProdIDMA 
    
	--проверка по количеству для одиночного товара
	IF ISNULL((SELECT SUM(TQty) FROM #TempFindProdElit),0) < @ProdIDMA_Qty
	BEGIN
		SELECT 'Ошибка, количество возвратов меньше продаж!!!', @ProdIDMA,(SELECT SUM(TQty) FROM #TempFindProdElit) сумма_возвр, @ProdIDMA_Qty сумма_продаж 
		SELECT * FROM #TempFindProdElit where ProdIDMA = @ProdIDMA
		SELECT distinct @ProdIDMA 'Товар Маркетвин', ec.ProdID 'другие товары в Элитке' FROM Elit.dbo.r_ProdEC ec where ISNUMERIC(ExtProdID) = 1 and cast(ExtProdID as bigint) in (@ProdIDMA)
		RAISERROR('Ошибка, количество возвратов меньше продаж!!!', 10, 1) WITH NOWAIT
	END


	INSERT #TempFindProdElitAll
		SELECT * FROM #TempFindProdElit
	DELETE #TempFindProdElit
	
	
	/*
	SELECT * FROM #TempFindProdElitAll
	SELECT * FROM #TempFindProdElitAll_all
	DECLARE @ProdIDMA int = 600299
	SELECT distinct ec.ProdID FROM Elit.dbo.r_ProdEC ec where ISNUMERIC(ExtProdID) = 1 and cast(ExtProdID as bigint) in (@ProdIDMA)

		SELECT  ROW_NUMBER()OVER(ORDER BY ProdName,Pos) N, @ProdIDMA ProdIDMA, 0 ProdIDMA_Qty
		--, (SELECT top 1 p1.ProdID FROM Elit.dbo.r_Prods p1 where p1.Notes = un.ProdName) ProdID_Elit, 
		, (SELECT top 1 p1.ProdID FROM Elit.dbo.r_Prods p1 LEFT JOIN at_FindMedocNameD f ON f.ProdID = p1.ProdID and f.InUse = 1 where p1.Notes = un.ProdName OR f.NameMedoc = un.ProdName) ProdID_Elit, 
		DNN,NNN, ProdName,UM,Pos , SUM(Qty) TQty, 
		--MAX(Price) Price, SUM(Qty) * MAX(Price) SumCC, 
		0 Price, SUM(Qty) * 1 SumCC, 
		0 QtyRealRet,  0 CodeID2 , 0 rating FROM (
			SELECT TAB1_A1 Pos,TAB1_A13 ProdName, N2_11 NNN, N11 DNN, TAB1_A14 UM, TAB1_A15 Qty, TAB1_A16 Price ,  TAB1_A10 SumCC, 1 TypeDoc
			FROM ElitDistr.dbo.at_t_Medoc 
			WHERE (TAB1_A13 in (SELECT p.Notes FROM elit.dbo.r_Prods p where p.ProdID in (SELECT distinct ec.ProdID FROM Elit.dbo.r_ProdEC ec where ISNUMERIC(ExtProdID) = 1 and cast(ExtProdID as bigint) in (@ProdIDMA))) 
			OR TAB1_A13 in (SELECT p.NameMedoc  FROM at_FindMedocNameD p where InUse = 1 and p.ProdID in (SELECT distinct ec.ProdID FROM Elit.dbo.r_ProdEC ec where ISNUMERIC(ExtProdID) = 1 and cast(ExtProdID as bigint) in (@ProdIDMA))) )
			AND NOT EXISTS (SELECT top 1 1 FROM #NotInv ni where ni.TaxDocID = N2_11 and ni.TaxDocDate = N11) --исключить документы по таблице исключений
			--AND  SEND_DPA_DATE < @EDateInv 
			--AND  SEND_DPA_DATE IS NOT NULL --дата отправки в налоговую не пустая
		UNION ALL
			SELECT TAB1_A01 Pos,TAB1_A3 ProdName, N2_11 NNN,N2 DNN,TAB1_A4 UM ,TAB1_A5 Qty,TAB1_A6 Price, TAB1_A013 SumCC,  2 TypeDoc
			FROM ElitDistr.dbo.at_t_Medoc_RET 
			WHERE (TAB1_A3 in (SELECT p.Notes FROM elit.dbo.r_Prods p where p.ProdID in (SELECT distinct ec.ProdID FROM Elit.dbo.r_ProdEC ec where ISNUMERIC(ExtProdID) = 1 and cast(ExtProdID as bigint) in (@ProdIDMA)))
			OR TAB1_A3 in (SELECT p.NameMedoc  FROM at_FindMedocNameD p where InUse = 1 and p.ProdID in (SELECT distinct ec.ProdID FROM Elit.dbo.r_ProdEC ec where ISNUMERIC(ExtProdID) = 1 and cast(ExtProdID as bigint) in (@ProdIDMA))) )
			AND NOT EXISTS (SELECT top 1 1 FROM #NotInv ni where ni.TaxDocID = N2_11 and ni.TaxDocDate = N2) --исключить документы по таблице исключений
			--AND  SEND_DPA_DATE < @EDateInv 
			--AND  SEND_DPA_DATE IS NOT NULL --дата отправки в налоговую не пустая
		) un 
		GROUP BY DNN,NNN, ProdName,UM,Pos 
		HAVING SUM(Qty) > 0 
		AND 10797 = (SELECT top 1 CompID FROM Elit.dbo.t_Inv i WHERE i.TaxDocDate = DNN and i.TaxDocID = NNN)--только РН которые по предприятию 10797)
		--and NNN = 8984
		ORDER BY ProdID_Elit,DNN,NNN,ProdIDMA,Price,TQty desc

		--выборка по РН
		SELECT * FROM (
		SELECT TAB1_A1 Pos,TAB1_A13 ProdName, N2_11 NNN, N11 DNN, TAB1_A14 UM, TAB1_A15 Qty, TAB1_A16 Price ,  TAB1_A10 SumCC, 1 TypeDoc
		FROM ElitDistr.dbo.at_t_Medoc 
			UNION ALL
		SELECT TAB1_A01 Pos,TAB1_A3 ProdName, N2_11 NNN,N2 DNN,TAB1_A4 UM ,TAB1_A5 Qty,TAB1_A6 Price, TAB1_A013 SumCC,  2 TypeDoc
		FROM ElitDistr.dbo.at_t_Medoc_RET 
		) s1
		where NNN = 8984 and DNN = '2017-10-27 00:00:00.000' 	
		ORDER BY TypeDoc, cast(pos as int) 

		SELECT *  FROM at_FindMedocNameD p where  p.ProdID in (28574)	
		SELECT p.Notes FROM elit.dbo.r_Prods p where p.ProdID in (28574)	

	DECLARE @ProdIDMA int = 600297
		SELECT  ROW_NUMBER()OVER(ORDER BY ProdName,Pos) N, @ProdIDMA ProdIDMA, 0 ProdIDMA_Qty
		--, (SELECT top 1 p1.ProdID FROM Elit.dbo.r_Prods p1 where p1.Notes = un.ProdName) ProdID_Elit, 
		, (SELECT top 1 p1.ProdID FROM Elit.dbo.r_Prods p1 LEFT JOIN at_FindMedocNameD f ON f.ProdID = p1.ProdID and f.InUse = 1 where p1.Notes = un.ProdName OR f.NameMedoc = un.ProdName) ProdID_Elit, 
		DNN,NNN, ProdName,UM,Pos , SUM(Qty) TQty, 
		--MAX(Price) Price, SUM(Qty) * MAX(Price) SumCC, 
		0 Price, SUM(Qty) * 1 SumCC, 
		0 QtyRealRet,  0 CodeID2 , 0 rating FROM (
			SELECT TAB1_A1 Pos,TAB1_A13 ProdName, N2_11 NNN, N11 DNN, TAB1_A14 UM, TAB1_A15 Qty, TAB1_A16 Price ,  TAB1_A10 SumCC, 1 TypeDoc
			FROM ElitDistr.dbo.at_t_Medoc 
			WHERE (TAB1_A13 in (SELECT p.Notes FROM elit.dbo.r_Prods p where p.ProdID in (SELECT distinct ec.ProdID FROM Elit.dbo.r_ProdEC ec where ISNUMERIC(ExtProdID) = 1 and cast(ExtProdID as bigint) in (@ProdIDMA))) 
			OR TAB1_A13 in (SELECT p.NameMedoc  FROM at_FindMedocNameD p where InUse = 1 and p.ProdID in (SELECT distinct ec.ProdID FROM Elit.dbo.r_ProdEC ec where ISNUMERIC(ExtProdID) = 1 and cast(ExtProdID as bigint) in (@ProdIDMA))) )
			AND NOT EXISTS (SELECT top 1 1 FROM #NotInv ni where ni.TaxDocID = N2_11 and ni.TaxDocDate = N11) --исключить документы по таблице исключений
			--AND  SEND_DPA_DATE < @EDateInv 
			--AND  SEND_DPA_DATE IS NOT NULL --дата отправки в налоговую не пустая
		UNION ALL
			SELECT TAB1_A01 Pos,TAB1_A3 ProdName, N2_11 NNN,N2 DNN,TAB1_A4 UM ,TAB1_A5 Qty,TAB1_A6 Price, TAB1_A013 SumCC,  2 TypeDoc
			FROM ElitDistr.dbo.at_t_Medoc_RET 
			WHERE (TAB1_A3 in (SELECT p.Notes FROM elit.dbo.r_Prods p where p.ProdID in (SELECT distinct ec.ProdID FROM Elit.dbo.r_ProdEC ec where ISNUMERIC(ExtProdID) = 1 and cast(ExtProdID as bigint) in (@ProdIDMA)))
			OR TAB1_A3 in (SELECT p.NameMedoc  FROM at_FindMedocNameD p where InUse = 1 and p.ProdID in (SELECT distinct ec.ProdID FROM Elit.dbo.r_ProdEC ec where ISNUMERIC(ExtProdID) = 1 and cast(ExtProdID as bigint) in (@ProdIDMA))) )
			AND NOT EXISTS (SELECT top 1 1 FROM #NotInv ni where ni.TaxDocID = N2_11 and ni.TaxDocDate = N2) --исключить документы по таблице исключений
			--AND  SEND_DPA_DATE < @EDateInv 
			--AND  SEND_DPA_DATE IS NOT NULL --дата отправки в налоговую не пустая
		) un 
		GROUP BY DNN,NNN, ProdName,UM,Pos 
		HAVING SUM(Qty) > 0 
		AND 10797 = (SELECT top 1 CompID FROM Elit.dbo.t_Inv i WHERE i.TaxDocDate = DNN and i.TaxDocID = NNN)--только РН которые по предприятию 10797)
		and NNN = 1432
		ORDER BY ProdID_Elit,DNN,NNN,ProdIDMA,Price,TQty desc	
	SELECT * FROM ElitDistr.dbo.at_t_Medoc 

31606
32618
DECLARE @ProdIDMA int = 800780
SELECT distinct ec.ProdID FROM Elit.dbo.r_ProdEC ec where ISNUMERIC(ExtProdID) = 1 and cast(ExtProdID as bigint) in (@ProdIDMA)
(SELECT p.Notes FROM elit.dbo.r_Prods p where p.ProdID in (SELECT distinct ec.ProdID FROM Elit.dbo.r_ProdEC ec where ISNUMERIC(ExtProdID) = 1 and cast(ExtProdID as bigint) in (@ProdIDMA))) 
(SELECT p.NameMedoc  FROM at_FindMedocNameD p where InUse = 1 and p.ProdID in (SELECT distinct ec.ProdID FROM Elit.dbo.r_ProdEC ec where ISNUMERIC(ExtProdID) = 1 and cast(ExtProdID as bigint) in (@ProdIDMA)))
SELECT * FROM (
			SELECT TAB1_A1 Pos,TAB1_A13 ProdName, N2_11 NNN, N11 DNN, TAB1_A14 UM, TAB1_A15 Qty, TAB1_A16 Price ,  TAB1_A10 SumCC, 1 TypeDoc
			FROM ElitDistr.dbo.at_t_Medoc 
			WHERE (TAB1_A13 in (SELECT p.Notes FROM elit.dbo.r_Prods p where p.ProdID in (SELECT distinct ec.ProdID FROM Elit.dbo.r_ProdEC ec where ISNUMERIC(ExtProdID) = 1 and cast(ExtProdID as bigint) in (@ProdIDMA))) 
			OR TAB1_A13 in (SELECT p.NameMedoc  FROM at_FindMedocNameD p where InUse = 1 and p.ProdID in (SELECT distinct ec.ProdID FROM Elit.dbo.r_ProdEC ec where ISNUMERIC(ExtProdID) = 1 and cast(ExtProdID as bigint) in (@ProdIDMA))) )
			AND NOT EXISTS (SELECT top 1 1 FROM #NotInv ni where ni.TaxDocID = N2_11 and ni.TaxDocDate = N11) --исключить документы по таблице исключений
			--AND  SEND_DPA_DATE < @EDateInv 
			--AND  SEND_DPA_DATE IS NOT NULL --дата отправки в налоговую не пустая
		UNION ALL
			SELECT TAB1_A01 Pos,TAB1_A3 ProdName, N2_11 NNN,N2 DNN,TAB1_A4 UM ,TAB1_A5 Qty,TAB1_A6 Price, TAB1_A013 SumCC,  2 TypeDoc
			FROM ElitDistr.dbo.at_t_Medoc_RET 
			WHERE (TAB1_A3 in (SELECT p.Notes FROM elit.dbo.r_Prods p where p.ProdID in (SELECT distinct ec.ProdID FROM Elit.dbo.r_ProdEC ec where ISNUMERIC(ExtProdID) = 1 and cast(ExtProdID as bigint) in (@ProdIDMA)))
			OR TAB1_A3 in (SELECT p.NameMedoc  FROM at_FindMedocNameD p where InUse = 1 and p.ProdID in (SELECT distinct ec.ProdID FROM Elit.dbo.r_ProdEC ec where ISNUMERIC(ExtProdID) = 1 and cast(ExtProdID as bigint) in (@ProdIDMA))) )
			AND NOT EXISTS (SELECT top 1 1 FROM #NotInv ni where ni.TaxDocID = N2_11 and ni.TaxDocDate = N2) --исключить документы по таблице исключений
			--AND  SEND_DPA_DATE < @EDateInv 
			--AND  SEND_DPA_DATE IS NOT NULL --дата отправки в налоговую не пустая
) s1
where NNN = 4869	

	
SELECT * FROM (
SELECT TAB1_A1 Pos,TAB1_A13 ProdName, N2_11 NNN, N11 DNN, TAB1_A14 UM, TAB1_A15 Qty, TAB1_A16 Price ,  TAB1_A10 SumCC, 1 TypeDoc
FROM ElitDistr.dbo.at_t_Medoc 
WHERE TAB1_A13 in ( SELECT p.Notes FROM elit.dbo.r_Prods p where p.ProdID in (31606) )
OR TAB1_A13 in ( SELECT p.NameMedoc  FROM at_FindMedocNameD p where InUse = 1 and p.ProdID in (31606) )
	UNION ALL
SELECT TAB1_A01 Pos,TAB1_A3 ProdName, N2_11 NNN,N2 DNN,TAB1_A4 UM ,TAB1_A5 Qty,TAB1_A6 Price, TAB1_A013 SumCC,  2 TypeDoc
FROM ElitDistr.dbo.at_t_Medoc_RET 
WHERE TAB1_A3 in (SELECT p.Notes FROM elit.dbo.r_Prods p where p.ProdID in (31606) ) 
OR TAB1_A3 in ( SELECT p.NameMedoc  FROM at_FindMedocNameD p where InUse = 1 and p.ProdID in (31606) )
) s1
where NNN = 8984	



SELECT * FROM elit.dbo.r_Prods p where p.Notes in ('Вино Hubert Beck. Рислінг 2015 біле 0,75*12') 

SELECT TAB1_A01 Pos,TAB1_A3 ProdName, N2_11 NNN,N2 DNN,TAB1_A4 UM ,TAB1_A5 Qty,TAB1_A6 Price, TAB1_A013 SumCC,  2 TypeDoc,*
FROM ElitDistr.dbo.at_t_Medoc_RET 
where N2_11 = 8827 and N2 = '2017-10-27 00:00:00' 

SELECT * FROM ElitDistr.dbo.at_t_Medoc_RET where SEND_DPA_RN = '9113258729'


SELECT TAB1_A01 Pos,TAB1_A3 ProdName, N2_11 NNN,N2 DNN,TAB1_A4 UM ,TAB1_A5 Qty,TAB1_A6 Price, TAB1_A013 SumCC,  2 TypeDoc, *
FROM ElitDistr.dbo.at_t_Medoc_RET 
WHERE (TAB1_A3 in (SELECT p.Notes FROM elit.dbo.r_Prods p where p.ProdID in (32236) ) 
OR TAB1_A3 in ( SELECT p.NameMedoc  FROM at_FindMedocNameD p where InUse = 1 and p.ProdID in (32236) ))
and N2_11 = 5631

	
	DECLARE @ProdIDMA int = 600072
		SELECT  ROW_NUMBER()OVER(ORDER BY ProdName,Pos) N, @ProdIDMA ProdIDMA,  0 ProdIDMA_Qty
		--, (SELECT top 1 p1.ProdID FROM Elit.dbo.r_Prods p1 where p1.Notes = un.ProdName) ProdID_Elit, 
		, (SELECT top 1 p1.ProdID FROM Elit.dbo.r_Prods p1 LEFT JOIN at_FindMedocNameD f ON f.ProdID = p1.ProdID and f.InUse = 1 where p1.Notes = un.ProdName OR f.NameMedoc = un.ProdName) ProdID_Elit, 
		DNN,NNN, ProdName,UM,Pos , SUM(Qty) TQty, 
		--MAX(Price) Price, SUM(Qty) * MAX(Price) SumCC, 
		0 Price, SUM(Qty) * 0 SumCC, 
		0 QtyRealRet,  0 CodeID2 , 0 rating FROM (
			SELECT TAB1_A1 Pos,TAB1_A13 ProdName, N2_11 NNN, N11 DNN, TAB1_A14 UM, TAB1_A15 Qty, TAB1_A16 Price ,  TAB1_A10 SumCC, 1 TypeDoc
			FROM ElitDistr.dbo.at_t_Medoc 
			WHERE (TAB1_A13 in (SELECT p.Notes FROM elit.dbo.r_Prods p where p.ProdID in (SELECT distinct ec.ProdID FROM Elit.dbo.r_ProdEC ec where ISNUMERIC(ExtProdID) = 1 and cast(ExtProdID as bigint) in (600072))) 
			OR TAB1_A13 in (SELECT p.NameMedoc  FROM at_FindMedocNameD p where InUse = 1 and p.ProdID in (SELECT distinct ec.ProdID FROM Elit.dbo.r_ProdEC ec where ISNUMERIC(ExtProdID) = 1 and cast(ExtProdID as bigint) in (600072))) )
			--AND  SEND_DPA_DATE < @EDateInv 
			--AND  SEND_DPA_DATE IS NOT NULL --дата отправки в налоговую не пустая
		UNION ALL
			SELECT TAB1_A01 Pos,TAB1_A3 ProdName, N2_11 NNN,N2 DNN,TAB1_A4 UM ,TAB1_A5 Qty,TAB1_A6 Price, TAB1_A013 SumCC,  2 TypeDoc
			FROM ElitDistr.dbo.at_t_Medoc_RET 
			WHERE (TAB1_A3 in (SELECT p.Notes FROM elit.dbo.r_Prods p where p.ProdID in (SELECT distinct ec.ProdID FROM Elit.dbo.r_ProdEC ec where ISNUMERIC(ExtProdID) = 1 and cast(ExtProdID as bigint) in (600072)))
			OR TAB1_A3 in (SELECT p.NameMedoc  FROM at_FindMedocNameD p where InUse = 1 and p.ProdID in (SELECT distinct ec.ProdID FROM Elit.dbo.r_ProdEC ec where ISNUMERIC(ExtProdID) = 1 and cast(ExtProdID as bigint) in (600072))) )
			--AND  SEND_DPA_DATE < @EDateInv 
			--AND  SEND_DPA_DATE IS NOT NULL --дата отправки в налоговую не пустая
		) un 
		GROUP BY DNN,NNN, ProdName,UM,Pos 
		HAVING SUM(Qty) > 0 
		AND 10797 = (SELECT top 1 CompID FROM Elit.dbo.t_Inv i WHERE i.TaxDocDate = DNN and i.TaxDocID = NNN)--только РН которые по предприятию 10797
		ORDER BY ProdID_Elit,DNN,NNN,ProdIDMA,Price,TQty desc


	
SELECT * FROM ElitDistr.dbo.at_t_Medoc_RET  where TAB1_A01 = '1353' and N2_11 = 8248

	
--SELECT * FROM (	
SELECT TAB1_A1 Pos,TAB1_A13 ProdName, N2_11 NNN, N11 DNN, TAB1_A14 UM, TAB1_A15 Qty, TAB1_A16 Price,  TAB1_A10 SumCC, 1 TypeDoc
FROM ElitDistr.dbo.at_t_Medoc 
WHERE (TAB1_A13 in (SELECT p.Notes FROM elit.dbo.r_Prods p where p.ProdID in (SELECT distinct ec.ProdID FROM Elit.dbo.r_ProdEC ec where ISNUMERIC(ExtProdID) = 1 and cast(ExtProdID as bigint) in (600732))) 
OR TAB1_A13 in (SELECT p.NameMedoc  FROM at_FindMedocNameD p where InUse = 1 and p.ProdID in (SELECT distinct ec.ProdID FROM Elit.dbo.r_ProdEC ec where ISNUMERIC(ExtProdID) = 1 and cast(ExtProdID as bigint) in (600732))) )
UNION ALL
SELECT TAB1_A01 Pos,TAB1_A3 ProdName, N2_11 NNN,N2 DNN,TAB1_A4 UM ,TAB1_A5 Qty,TAB1_A6 Price,TAB1_A013 SumCC,  2 TypeDoc
FROM ElitDistr.dbo.at_t_Medoc_RET 
WHERE (TAB1_A3 in (SELECT p.Notes FROM elit.dbo.r_Prods p where p.ProdID in (SELECT distinct ec.ProdID FROM Elit.dbo.r_ProdEC ec where ISNUMERIC(ExtProdID) = 1 and cast(ExtProdID as bigint) in (600732)))
OR TAB1_A3 in (SELECT p.NameMedoc  FROM at_FindMedocNameD p where InUse = 1 and p.ProdID in (SELECT distinct ec.ProdID FROM Elit.dbo.r_ProdEC ec where ISNUMERIC(ExtProdID) = 1 and cast(ExtProdID as bigint) in (600732))) )
--)s1 where NNN = 8248
ORDER BY  NNN ,pos

SELECT TAB1_A1 Pos,TAB1_A13 ProdName, N2_11 NNN, N11 DNN, TAB1_A14 UM, TAB1_A15 Qty, TAB1_A16 Price,  TAB1_A10 SumCC, 1 TypeDoc
FROM ElitDistr.dbo.at_t_Medoc 
WHERE (TAB1_A13 in (SELECT p.Notes FROM elit.dbo.r_Prods p where p.ProdID in (SELECT distinct ec.ProdID FROM Elit.dbo.r_ProdEC ec where ISNUMERIC(ExtProdID) = 1 and cast(ExtProdID as bigint) in (600745))) 
OR TAB1_A13 in (SELECT p.NameMedoc  FROM at_FindMedocNameD p where InUse = 1 and p.ProdID in (SELECT distinct ec.ProdID FROM Elit.dbo.r_ProdEC ec where ISNUMERIC(ExtProdID) = 1 and cast(ExtProdID as bigint) in (600745))) )
UNION ALL
SELECT TAB1_A01 Pos,TAB1_A3 ProdName, N2_11 NNN,N2 DNN,TAB1_A4 UM ,TAB1_A5 Qty,TAB1_A6 Price,TAB1_A013 SumCC,  2 TypeDoc
FROM ElitDistr.dbo.at_t_Medoc_RET 
WHERE (TAB1_A3 in (SELECT p.Notes FROM elit.dbo.r_Prods p where p.ProdID in (SELECT distinct ec.ProdID FROM Elit.dbo.r_ProdEC ec where ISNUMERIC(ExtProdID) = 1 and cast(ExtProdID as bigint) in (600745)))
OR TAB1_A3 in (SELECT p.NameMedoc  FROM at_FindMedocNameD p where InUse = 1 and p.ProdID in (SELECT distinct ec.ProdID FROM Elit.dbo.r_ProdEC ec where ISNUMERIC(ExtProdID) = 1 and cast(ExtProdID as bigint) in (600745))) )
ORDER BY  NNN ,pos

(SELECT p.Notes FROM elit.dbo.r_Prods p where p.ProdID in (SELECT distinct ec.ProdID FROM Elit.dbo.r_ProdEC ec where ISNUMERIC(ExtProdID) = 1 and cast(ExtProdID as bigint) in (600732)))
(SELECT p.NameMedoc  FROM at_FindMedocNameD p where InUse = 1 and p.ProdID in (SELECT distinct ec.ProdID FROM Elit.dbo.r_ProdEC ec where ISNUMERIC(ExtProdID) = 1 and cast(ExtProdID as bigint) in (600732))) 
(SELECT p.Notes FROM elit.dbo.r_Prods p where p.ProdID in (SELECT distinct ec.ProdID FROM Elit.dbo.r_ProdEC ec where ISNUMERIC(ExtProdID) = 1 and cast(ExtProdID as bigint) in (600745)))
(SELECT p.NameMedoc  FROM at_FindMedocNameD p where InUse = 1 and p.ProdID in (SELECT distinct ec.ProdID FROM Elit.dbo.r_ProdEC ec where ISNUMERIC(ExtProdID) = 1 and cast(ExtProdID as bigint) in (600745))) 

SELECT TAB1_A1 Pos,TAB1_A13 ProdName, N2_11 NNN, N11 DNN, TAB1_A14 UM, TAB1_A15 Qty, TAB1_A16 Price,  TAB1_A10 SumCC, 1 TypeDoc,*
FROM ElitDistr.dbo.at_t_Medoc 
where TAB1_A13 = 'Вино Lozano. Лозано, червоне 0,75*12'
and N2_11 = 2104 --NNN


SELECT TAB1_A01 Pos,TAB1_A3 ProdName, N2_11 NNN,N2 DNN,TAB1_A4 UM ,TAB1_A5 Qty,TAB1_A6 Price,TAB1_A013 SumCC,  2 TypeDoc, * FROM ElitDistr.dbo.at_t_Medoc_RET  
where TAB1_A3 in ('Вино Агмарті. Сапераві червоне, сухе 0,75*12 (АТ Корпорація Кіндзмараулі)','Вино Lozano. Лозано, червоне 0,75*12') 
and N2_11 = 8248 --NNN
and TAB1_A01 = 1353

Pos	ProdName	NNN	DNN	UM	Qty	Price	SumCC	TypeDoc
1353	Вино Агмарті. Сапераві червоне, сухе 0,75*12 (АТ Корпорація Кіндзмараулі)	8248	2017-04-24 00:00:00.000	пляш	3	91,2	273,6	2
1353	Вино Lozano. Лозано, червоне 0,75*12	8248	2017-04-24 00:00:00.000	пляш	11	44,45	488,95	2

	SELECT top 1 p1.ProdID FROM Elit.dbo.r_Prods p1 where p1.Notes = un.ProdName
	
	SELECT top 1 p1.ProdID, p1.Notes,f.NameMedoc FROM Elit.dbo.r_Prods p1 LEFT JOIN at_FindMedocNameD f ON f.ProdID = p1.ProdID	where p1.Notes = un.ProdName OR f.NameMedoc = un.ProdName	

	
	(SELECT p.Notes FROM elit.dbo.r_Prods p where p.ProdID in (SELECT distinct ec.ProdID FROM Elit.dbo.r_ProdEC ec where ISNUMERIC(ExtProdID) = 1 and cast(ExtProdID as bigint) in (600743)))
	(SELECT p.NameMedoc  FROM at_FindMedocNameD p where InUse = 1 and p.ProdID in (SELECT distinct ec.ProdID FROM Elit.dbo.r_ProdEC ec where ISNUMERIC(ExtProdID) = 1 and cast(ExtProdID as bigint) in (600743)))
	(SELECT distinct ec.ProdID FROM Elit.dbo.r_ProdEC ec where ISNUMERIC(ExtProdID) = 1 and cast(ExtProdID as bigint) in (600743))
	
	SELECT NameMedoc  FROM at_FindMedocNameD where InUse = 1 and ProdID = 23774

	SELECT * FROM (
	SELECT ProdID, NameMedoc ProdName, 1 InMedoc FROM at_FindMedocNameD where InUse = 1 
	union
	SELECT top 1 p1.ProdID, p1.Notes ProdName, 0 InMedoc FROM Elit.dbo.r_Prods p1 where p1.Notes = un.ProdName
	) s1 where ProdName = 'Вино Lozano. Кабальерос де ла Роса Тінто Семидульче , червоне 0,75*12'
		
	SELECT * FROM (
	SELECT ProdID, NameMedoc ProdName, 1 InMedoc FROM at_FindMedocNameD where InUse = 1 
	union
	SELECT ProdID, Notes_ProdName ProdName, 0 InMedoc FROM at_FindMedocNameD where InUse = 1 
	) s1 where ProdID = 23774
	
	
	SELECT TAB1_A1 Pos,TAB1_A13 ProdName, N2_11 NNN, N11 DNN, TAB1_A14 UM, TAB1_A15 Qty, TAB1_A16 Price,  TAB1_A10 SumCC, 1 TypeDoc
	FROM ElitDistr.dbo.at_t_Medoc WHERE TAB1_A13 in ('Вино Lozano. Кабальерос де ла Роса Тінто Семідульче червоне 0,75*12','Вино Lozano. Кабальерос де ла Роса Тінто Семидульче , червоне 0,75*12') 
	UNION ALL
	SELECT TAB1_A01 Pos,TAB1_A3 ProdName, N2_11 NNN,N2 DNN,TAB1_A4 UM ,TAB1_A5 Qty,TAB1_A6 Price,TAB1_A013 SumCC,  2 TypeDoc
	FROM ElitDistr.dbo.at_t_Medoc_RET WHERE TAB1_A3 in ('Вино Lozano. Кабальерос де ла Роса Тінто Семідульче червоне 0,75*12','Вино Lozano. Кабальерос де ла Роса Тінто Семидульче , червоне 0,75*12')
	ORDER BY DNN

	SELECT * FROM #TempFindProdElitAll
	
	SELECT distinct ProdIDMA, ProdIDMA_Qty  FROM #TempFindProdElitAll where ProdIDMA_Qty <> 0 ORDER BY 1
	--having  ProdIDMA_Qty <> SUM(TQty)
	
	SELECT *  FROM #TempFindProdElitAll where ProdIDMA  = 600745
	SELECT *  FROM #TempFindProdElitAll_tmp where ProdIDMA  = 600745
	
	
	SELECT ProdIDMA, ProdIDMA_Qty, ProdID, SUM(QtyRealRet) TQtyRealRet FROM #TempRetFinal group by ProdIDMA, ProdIDMA_Qty, ProdID ORDER BY 1
	having  ProdIDMA_Qty <> SUM(QtyRealRet)


	(SELECT distinct ec.ProdID FROM Elit.dbo.r_ProdEC ec where ISNUMERIC(ExtProdID) = 1 and cast(ExtProdID as bigint) in (602669))
	
	DECLARE @ProdID_Elit_Find INT = 26136
	DECLARE @EDateInv2 SMALLDATETIME = '2018-05-15' --конец периода поиска по РН
	
		SELECT  ROW_NUMBER()OVER(ORDER BY ProdName,Pos) N
			, (SELECT top 1 p1.ProdID FROM Elit.dbo.r_Prods p1 where p1.Notes = un.ProdName) ProdID_Elit, 
			DNN,NNN, ProdName,UM,Pos , SUM(Qty) TQty 
		FROM (
			SELECT TAB1_A1 Pos,TAB1_A13 ProdName, N2_11 NNN, N11 DNN, TAB1_A14 UM, TAB1_A15 Qty, TAB1_A16 Price,  TAB1_A10 SumCC, 1 TypeDoc
			FROM ElitDistr.dbo.at_t_Medoc WHERE TAB1_A13 in (SELECT p.Notes FROM elit.dbo.r_Prods p where p.ProdID in (@ProdID_Elit_Find)) 
			AND  SEND_DPA_DATE < @EDateInv2 AND  SEND_DPA_DATE IS NOT NULL --дата отправки в налоговую не пустая
		UNION ALL
			SELECT TAB1_A01 Pos,TAB1_A3 ProdName, N2_11 NNN,N2 DNN,TAB1_A4 UM ,TAB1_A5 Qty,TAB1_A6 Price,TAB1_A013 SumCC,  2 TypeDoc
			FROM ElitDistr.dbo.at_t_Medoc_RET WHERE TAB1_A3 in (SELECT p.Notes FROM elit.dbo.r_Prods p where p.ProdID in (@ProdID_Elit_Find)) 
			AND  SEND_DPA_DATE < @EDateInv2 AND  SEND_DPA_DATE IS NOT NULL --дата отправки в налоговую не пустая
		) un 
		GROUP BY DNN,NNN, ProdName,UM,Pos 
		HAVING --SUM(Qty) > 0 
		--AND 10797 = (SELECT top 1 CompID FROM Elit.dbo.t_Inv i WHERE i.TaxDocDate = DNN and i.TaxDocID = NNN)--только РН которые по предприятию 10797
		--and 
		NNN = 6313
		ORDER BY ProdID_Elit,DNN,NNN,TQty desc

SELECT * FROM (
		SELECT SEND_DPA_DATE,TAB1_A1 Pos,TAB1_A13 ProdName, N2_11 NNN, N11 DNN, TAB1_A14 UM, TAB1_A15 Qty, TAB1_A16 Price,  TAB1_A10 SumCC, 1 TypeDoc
			FROM ElitDistr.dbo.at_t_Medoc WHERE TAB1_A13 in (SELECT p.Notes FROM elit.dbo.r_Prods p where p.ProdID in (26136)) 
			AND   SEND_DPA_DATE IS NOT NULL --дата отправки в налоговую не пустая
			
		UNION ALL
			SELECT SEND_DPA_DATE,TAB1_A01 Pos,TAB1_A3 ProdName, N2_11 NNN,N2 DNN,TAB1_A4 UM ,TAB1_A5 Qty,TAB1_A6 Price,TAB1_A013 SumCC,  2 TypeDoc
			FROM ElitDistr.dbo.at_t_Medoc_RET WHERE TAB1_A3 in (SELECT p.Notes FROM elit.dbo.r_Prods p where p.ProdID in (26136)) 
			AND    SEND_DPA_DATE IS NOT NULL --дата отправки в налоговую не пустая
			
) s1
where NNN = 6313

	
	--600732-28241-600133
				SELECT TAB1_A1 Pos,TAB1_A13 ProdName, N2_11 NNN, N11 DNN, TAB1_A14 UM, TAB1_A15 Qty, TAB1_A16 Price,  TAB1_A10 SumCC, 1 TypeDoc
			FROM ElitDistr.dbo.at_t_Medoc WHERE TAB1_A13 in (SELECT p.Notes FROM elit.dbo.r_Prods p where p.ProdID in (SELECT distinct ec.ProdID FROM Elit.dbo.r_ProdEC ec where ISNUMERIC(ExtProdID) = 1 and cast(ExtProdID as bigint) in (600133))) 
			AND  SEND_DPA_DATE < '2018-05-15' AND  SEND_DPA_DATE IS NOT NULL --дата отправки в налоговую не пустая
and N2_11 = 6313			
		UNION ALL
			SELECT  TAB1_A01 Pos,TAB1_A3 ProdName, N2_11 NNN,N2 DNN,TAB1_A4 UM ,TAB1_A5 Qty,TAB1_A6 Price,TAB1_A013 SumCC,  2 TypeDoc
			FROM ElitDistr.dbo.at_t_Medoc_RET WHERE TAB1_A3 in (SELECT p.Notes FROM elit.dbo.r_Prods p where p.ProdID in (SELECT distinct ec.ProdID FROM Elit.dbo.r_ProdEC ec where ISNUMERIC(ExtProdID) = 1 and cast(ExtProdID as bigint) in (600133)))
			AND  SEND_DPA_DATE < '20180515' AND  SEND_DPA_DATE IS NOT NULL --дата отправки в налоговую не пустая
and N2_11 = 6313

			SELECT SEND_DPA_DATE, TAB1_A01 Pos,TAB1_A3 ProdName, N2_11 NNN,N2 DNN,TAB1_A4 UM ,TAB1_A5 Qty,TAB1_A6 Price,TAB1_A013 SumCC,  2 TypeDoc
			FROM ElitDistr.dbo.at_t_Medoc_RET WHERE TAB1_A3 in (SELECT p.Notes FROM elit.dbo.r_Prods p where p.ProdID in (SELECT distinct ec.ProdID FROM Elit.dbo.r_ProdEC ec where ISNUMERIC(ExtProdID) = 1 and cast(ExtProdID as bigint) in (600732)))
			and N2_11 = 2832
--802376-32237
				SELECT TAB1_A1 Pos,TAB1_A13 ProdName, N2_11 NNN, N11 DNN, TAB1_A14 UM, TAB1_A15 Qty, TAB1_A16 Price,  TAB1_A10 SumCC, 1 TypeDoc
			FROM ElitDistr.dbo.at_t_Medoc WHERE TAB1_A13 in (SELECT p.Notes FROM elit.dbo.r_Prods p where p.ProdID in (SELECT distinct ec.ProdID FROM Elit.dbo.r_ProdEC ec where ISNUMERIC(ExtProdID) = 1 and cast(ExtProdID as bigint) in (802376))) 
			AND  SEND_DPA_DATE < '2018-05-15' AND  SEND_DPA_DATE IS NOT NULL --дата отправки в налоговую не пустая
		UNION ALL
			SELECT  TAB1_A01 Pos,TAB1_A3 ProdName, N2_11 NNN,N2 DNN,TAB1_A4 UM ,TAB1_A5 Qty,TAB1_A6 Price,TAB1_A013 SumCC,  2 TypeDoc
			FROM ElitDistr.dbo.at_t_Medoc_RET WHERE TAB1_A3 in (SELECT p.Notes FROM elit.dbo.r_Prods p where p.ProdID in (SELECT distinct ec.ProdID FROM Elit.dbo.r_ProdEC ec where ISNUMERIC(ExtProdID) = 1 and cast(ExtProdID as bigint) in (802376)))
			AND  SEND_DPA_DATE < '20180515' AND  SEND_DPA_DATE IS NOT NULL --дата отправки в налоговую не пустая
and N2_11 = 2832

SELECT * FROM #TempRetFinal where ProdID = 23775
SELECT * FROM #TempFindProdElitAll where ProdID_Elit = 23775
SELECT * FROM #TempFindProdElitAll_tmp where ProdID_Elit = 23775



		SELECT * FROM (
		SELECT TAB1_A1 Pos,TAB1_A13 ProdName, N2_11 NNN, N11 DNN, TAB1_A14 UM, TAB1_A15 Qty, TAB1_A16 Price,  TAB1_A10 SumCC, 1 TypeDoc
		FROM ElitDistr.dbo.at_t_Medoc WHERE TAB1_A13 in (SELECT p.Notes FROM elit.dbo.r_Prods p where p.ProdID in (SELECT distinct ec.ProdID FROM Elit.dbo.r_ProdEC ec where ISNUMERIC(ExtProdID) = 1 and cast(ExtProdID as bigint) in (600072))) 
		AND  SEND_DPA_DATE is not null
		UNION ALL
		SELECT TAB1_A01 Pos,TAB1_A3 ProdName, N2_11 NNN,N2 DNN,TAB1_A4 UM ,TAB1_A5 Qty,TAB1_A6 Price,TAB1_A013 SumCC,  2 TypeDoc
		FROM ElitDistr.dbo.at_t_Medoc_RET WHERE TAB1_A3 in (SELECT p.Notes FROM elit.dbo.r_Prods p where p.ProdID in (SELECT distinct ec.ProdID FROM Elit.dbo.r_ProdEC ec where ISNUMERIC(ExtProdID) = 1 and cast(ExtProdID as bigint) in (600072)))
		AND  SEND_DPA_DATE is not null
		) s1 WHERE 10797 = (SELECT top 1 CompID FROM Elit.dbo.t_Inv i WHERE i.TaxDocDate = DNN and i.TaxDocID = NNN)--только РН которые по предприятию 10797
		--and NNN = 8248
		--and prodname  = 'Вино Luis Felipe Edwards. Совіньон Блан Резерва 2014 біле 0,75*12'
		ORDER BY DNN,NNN, ProdName,UM,Pos
		
		SELECT * FROM (
		SELECT TAB1_A1 Pos,TAB1_A13 ProdName, N2_11 NNN, N11 DNN, TAB1_A14 UM, TAB1_A15 Qty, TAB1_A16 Price,  TAB1_A10 SumCC, 1 TypeDoc
		FROM ElitDistr.dbo.at_t_Medoc WHERE TAB1_A13 in (SELECT p.Notes FROM elit.dbo.r_Prods p where p.ProdID in (SELECT distinct ec.ProdID FROM Elit.dbo.r_ProdEC ec where ISNUMERIC(ExtProdID) = 1 and cast(ExtProdID as bigint) in (601085))) 
		AND  SEND_DPA_DATE is not null
		UNION ALL
		SELECT TAB1_A01 Pos,TAB1_A3 ProdName, N2_11 NNN,N2 DNN,TAB1_A4 UM ,TAB1_A5 Qty,TAB1_A6 Price,TAB1_A013 SumCC,  2 TypeDoc
		,*
		FROM ElitDistr.dbo.at_t_Medoc_RET WHERE TAB1_A3 in (SELECT p.Notes FROM elit.dbo.r_Prods p where p.ProdID in (SELECT distinct ec.ProdID FROM Elit.dbo.r_ProdEC ec where ISNUMERIC(ExtProdID) = 1 and cast(ExtProdID as bigint) in (601085)))
		AND  SEND_DPA_DATE is not null
		) s1 WHERE 10797 = (SELECT top 1 CompID FROM Elit.dbo.t_Inv i WHERE i.TaxDocDate = DNN and i.TaxDocID = NNN)--только РН которые по предприятию 10797
		and NNN = 8248
		--and prodname  = 'Вино Luis Felipe Edwards. Совіньон Блан Резерва 2014 біле 0,75*12'
		ORDER BY DNN,NNN, ProdName,UM,Pos
		
		SELECT SEND_DPA_DATE,* FROM ElitDistr.dbo.at_t_Medoc_RET where SEND_DPA_DATE is null
		SELECT SEND_DPA_DATE,* FROM ElitDistr.dbo.at_t_Medoc where SEND_DPA_DATE is null

	
			SELECT  ROW_NUMBER()OVER(ORDER BY ProdName,Pos) N, 600891 ProdIDMA, 111 ProdIDMA_Qty, (SELECT top 1 p1.ProdID FROM Elit.dbo.r_Prods p1 where p1.Notes = un.ProdName) ProdID_Elit, 
		DNN,NNN, ProdName,UM,Pos , SUM(Qty) TQty, MAX(Price) Price, SUM(Qty) * MAX(Price) SumCC, 0 QtyRealRet,  0 CodeID2 , 0 rating FROM (
			SELECT TAB1_A1 Pos,TAB1_A13 ProdName, N2_11 NNN, N11 DNN, TAB1_A14 UM, TAB1_A15 Qty, TAB1_A16 Price,  TAB1_A10 SumCC, 1 TypeDoc
			FROM ElitDistr.dbo.at_t_Medoc WHERE TAB1_A13 in (SELECT p.Notes FROM elit.dbo.r_Prods p where p.ProdID in (SELECT distinct ec.ProdID FROM Elit.dbo.r_ProdEC ec where ISNUMERIC(ExtProdID) = 1 and cast(ExtProdID as bigint) in (600891))) 
			--AND  SEND_DPA_DATE is not null
		UNION ALL
			SELECT TAB1_A01 Pos,TAB1_A3 ProdName, N2_11 NNN,N2 DNN,TAB1_A4 UM ,TAB1_A5 Qty,TAB1_A6 Price,TAB1_A013 SumCC,  2 TypeDoc
			FROM ElitDistr.dbo.at_t_Medoc_RET WHERE TAB1_A3 in (SELECT p.Notes FROM elit.dbo.r_Prods p where p.ProdID in (SELECT distinct ec.ProdID FROM Elit.dbo.r_ProdEC ec where ISNUMERIC(ExtProdID) = 1 and cast(ExtProdID as bigint) in (600891)))
			--AND  SEND_DPA_DATE is not null
		) un 
		GROUP BY DNN,NNN, ProdName,UM,Pos 
		HAVING SUM(Qty) > 0 
		AND 10797 = (SELECT top 1 CompID FROM Elit.dbo.t_Inv i WHERE i.TaxDocDate = DNN and i.TaxDocID = NNN)--только РН которые по предприятию 10797
		and NNN = 3711
		ORDER BY ProdID_Elit,DNN,NNN,ProdIDMA,Price,TQty desc
		
			SELECT TAB1_A01 Pos,TAB1_A3 ProdName, N2_11 NNN,N2 DNN,TAB1_A4 UM ,TAB1_A5 Qty,TAB1_A6 Price,TAB1_A013 SumCC,  2 TypeDoc
			FROM ElitDistr.dbo.at_t_Medoc_RET WHERE TAB1_A3 in (SELECT p.Notes FROM elit.dbo.r_Prods p where p.ProdID in (SELECT distinct ec.ProdID FROM Elit.dbo.r_ProdEC ec where ISNUMERIC(ExtProdID) = 1 and cast(ExtProdID as bigint) in (600891)))
			--AND  SEND_DPA_DATE is not null
			and N2_11 = 3711

SELECT * FROM (
			SELECT TAB1_A1 Pos,TAB1_A13 ProdName, N2_11 NNN, N11 DNN, TAB1_A14 UM, TAB1_A15 Qty, TAB1_A16 Price,  TAB1_A10 SumCC, 1 TypeDoc
			FROM ElitDistr.dbo.at_t_Medoc WHERE TAB1_A13 in (SELECT p.Notes FROM elit.dbo.r_Prods p where p.ProdID in (SELECT distinct ec.ProdID FROM Elit.dbo.r_ProdEC ec where ISNUMERIC(ExtProdID) = 1 and cast(ExtProdID as bigint) in (600891))) 
			--AND  SEND_DPA_DATE is not null
		UNION ALL
			SELECT TAB1_A01 Pos,TAB1_A3 ProdName, N2_11 NNN,N2 DNN,TAB1_A4 UM ,TAB1_A5 Qty,TAB1_A6 Price,TAB1_A013 SumCC,  2 TypeDoc
			FROM ElitDistr.dbo.at_t_Medoc_RET WHERE TAB1_A3 in (SELECT p.Notes FROM elit.dbo.r_Prods p where p.ProdID in (SELECT distinct ec.ProdID FROM Elit.dbo.r_ProdEC ec where ISNUMERIC(ExtProdID) = 1 and cast(ExtProdID as bigint) in (600891)))
			--AND  SEND_DPA_DATE is not null
			) s2
where NNN = 3711
		
		
		--SELECT d.* FROM Elit.dbo.t_Inv m JOIN Elit.dbo.t_InvD d ON d.ChID = m.ChID WHERE m.TaxDocID = 9798 and m.TaxDocDate = '2017-09-29 00:00:00' and d.ProdID = 32784-- and d.SrcPosID = Pos
		SELECT d.* FROM Elit.dbo.t_Inv m JOIN Elit.dbo.t_InvD d ON d.ChID = m.ChID WHERE m.TaxDocID = 8248 and m.TaxDocDate = '2017-04-24 00:00:00' and d.ProdID = 31451-- and d.SrcPosID = Pos
		SELECT d.* FROM Elit.dbo.t_Inv m JOIN Elit.dbo.t_InvD d ON d.ChID = m.ChID WHERE m.TaxDocID = 8248 and m.TaxDocDate = '2017-04-24 00:00:00' and d.ProdID = 32045-- and d.SrcPosID = Pos
		
		SELECT  p1.ProdID FROM Elit.dbo.r_Prods p1 where p1.Notes = 'Вино Luis Felipe Edwards. Совіньон Блан Резерва 2014 біле 0,75*12'
		SELECT  p1.ProdID FROM Elit.dbo.r_Prods p1 where p1.Notes = 'Вино Luis Felipe Edwards. Совіньон Блан Резерва 2015 біле 0,75*12'
		
N	ProdIDMA	ProdIDMA_Qty	ProdIDMA_RealPrice	ChID	DocID	TaxDocID	TaxDocDate	ProdID	PPID	QtyInv	vozv_Elit	vozv_ElitDistr	QtyRet	rem	abs_razn	QtyRealRet	CodeID2	SrcPosID_Inv	Pos_Medoc	sumQtyInv
1	601085	21.000000000	111.750000000	200003990	1109792	8248	2017-04-24 00:00:00	31451	0	NULL	NULL	NULL	NULL	NULL	NULL	21.000000000	44	0	1358	NULL
	*/
	--SELECT 'для отладки TempFindProdElit'
	--SELECT * FROM #TempFindProdElit	
	--SELECT distinct ProdIDMA FROM #TempFindProdElitAll	
	--SELECT distinct ProdID_Elit FROM #TempFindProdElitAll_tmp m where m.QtyRealRet > 0
	--SELECT * FROM #TempFindProdElitAll_tmp m where m.QtyRealRet > 0 ORDER BY ProdIDMA,ProdID_Elit,rating
      
	FETCH NEXT FROM kalc INTO @ProdIDMA 
  END
  
  END
CLOSE kalc
DEALLOCATE kalc


--Определения рейтинга для РН
--SELECT * FROM #TempFindProdElitAll 
UPDATE #TempFindProdElitAll
SET rating = ISNULL((SELECT count_prod FROM (SELECT DNN, NNN, COUNT(*) count_prod FROM (SELECT DNN, NNN,ProdID_Elit FROM #TempFindProdElitAll group by DNN, NNN, ProdID_Elit)s1 group by DNN, NNN)gr where gr.DNN = #TempFindProdElitAll.DNN and gr.NNN = #TempFindProdElitAll.NNN),0)

--Изменение рейтинга для тех позиций у которых не соответствие возвратов в базе и в медке
UPDATE t
SET rating = -1
FROM #TempFindProdElitAll t where t.TQty <> (SELECT sum(d.Qty) FROM Elit.dbo.t_Inv m JOIN Elit.dbo.t_InvD d ON d.ChID = m.ChID WHERE m.TaxDocID = t.NNN and m.TaxDocDate = t.DNN and d.ProdID = t.ProdID_Elit )
/*
SELECT * FROM #TempFindProdElitAll
SELECT * FROM #TempFindProdElitAll_tmp

SELECT (SELECT sum(d.Qty) FROM Elit.dbo.t_Inv m JOIN Elit.dbo.t_InvD d ON d.ChID = m.ChID WHERE m.TaxDocID = t.NNN and m.TaxDocDate = t.DNN and d.ProdID = t.ProdID_Elit ) TQty_Inv,* FROM #TempFindProdElitAll t
where t.TQty <> (SELECT sum(d.Qty) FROM Elit.dbo.t_Inv m JOIN Elit.dbo.t_InvD d ON d.ChID = m.ChID WHERE m.TaxDocID = t.NNN and m.TaxDocDate = t.DNN and d.ProdID = t.ProdID_Elit )
ORDER BY nnn,ProdID_Elit,Pos
*/

DECLARE @p2 int = 0
--курсор по товарам в ElitR (поик оптимальных товаров и РН с которых будет возврат)
DECLARE kalc2 CURSOR FOR
SELECT DISTINCT ChID FROM @ChIDTable ORDER BY 1
OPEN kalc2
FETCH NEXT FROM kalc2 INTO @ProdIDMA 
 WHILE @@FETCH_STATUS = 0    		 
  BEGIN 
  
	SET @p2 += 1
	RAISERROR ('Выполнено kalc2 %u из %u', 10,1,@p2,@@CURSOR_ROWS) WITH NOWAIT
		
	SET @ProdIDMA_Qty = ISNULL((SELECT top 1  ProdIDMA_Qty FROM #TempFindProdElitAll WHERE ProdIDMA = @ProdIDMA),0)
	
	--SELECT * FROM #TempFindProdElit
	DELETE #TempFindProdElit
	
	INSERT #TempFindProdElit 
		SELECT * FROM #TempFindProdElitAll WHERE ProdIDMA = @ProdIDMA
	/*
	SELECT distinct ProdIDMA,ProdIDMA_Qty FROM #TempFindProdElitAll_tmp	ORDER BY 1
	SELECT * FROM #TempFindProdElitAll_tmp	
	*/
--подбор РН по которым будут возвраты
IF 2=2
BEGIN
	DECLARE @QtyRet NUMERIC(21,9), @SrcPosID INT, @TQty NUMERIC(21,9), @N_next INT, @TQty_posN NUMERIC(21,9)
	
	--курсор по элитовским товарам
	DECLARE CURSOR1 CURSOR LOCAL FAST_FORWARD FOR 
		SELECT distinct ProdID_Elit FROM #TempFindProdElit WITH (NOLOCK) ORDER BY 1
	OPEN CURSOR1
		FETCH NEXT FROM CURSOR1 INTO @ProdID_Elit
	WHILE @@FETCH_STATUS = 0
	BEGIN
		--Script
		SELECT @QtyRet = 0, @TQty = @ProdIDMA_Qty  
		
		--SELECT * FROM #TempFindProdElitAll WITH (NOLOCK) WHERE ProdID_Elit = 33246 ORDER BY rating desc, TQty desc
		--SELECT * FROM #TempFindProdElitAll WITH (NOLOCK) WHERE ProdIDMA = 600742 ORDER BY rating desc, TQty desc
		--SELECT * FROM #TempFindProdElitAll WITH (NOLOCK) WHERE ProdIDMA = 600745 ORDER BY rating desc, TQty desc
		--SELECT * FROM #TempFindProdElitAll_tmp WITH (NOLOCK) WHERE ProdIDMA = 600745 ORDER BY rating desc, TQty desc
		
		--для отладки
		--IF @ProdID_Elit = 31451 SELECT '' 'test1 31451',N N_, TQty TQty_,* FROM #TempFindProdElit WITH (NOLOCK) WHERE ProdID_Elit = @ProdID_Elit ORDER BY rating desc, TQty desc
		IF @Testing = 1 OR 1=0 SELECT N, TQty FROM #TempFindProdElit WITH (NOLOCK) WHERE ProdID_Elit = @ProdID_Elit ORDER BY rating desc, TQty desc
		
		--курсор по позициям в элитовском товаре
		DECLARE CURSOR2 CURSOR LOCAL FAST_FORWARD FOR 
			SELECT N, TQty FROM #TempFindProdElit WITH (NOLOCK) WHERE ProdID_Elit = @ProdID_Elit ORDER BY rating desc, TQty desc -- сортировка по рейтингу РН и количеству
		OPEN CURSOR2
			FETCH NEXT FROM CURSOR2 INTO @SrcPosID, @QtyRet
		WHILE @@FETCH_STATUS = 0 AND @TQty > 0
		BEGIN
			--для отладки
			IF @Testing = 1 OR 1=0 SELECT @QtyRet QtyRet, @TQty TQty, @SrcPosID SrcPosID
			
			--если позиция уже занята, то находим свободную пропущенную позицию
			IF (SELECT top 1 QtyRealRet FROM #TempFindProdElit WHERE N = @SrcPosID and ProdID_Elit = @ProdID_Elit) > 0 
			BEGIN
				SELECT top 1 @SrcPosID = N, @QtyRet = TQty 
				FROM #TempFindProdElit WITH (NOLOCK) 
				WHERE ProdID_Elit = @ProdID_Elit and QtyRealRet = 0 
				ORDER BY rating desc, TQty desc  
			END
			
			--если QtyRealRet еще не обновляли
			--IF (SELECT top 1 QtyRealRet FROM #TempFindProdElit WHERE N = @SrcPosID and ProdID_Elit = @ProdID_Elit) <= 0 
				IF @QtyRet <= @TQty --если кол позиции меньше или равно оставщемуся кол для распределения
				BEGIN
					IF @Testing = 1 OR 1=0 SELECT '1 если кол позиции меньше или равно оставщемуся кол для распределения'
					
					UPDATE #TempFindProdElit 
					SET QtyRealRet = @QtyRet 
					,CodeID2 = CASE WHEN TQty = @QtyRet THEN 19 ELSE 44 END --определить признак 2 по позициям
					WHERE N = @SrcPosID and ProdID_Elit = @ProdID_Elit
					
					SET @TQty = @TQty - @QtyRet
				END
				ELSE
				BEGIN 
					IF @Testing = 1 OR 1=0 SELECT '2 если кол позиции больше оставщемуся кол для распределения'
					--если есть позиции с меньшим или равным количеством и с рейтингом не равным -1 (рейтинг -1 это позиции с которыми возможны проблемы при возврате)
					SET @N_next = (SELECT top 1 N FROM #TempFindProdElit WHERE ProdID_Elit = @ProdID_Elit and TQty <= @TQty and QtyRealRet = 0 and rating <> -1 ORDER BY TQty DESC,rating DESC )
					SET @TQty_posN = (SELECT top 1 TQty FROM #TempFindProdElit WHERE N = @N_next)
					IF  @N_next IS NOT NULL
					BEGIN
						IF @Testing = 1 OR 1=0 SELECT '3 если есть позиции с меньшим или равным количеством', @N_next N_next, @TQty_posN TQty_posN
						--распределить по меньшим позициям
						UPDATE #TempFindProdElit 
						SET QtyRealRet = @TQty_posN --
						,CodeID2 = CASE WHEN TQty = @TQty_posN THEN 19 ELSE 44 END --определить признак 2 по позициям
						WHERE N = @N_next
						
						SET @TQty = @TQty - ISNULL(@TQty_posN,0)
					END
					ELSE --тогда взять остаток из текущей позиции
					BEGIN
						IF @Testing = 1 OR 1=0 SELECT '4 тогда взять остаток из текущей позиции'
						UPDATE #TempFindProdElit 
						SET QtyRealRet = @TQty 
						,CodeID2 = CASE WHEN TQty = @TQty THEN 19 ELSE 44 END --определить признак 2 по позициям
						WHERE N = @SrcPosID and ProdID_Elit = @ProdID_Elit
						
						SET @TQty = 0
					END

				END
			
			FETCH NEXT FROM CURSOR2	INTO @SrcPosID, @QtyRet
		END
		CLOSE CURSOR2
		DEALLOCATE CURSOR2

		--для отладки
		--IF @ProdID_Elit = 31451 SELECT '' 'test2 31451',N N_, TQty TQty_,* FROM #TempFindProdElit WITH (NOLOCK) WHERE ProdID_Elit = @ProdID_Elit ORDER BY rating desc, TQty desc

		FETCH NEXT FROM CURSOR1	INTO @ProdID_Elit
	END
	CLOSE CURSOR1
	DEALLOCATE CURSOR1

  END
	
	--для отладки
	IF @Testing = 1 OR 1=0
	BEGIN
		SELECT * FROM #TempFindProdElit
		--SELECT TOP 10 TQty  FROM #Rec1 r WHERE r.ProdID = 34112 ORDER BY r.Price   --23775
		SELECT 'для отладки выбора товара'
		SELECT *
		,(SELECT TOP 1 TQty  FROM #Rec1 r WHERE r.ProdID = gr.ProdID_Elit /*and gr.Sum_QtyRealRet <= TQty*/ ORDER BY r.Price ) TQty 
		,(SELECT TOP 1 Price  FROM #Rec1 r WHERE r.ProdID = gr.ProdID_Elit /*and gr.Sum_QtyRealRet <= TQty*/ ORDER BY r.Price ) Price 
		FROM (
			SELECT ProdID_Elit, SUM(QtyRealRet) Sum_QtyRealRet, COUNT(QtyRealRet) Count_QtyRealRet 
				,SUM(QtyRealRet * case when t.rating < 0 then 0 else 1 end ) Sum_QtyRealRet_best--, COUNT(QtyRealRet * case when t.rating < 0 then 0 else 1 end) Count_QtyRealRet_best
			FROM #TempFindProdElit t
			WHERE t.QtyRealRet <> 0 
			GROUP BY ProdID_Elit
		) gr
		WHERE exists(SELECT TOP 1 ppid  FROM #Rec1 r WHERE r.ProdID = gr.ProdID_Elit )
		--WHERE (SELECT TOP 1 TQty  FROM #Rec1 r WHERE r.ProdID = gr.ProdID_Elit and gr.Sum_QtyRealRet <= TQty ORDER BY r.Price ) >= Sum_QtyRealRet
		--and Sum_QtyRealRet >= @ProdIDMA_Qty
		--and ProdID_Elit IN (SELECT distinct ProdID FROM #ProdIdNabor) -- участвуют только товары из справочников наборов
		ORDER BY Sum_QtyRealRet_best desc, Price
	END	
	
	--выбрать один товар c минимальной ценой
	SELECT top 1 @FindProdID_Elit = ProdID_Elit FROM (
	SELECT *
	,(SELECT TOP 1 TQty  FROM #Rec1 r WHERE r.ProdID = gr.ProdID_Elit /*and gr.Sum_QtyRealRet <= TQty*/ ORDER BY r.Price ) TQty 
	,(SELECT TOP 1 Price  FROM #Rec1 r WHERE r.ProdID = gr.ProdID_Elit /*and gr.Sum_QtyRealRet <= TQty*/ ORDER BY r.Price ) Price 
	FROM (
		SELECT ProdID_Elit, SUM(QtyRealRet) Sum_QtyRealRet, COUNT(QtyRealRet) Count_QtyRealRet 
			,SUM(QtyRealRet * case when t.rating < 0 then 0 else 1 end ) Sum_QtyRealRet_best
		FROM #TempFindProdElit t
		WHERE t.QtyRealRet <> 0 
		GROUP BY ProdID_Elit
	) gr
	WHERE exists(SELECT TOP 1 ppid  FROM #Rec1 r WHERE r.ProdID = gr.ProdID_Elit )
	--(SELECT TOP 1 TQty  FROM #Rec1 r WHERE r.ProdID = gr.ProdID_Elit and gr.Sum_QtyRealRet <= TQty ORDER BY r.Price ) >= Sum_QtyRealRet
	--and Sum_QtyRealRet >= @ProdIDMA_Qty
	--and ProdID_Elit IN (SELECT distinct ProdID FROM #ProdIdNabor) -- участвуют только товары из справочников наборов
	
and ProdID_Elit not IN (28572) -- временно исключить этот товар из расчета
	
	) s1
	ORDER BY Sum_QtyRealRet_best desc, Price

	--для отладки	
    IF @Testing = 1 OR 1=0
    IF @ProdIDMA in (600742) 
    BEGIN
		SELECT top 1 * FROM (
		SELECT *
		,(SELECT TOP 1 TQty  FROM #Rec1 r WHERE r.ProdID = gr.ProdID_Elit /*and gr.Sum_QtyRealRet <= TQty*/ ORDER BY r.Price ) TQty 
		,(SELECT TOP 1 Price  FROM #Rec1 r WHERE r.ProdID = gr.ProdID_Elit /*and gr.Sum_QtyRealRet <= TQty*/ ORDER BY r.Price ) Price 
		FROM (
			SELECT ProdID_Elit, SUM(QtyRealRet) Sum_QtyRealRet, COUNT(QtyRealRet) Count_QtyRealRet 
			FROM #TempFindProdElit t
			WHERE t.QtyRealRet <> 0 
			GROUP BY ProdID_Elit
		) gr
		--WHERE (SELECT TOP 1 TQty  FROM #Rec1 r WHERE r.ProdID = gr.ProdID_Elit and gr.Sum_QtyRealRet <= TQty ORDER BY r.Price ) >= Sum_QtyRealRet
		--and Sum_QtyRealRet >= @ProdIDMA_Qty
		) s1
		ORDER BY Price    
	END

	
	--для отладки
	IF @Testing = 1 OR 1=0
	BEGIN
		SELECT  @FindProdID_Elit FindProdID_Elit	 
		SELECT * FROM #TempFindProdElit WHERE QtyRealRet > 0 and ProdID_Elit = @FindProdID_Elit

		SELECT *
		,(SELECT TOP 1 TQty  FROM #Rec1 r WHERE r.ProdID = gr.ProdID_Elit /*and gr.Sum_QtyRealRet <= TQty*/ ORDER BY r.Price ) TQty 
		,(SELECT TOP 1 Price  FROM #Rec1 r WHERE r.ProdID = gr.ProdID_Elit /*and gr.Sum_QtyRealRet <= TQty*/ ORDER BY r.Price ) Price 
		FROM (
			SELECT ProdID_Elit, SUM(QtyRealRet) Sum_QtyRealRet, COUNT(QtyRealRet) Count_QtyRealRet 
			FROM #TempFindProdElitAll_tmp t
			WHERE t.QtyRealRet <> 0 
			and ProdIDMA = 600742
			GROUP BY ProdID_Elit
		) gr
		WHERE (SELECT TOP 1 TQty  FROM #Rec1 r WHERE r.ProdID = gr.ProdID_Elit /*and gr.Sum_QtyRealRet <= TQty*/ ORDER BY r.Price ) >= Sum_QtyRealRet
		and Sum_QtyRealRet >= @ProdIDMA_Qty

		IF @Testing = 1 OR 1=0 SELECT * FROM #TempFindProdElitAll_tmp t	WHERE t.QtyRealRet <> 0 and ProdIDMA = 601773 --ORDER BY 2,3

	END

--SELECT ChID FROM Elit.dbo.t_Inv WHERE TaxDocID = 358 and TaxDocDate = '2017-06-01'
	--для отладки	
    IF @Testing = 1 OR 1=0 IF @ProdIDMA in (600742)  SELECT * FROM #TempFindProdElit where ProdIDMA in (600742)--600133


	INSERT #TempRetFinal
		SELECT ROW_NUMBER()OVER(ORDER BY ProdID_Elit) N, @ProdIDMA ProdIDMA, @ProdIDMA_Qty ProdIDMA_Qty, Price ProdIDMA_RealPrice, 
			(SELECT top 1 ChID FROM Elit.dbo.t_Inv WHERE TaxDocID = NNN and TaxDocDate = DNN) ChID, 
			(SELECT top 1 DocID FROM Elit.dbo.t_Inv WHERE TaxDocID = NNN and TaxDocDate = DNN) DocID, 
			NNN TaxDocID, DNN TaxDocDate, 
--временое решение для товара 31606
case when ProdID_Elit = 31606 then 32618 else ProdID_Elit end  ,--ProdID_Elit ProdID, 
			(SELECT top 1 PPID FROM Elit.dbo.t_Inv m JOIN Elit.dbo.t_InvD d ON d.ChID = m.ChID WHERE m.TaxDocID = NNN and m.TaxDocDate = DNN and d.ProdID = 
--временое решение для товара 31606
case when ProdID_Elit = 31606 then 32618 else ProdID_Elit end  
			and d.SrcPosID = Pos) PPID,
			(SELECT top 1 d.Qty FROM Elit.dbo.t_Inv m JOIN Elit.dbo.t_InvD d ON d.ChID = m.ChID WHERE m.TaxDocID = NNN and m.TaxDocDate = DNN and d.ProdID = 
--временое решение для товара 31606
case when ProdID_Elit = 31606 then 32618 else ProdID_Elit end  
			 and d.SrcPosID = Pos) QtyInv, 
			NULL vozv_Elit, NULL vozv_ElitDistr, TQty QtyRet, NULL rem, NULL abs_razn, 
			QtyRealRet QtyRealRet, CodeID2 CodeID2, 
			(SELECT top 1 d.SrcPosID FROM Elit.dbo.t_Inv m JOIN Elit.dbo.t_InvD d ON d.ChID = m.ChID WHERE m.TaxDocID = NNN and m.TaxDocDate = DNN and d.ProdID = 
--временое решение для товара 31606
case when ProdID_Elit = 31606 then 32618 else ProdID_Elit end  
			 and d.SrcPosID = Pos) SrcPosID_Inv,
			 Pos Pos_Medoc, NULL sumQtyInv
		FROM #TempFindProdElit 
		WHERE QtyRealRet > 0 and ProdID_Elit = @FindProdID_Elit 

	INSERT #TempFindProdElitAll_tmp
		SELECT * FROM #TempFindProdElit WHERE QtyRealRet > 0 and ProdID_Elit = @FindProdID_Elit
	IF @Testing = 1 OR 1=0 SELECT * FROM #TempFindProdElitAll_tmp
	
	--проверка по количеству для одиночного товара
	IF ISNULL((SELECT SUM(QtyRealRet) FROM #TempFindProdElit),0) < @ProdIDMA_Qty
	BEGIN
		SELECT 'Ошибка, количество возвратов меньше продаж!!!', @ProdIDMA,(SELECT SUM(QtyRealRet) FROM #TempFindProdElit) сумма_возвр, @ProdIDMA_Qty сумма_продаж 
		SELECT * FROM #TempFindProdElit where ProdIDMA = @ProdIDMA
		SELECT distinct @ProdIDMA 'Товар Маркетвин', ec.ProdID 'другие товары в Элитке' FROM Elit.dbo.r_ProdEC ec where ISNUMERIC(ExtProdID) = 1 and cast(ExtProdID as bigint) in (@ProdIDMA)
		RAISERROR('Ошибка, количество возвратов меньше продаж!!!', 10, 1) WITH NOWAIT
	END

	--проверка присутствия товара в списках от бугалтерии для прихода 
	--IF isnull((SELECT SUM(TQty) FROM #Rec1 r WHERE r.ProdID in (SELECT distinct t.ProdID_Elit FROM #TempFindProdElit t where t.ProdIDMA = @ProdIDMA)),0) <  @ProdIDMA_Qty
	IF NOT EXISTS (SELECT top 1 1 FROM #Rec1 r WHERE r.ProdID in (SELECT distinct t.ProdID_Elit FROM #TempFindProdElit t where t.ProdIDMA = @ProdIDMA)) AND @ProdIDMA_Qty > 0
	BEGIN
		SELECT 'Ошибка, товара нет в списках от бугалтерии для прихода!!!',@ProdIDMA ProdIDMA, isnull((SELECT SUM(TQty) FROM #Rec1 r WHERE r.ProdID in (SELECT distinct t.ProdID_Elit FROM #TempFindProdElit t where t.ProdIDMA = @ProdIDMA)),0) сумма_возвр, @ProdIDMA_Qty сумма_продаж
		SELECT * FROM #Rec1 r WHERE r.ProdID in (SELECT distinct t.ProdID_Elit FROM #TempFindProdElit t where t.ProdIDMA = @ProdIDMA)
		SELECT * FROM #TempFindProdElit where ProdIDMA = @ProdIDMA
		RAISERROR('Ошибка, товара нет в списках от бугалтерии для прихода!!!', 10, 1) WITH NOWAIT
		--SELECT * FROM #Rec1 r WHERE r.ProdID in (SELECT distinct t.ProdID_Elit FROM #TempFindProdElit t where t.ProdIDMA = 604851)
	END
				
	DELETE #TempFindProdElit	  

	FETCH NEXT FROM kalc2 INTO @ProdIDMA 
  END
CLOSE kalc2
DEALLOCATE kalc2


/*
26137 600134
SELECT * FROM Elit.dbo.r_ProdEC ec where ISNUMERIC(ExtProdID) = 1 and cast(ExtProdID as bigint) in (600134) 
SELECT * FROM #TempFindProdElitAll_tmp
SELECT d.* FROM Elit.dbo.t_Inv m JOIN Elit.dbo.t_InvD d ON d.ChID = m.ChID WHERE m.TaxDocID = 9798 and m.TaxDocDate = '2017-09-29 00:00:00' and d.ProdID = 32784-- and d.SrcPosID = Pos
--SELECT d.* FROM Elit.dbo.t_Inv m JOIN Elit.dbo.t_InvD d ON d.ChID = m.ChID WHERE m.TaxDocID = 2832 and m.TaxDocDate = '2017-05-11 00:00:00' and d.ProdID = 24412-- and d.SrcPosID = Pos
--SELECT d.* FROM Elit.dbo.t_Inv m JOIN Elit.dbo.t_InvD d ON d.ChID = m.ChID WHERE m.TaxDocID = 3929 and m.TaxDocDate = '2018-03-13 00:00:00' and d.ProdID = 3499-- and d.SrcPosID = Pos
--SELECT d.* FROM Elit.dbo.t_Inv m JOIN Elit.dbo.t_InvD d ON d.ChID = m.ChID WHERE m.TaxDocID = 2832 and m.TaxDocDate = '2017-05-11' and d.ProdID = 31441-- and d.SrcPosID = Pos
--SELECT * FROM #TempRetFinal where PPID =0
--SELECT * FROM #TempRetFinal ORDER BY  PPID 
--SELECT * FROM #TempRetFinal where ProdID = 3499-- and PPID is null
--SELECT * FROM #TempRetFinal where ProdID = 26136  -- and PPID is null
SELECT * FROM #TempRetFinal where ProdID = 32784-- and PPID is null
ORDER BY ChID,ProdID
SELECT top 1 PPID FROM Elit.dbo.t_Inv m JOIN Elit.dbo.t_InvD d ON d.ChID = m.ChID 
	WHERE m.TaxDocID = 2832 and m.TaxDocDate = '2017-05-11' and d.ProdID = 31441 and d.Qty = 4
SELECT * FROM  #TempRetFinal m WHERE m.TaxDocID = @cur3_TaxDocID and m.TaxDocDate = @cur3_TaxDocDate and m.ProdID = @cur3_ProdID and m.QtyRealRet = @cur3_QtyRealRet and m.SrcPosID_Inv = @cur3_SrcPosID_Inv  
SELECT * FROM #TempFindProdElitAll_tmp WHERE ProdID_Elit = 32784
*/


/*поиск не найденных партий*/
--BEGIN TRAN
IF @Testing = 1 OR 2=2
BEGIN
DECLARE @cur3_ProdID INT,@cur3_TaxDocID INT,@cur3_TaxDocDate SMALLDATETIME,@cur3_QtyRealRet NUMERIC(21,9),@cur3_PPID INT,@cur3_SrcPosID_Inv INT
DECLARE CURSOR3 CURSOR LOCAL FAST_FORWARD
FOR 
	SELECT TaxDocID, TaxDocDate, ProdID, QtyRealRet,Pos_Medoc FROM #TempRetFinal  WITH (NOLOCK) WHERE PPID IS NULL ORDER BY  TaxDocDate,TaxDocID,ProdID,QtyRealRet
OPEN CURSOR3
	FETCH NEXT FROM CURSOR3	INTO @cur3_TaxDocID,@cur3_TaxDocDate,@cur3_ProdID,@cur3_QtyRealRet,@cur3_SrcPosID_Inv
WHILE @@FETCH_STATUS = 0
BEGIN
	--Script
	--IF @cur3_ProdID = 24412
	--BEGIN
	--	SELECT @cur3_TaxDocID cur3_TaxDocID,@cur3_TaxDocDate cur3_TaxDocDate,@cur3_ProdID cur3_ProdID,@cur3_QtyRealRet cur3_QtyRealRet,@cur3_SrcPosID_Inv cur3_SrcPosID_Inv  
	--END
	
	SET @cur3_PPID = (SELECT top 1 PPID FROM Elit.dbo.t_Inv m JOIN Elit.dbo.t_InvD d ON d.ChID = m.ChID 
	WHERE m.TaxDocID = @cur3_TaxDocID and m.TaxDocDate = @cur3_TaxDocDate and d.ProdID = @cur3_ProdID and d.Qty = @cur3_QtyRealRet)

	--IF @cur3_ProdID = 24412 SELECT @cur3_PPID cur3_PPID

	IF @cur3_PPID IS NOT NULL
	BEGIN
		--IF @cur3_ProdID = 24412 SELECT @cur3_PPID cur3_PPID_IS_NOT_NULL
		
		UPDATE m 
		SET PPID = @cur3_PPID, SrcPosID_Inv = (SELECT top 1 d.SrcPosID FROM Elit.dbo.t_Inv m JOIN Elit.dbo.t_InvD d ON d.ChID = m.ChID 
												WHERE m.TaxDocID = @cur3_TaxDocID and m.TaxDocDate = @cur3_TaxDocDate and d.ProdID = @cur3_ProdID and d.Qty = @cur3_QtyRealRet)
		FROM #TempRetFinal m WHERE m.TaxDocID = @cur3_TaxDocID and m.TaxDocDate = @cur3_TaxDocDate and m.ProdID = @cur3_ProdID and m.QtyRealRet = @cur3_QtyRealRet and m.Pos_Medoc = @cur3_SrcPosID_Inv  
	END
	ELSE
	BEGIN
		--IF @cur3_ProdID = 24412 SELECT @cur3_PPID cur3_PPID_else
	
		UPDATE t 
		SET PPID = ISNULL((SELECT top 1 PPID FROM Elit.dbo.t_Inv m JOIN Elit.dbo.t_InvD d ON d.ChID = m.ChID 
							WHERE m.TaxDocID = @cur3_TaxDocID and m.TaxDocDate = @cur3_TaxDocDate and d.ProdID = @cur3_ProdID and d.Qty > @cur3_QtyRealRet ORDER BY d.Qty desc),0)
			, SrcPosID_Inv = ISNULL((SELECT top 1 d.SrcPosID FROM Elit.dbo.t_Inv m JOIN Elit.dbo.t_InvD d ON d.ChID = m.ChID 
							WHERE m.TaxDocID = @cur3_TaxDocID and m.TaxDocDate = @cur3_TaxDocDate and d.ProdID = @cur3_ProdID and d.Qty > @cur3_QtyRealRet ORDER BY d.Qty desc),0)							
		FROM #TempRetFinal t WHERE t.TaxDocID = @cur3_TaxDocID and t.TaxDocDate = @cur3_TaxDocDate and t.ProdID = @cur3_ProdID 
		and t.QtyRealRet = @cur3_QtyRealRet and t.Pos_Medoc = @cur3_SrcPosID_Inv 
	END
	
	--IF @cur3_ProdID = 24412 SELECT * FROM #TempRetFinal where ProdID = 24412
	
	FETCH NEXT FROM CURSOR3	INTO @cur3_TaxDocID,@cur3_TaxDocDate,@cur3_ProdID,@cur3_QtyRealRet,@cur3_SrcPosID_Inv
END
CLOSE CURSOR3
DEALLOCATE CURSOR3
END
/*
SELECT * FROM #TempRetFinal where ProdID = 32445
SELECT * FROM #TempRetFinal where PPID is null
SELECT * FROM #TempRetFinal where PPID = 0
SELECT * FROM #TempRetFinal ORDER BY  PPID 
--SELECT d.* FROM Elit.dbo.t_Inv m JOIN Elit.dbo.t_InvD d ON d.ChID = m.ChID WHERE m.TaxDocID = 2832 and m.TaxDocDate = '2017-05-11 00:00:00' and d.ProdID = 24412-- and d.SrcPosID = Pos
SELECT d.* FROM Elit.dbo.t_Inv m JOIN Elit.dbo.t_InvD d ON d.ChID = m.ChID WHERE m.TaxDocID = 8248 and m.TaxDocDate = '2017-04-24 00:00:00' and d.ProdID = 31451-- and d.SrcPosID = Pos
SELECT * FROM #TempRetFinal where ProdID = 31451-- and PPID is null
*/
--ROLLBACK TRAN


--SELECT * FROM #TempFindProdElitAll_tmp ORDER BY ProdIDMA,rating desc
--SELECT top 1 * FROM #Rec1

--SELECT top 1 ProdIdNabor FROM #ProdIdNabor pn where pn.ProdIDMA = (SELECT top 1 ExtProdID FROM Elit.dbo.r_ProdEC ec where ISNUMERIC(ExtProdID) = 1 and CompID = 10793  and ec.ProdID = 32465)

	--для отладки
	--IF @Testing = 1
	BEGIN
		--SELECT * FROM #TempRetFinal
		IF @Testing = 1 OR 1=0
			SELECT ProdIDMA, ProdIDMA_Qty, ProdID, SUM(QtyRealRet) TQtyRealRet FROM #TempRetFinal group by ProdIDMA, ProdIDMA_Qty, ProdID
			HAVING  ProdIDMA_Qty <> SUM(QtyRealRet)

		SELECT 'для файла: После_обработки_наборов.xlsx '
		SELECT ProdIDMA, ProdIdNabor, SUM(QtyRet) QtyRet, ProdId, MIN(PriceShop) PriceShop , MIN(Price) Price FROM (
			SELECT ProdIDMA ProdIDMA, 
			ISNULL(  (SELECT top 1 ProdIdNabor FROM #ProdIdNabor pn where pn.ProdIDMA = (SELECT top 1 ExtProdID FROM Elit.dbo.r_ProdEC ec where ISNUMERIC(ExtProdID) = 1 and CompID = 10793  and ec.ProdID = trf.ProdID)),
				ISNULL( (SELECT top 1 ProdIdNabor FROM #ProdIdNabor pn where pn.ProdIDMA = (SELECT top 1 ExtProdID FROM Elit.dbo.r_ProdEC ec where ISNUMERIC(ExtProdID) = 1 and CompID in (10790,10791,10793)  and ec.ProdID = trf.ProdID)),
					(SELECT top 1 ProdIdNabor FROM #ProdIdNabor pn where pn.ProdID = trf.ProdID) )  ) ProdIdNabor,
			--(SELECT top 1 ProdIdNabor FROM #ProdIdNabor pn where pn.ProdID = trf.ProdID)	ProdIdNabor,
				QtyRealRet QtyRet,	ProdID ProdId, trf.PPID,	ProdIDMA_RealPrice PriceShop,	ProdIDMA_RealPrice/1.05/1.2 Price
			FROM #TempRetFinal trf	
		) gr
		group by ProdIDMA, ProdIdNabor, ProdId
		ORDER BY ProdIDMA--, ProdIdNabor
	END

	--проверка по общему количеству
	IF isnull((SELECT SUM(QtyRealRet) FROM #TempRetFinal),0) <> @ProdIDMA_SumQty
	BEGIN
		SELECT 'Ошибка, не сходится общее количество возвратов!!!', isnull((SELECT SUM(QtyRealRet) FROM #TempRetFinal),0) сумма_возвр, @ProdIDMA_SumQty сумма_продаж 
		RAISERROR('Ошибка, не сходится общее количество возвратов!!!', 10, 1) WITH NOWAIT
	END
	ELSE SELECT 'сумма продаж и общее количество возвратов совпадают' 'Все ОК', isnull((SELECT SUM(QtyRealRet) FROM #TempRetFinal),0) сумма_возвр, @ProdIDMA_SumQty сумма_продаж 

	--проверка на нулевые партии
	IF exists(SELECT top 1 1 FROM #TempRetFinal where PPID =0)
	BEGIN
		SELECT 'Ошибка, нулевые партии!!!'
		SELECT * FROM #TempRetFinal where PPID = 0
		SELECT 'union all select '+cast(TaxDocID as varchar(21))+','''+CONVERT( varchar, TaxDocDate, 120)+''',null,null' as 'добавьте эти налоговые в исключение #NotInv' FROM #TempRetFinal where PPID = 0
		RAISERROR('Ошибка, нулевые партии!!!', 10, 1) WITH NOWAIT
	END

/*
SELECT top 1 N FROM #TempFindProdElit WHERE ProdID_Elit = 26133 and TQty <= 2 ORDER BY TQty DESC

SELECT N, TQty FROM #TempFindProdElit WITH (NOLOCK) WHERE ProdID_Elit = 26133 ORDER BY 1

SELECT * FROM #TempRetFinal	

SELECT 'для файла: После_обработки_наборов.xlsx '
SELECT ProdIDMA, ProdIdNabor, SUM(QtyRet) QtyRet, ProdId, MIN(PriceShop) PriceShop , MIN(Price) Price FROM (
	SELECT ProdIDMA ProdIDMA, (SELECT top 1 ProdIdNabor FROM #ProdIdNabor pn where pn.ProdID = trf.ProdID)	ProdIdNabor,	QtyRealRet QtyRet,	ProdID ProdId, trf.PPID,	ProdIDMA_RealPrice PriceShop,	ProdIDMA_RealPrice/1.05/1.2 Price
	FROM #TempRetFinal trf	
) gr
group by ProdIDMA, ProdIdNabor, ProdId
ORDER BY ProdIdNabor


--проверка по общему количеству
IF (SELECT SUM(QtyRealRet) FROM #TempRetFinal) <> @ProdIDMA_SumQty
BEGIN
	SELECT 'Ошибка, не сходится общее количество возвратов!!!'
	RAISERROR('Ошибка, не сходится общее количество возвратов!!!', 18, 1)
END
*/

/*
SELECT * FROM  Elit.dbo.t_Inv m
JOIN Elit.dbo.t_InvD d ON d.ChID = m.ChID
WHERE m.OurID = 1 and m.CompID = 10797 --and m.StateCode = 191 --только отправленые налоговые
--and m.DocDate between '2017-04-01' and @EDateInv --последний день предыдущего месяца
and d.ProdID in (32551)
and m.TaxDocID = 5651 
--and d.Qty > 0

SELECT * FROM #TempRetFinal where  ProdID = 3499

			SELECT dr.* FROM ElitDistr.dbo.t_Ret mr
			JOIN ElitDistr.dbo.t_RetD dr ON dr.ChID = mr.ChID
			WHERE mr.OurID = 1 and mr.CompID = 10797 --and mr.StateCode = 191 --только отправленые налоговые
			and mr.SrcTaxDocID = 3614
			and mr.SrcTaxDocDate= '2017-04-11'
			and dr.ProdID = 3499
			--and dr.PPID = 144
			--GROUP BY dr.ProdID, dr.PPID
			
				SELECT * FROM ElitDistr.dbo.t_Ret WHERE ChID = 3449
				SELECT * FROM ElitDistr.dbo.t_RetD WHERE ChID = 3449
			
			
			SELECT * FROM Elit.dbo.t_Ret mr
			JOIN Elit.dbo.t_RetD dr ON dr.ChID = mr.ChID
			WHERE mr.OurID = 1 --and mr.CompID = 10797 --and mr.StateCode = 191 --только отправленые налоговые
			and mr.SrcTaxDocID = 3614
			and mr.SrcTaxDocDate= '2017-04-11'
			and dr.ProdID = 3499
			--and dr.PPID = 144
			--GROUP BY dr.ProdID, dr.PPID
			
			
			
SELECT  ROW_NUMBER()OVER(ORDER BY ProdName,Pos) N, 600135 ProdIDMA, (SELECT top 1 p1.ProdID FROM Elit.dbo.r_Prods p1 where p1.Notes = un.ProdName) ProdID_Elit, 
DNN,NNN, ProdName,UM,Pos , SUM(Qty) TQty, MAX(Price) Price, SUM(Qty) * MAX(Price) SumCC, 0 QtyRealRet,  0 CodeID2 FROM (
	SELECT TAB1_A1 Pos,TAB1_A13 ProdName, N2_11 NNN, N11 DNN, TAB1_A14 UM, TAB1_A15 Qty, TAB1_A16 Price,  TAB1_A10 SumCC, 1 TypeDoc
	FROM ElitDistr.dbo.at_t_Medoc WHERE TAB1_A13 in (SELECT p.Notes FROM elit.dbo.r_Prods p where p.ProdID in (SELECT distinct ec.ProdID FROM Elit.dbo.r_ProdEC ec where ISNUMERIC(ExtProdID) = 1 and cast(ExtProdID as bigint) in (600135))) 
UNION ALL
	SELECT TAB1_A01 Pos,TAB1_A3 ProdName, N2_11 NNN,N2 DNN,TAB1_A4 UM ,TAB1_A5 Qty,TAB1_A6 Price,TAB1_A013 SumCC,  2 TypeDoc
	FROM ElitDistr.dbo.at_t_Medoc_RET WHERE TAB1_A3 in (SELECT p.Notes FROM elit.dbo.r_Prods p where p.ProdID in (SELECT distinct ec.ProdID FROM Elit.dbo.r_ProdEC ec where ISNUMERIC(ExtProdID) = 1 and cast(ExtProdID as bigint) in (600135)))
) un 
GROUP BY DNN,NNN, ProdName,UM,Pos 
HAVING SUM(Qty) > 0 
ORDER BY ProdID_Elit,DNN,NNN,ProdIDMA,Price,TQty desc
			
*/
END
--##############################################################################
--##############################################################################
SELECT '##### Возвраты'
IF 13=0
BEGIN
  BEGIN TRAN
	DECLARE @DocDate SMALLDATETIME = (SELECT top 1 BDate FROM #D) --'2018-08-01' --дата возврата (два раза в месяц)
	DECLARE @ROLLBACK_TRAN  int = 1       -- 1 тестирование c откатом, выполнится ROLLBACK TRAN   0 рабочий режим, выполнится COMMIT TRAN
	DECLARE  @Testing2 INT = 0 --1 вывод данных для отладки
	--IF @ROLLBACK_TRAN = 1 ROLLBACK TRAN 

IF 2=2 --Синхронизация ElitDistr and Elit
BEGIN
	--добавить отсутствующие партии в t_PInP из elit для возвратов
	INSERT ElitDistr.dbo.t_PInP (ProdID,PPID,PPDesc,PriceMC_In,PriceMC,Priority,ProdDate,CurrID,CompID,Article,CostAC,PPWeight,File1,File2,File3,PriceCC_In,CostCC,PPDelay,ProdPPDate,DLSDate,IsCommission,CostMC,PriceAC_In,IsCert,FEAProdID,ProdBarCode,PPHumidity,PPImpurity,CustDocNum,CustDocDate)
		SELECT distinct p.ProdID,p.PPID,PPDesc,PriceMC_In,PriceMC,Priority,ProdDate,CurrID,CompID,Article,CostAC,PPWeight,File1,File2,File3,PriceCC_In,CostCC,PPDelay,ProdPPDate,DLSDate,IsCommission,CostMC,PriceAC_In,IsCert,CstProdCode,ProdBarCode,PPHumidity,PPImpurity,CustDocNum,CstDocDate 
		FROM [Elit].dbo.t_PInP p
		join #TempRetFinal exc on exc.ProdID = p.ProdID and exc.PPID = p.PPID 
		where not EXISTS ( SELECT * FROM ElitDistr.dbo.t_PInP dp where  dp.ProdID = p.ProdID and dp.PPID = p.PPID )
		--and exc.ProdID not in (29873,31441)
	
	--добавить отсутствующие предприятия из elit для возвратов
	INSERT ElitDistr.dbo.r_Comps
		SELECT * FROM Elit.dbo.r_Comps m1 WHERE m1.CompID NOT IN (SELECT CompID FROM ElitDistr.dbo.r_Comps m2 where m2.CompID = m1.CompID)
	--SELECT * FROM ElitDistr.dbo.r_CompsAdd  WHERE CompID = 10797
	--SELECT * FROM Elit.dbo.r_CompsAdd  WHERE CompID = 10797

	--добавить отсутствующие адреса из elit для возвратов
	INSERT ElitDistr.dbo.r_CompsAdd
		SELECT * FROM Elit.dbo.r_CompsAdd m1 WHERE m1.CompAdd NOT IN (SELECT CompAdd FROM ElitDistr.dbo.r_CompsAdd m2 where m2.CompID = m1.CompID)
	--SELECT * FROM ElitDistr.dbo.r_CompsAdd  WHERE CompID = 10797
	--SELECT * FROM Elit.dbo.r_CompsAdd  WHERE CompID = 10797

	--добавить отсутствующие внешние коды из elit 
	INSERT ElitDistr.dbo.r_ProdEC
		SELECT e.ProdID, e.CompID, e.ExtProdID, null ExtProdName, null ExtBarCode FROM Elit.dbo.r_ProdEC e
		JOIN (
		SELECT ProdID, CompID FROM Elit.dbo.r_ProdEC
		except
		SELECT ProdID, CompID FROM ElitDistr.dbo.r_ProdEC
		)ex ON ex.CompID = e.CompID and ex.ProdID = e.ProdID


	INSERT ElitDistr.dbo.r_ProdG
		SELECT * FROM Elit.dbo.r_ProdG where PGrID not in (SELECT PGrID FROM ElitDistr.dbo.r_ProdG)

	INSERT ElitDistr.dbo.r_ProdA
		SELECT * FROM Elit.dbo.r_ProdA where PGrAID not in (SELECT PGrAID FROM ElitDistr.dbo.r_ProdA) --and PGrAName not in (SELECT PGrAName FROM ElitDistr.dbo.r_ProdA)

	INSERT ElitDistr.dbo.r_ProdBG
		SELECT * FROM Elit.dbo.r_ProdBG where PBGrID not in (SELECT PBGrID FROM ElitDistr.dbo.r_ProdBG)

	INSERT ElitDistr.dbo.r_ProdC
		SELECT * FROM Elit.dbo.r_ProdC where PCatID not in (SELECT PCatID FROM ElitDistr.dbo.r_ProdC)

	INSERT ElitDistr.dbo.r_ProdG
		SELECT * FROM Elit.dbo.r_ProdG where PGrID not in (SELECT distinct PGrID FROM ElitDistr.dbo.r_ProdG)



		
/*недоделал
	--добавить отсутствующие договора универсальные из elit для возвратов
	INSERT ElitDistr.dbo.at_z_ContractsAdd
		SELECT * FROM Elit.dbo.at_z_ContractsAdd m1 WHERE m1.CompAdd NOT IN (SELECT CompAdd FROM ElitDistr.dbo.at_z_ContractsAdd m2 where m2.CompID = m1.CompID)
	--SELECT * FROM ElitDistr.dbo.at_z_ContractsAdd  WHERE CompID = 10797
	--SELECT * FROM Elit.dbo.at_z_ContractsAdd  WHERE CompID = 10797
*/

	/*
	SELECT * FROM Elit.dbo.r_ProdEC e
	JOIN ElitDistr.dbo.r_ProdEC ed on ed.ProdID = e.ProdID and ed.CompID = e.CompID and ed.ExtProdID <> e.ExtProdID
	--where e.ProdID = 33697
	*/
	/*
	SELECT ProdID, CompID, ExtProdID FROM Elit.dbo.r_ProdEC
	except
	SELECT ProdID, CompID, ExtProdID FROM ElitDistr.dbo.r_ProdEC
	*/
	
	--изменить неправильные внешние коды из elit 
	update ed set ed.ExtProdID = e.ExtProdID FROM Elit.dbo.r_ProdEC e
	JOIN ElitDistr.dbo.r_ProdEC ed on ed.ProdID = e.ProdID and ed.CompID = e.CompID and ed.ExtProdID <> e.ExtProdID
	
	--изменить неправильные внешние коды из elit 
	UPDATE ed SET ed.FEAProdID = e.CstProdCode FROM Elit.dbo.t_PInP e
	JOIN ElitDistr.dbo.t_PInP ed ON ed.ProdID = e.ProdID and ed.PPID = e.PPID and ed.FEAProdID <> e.CstProdCode and CstProdCode is not null

	--проверка кодов УКТВЕД
	IF EXISTS (SELECT top 1 1 FROM Elit.dbo.t_PInP where CstProdCode IS NULL and PPID <> 0
				and ProdID in (SELECT distinct ec.ProdID FROM Elit.dbo.r_ProdEC ec where ISNUMERIC(ExtProdID) = 1 and cast(ExtProdID as bigint) in (600072,600132,600133,600134,600135,600136,600159,600160,600168,600267,600267,600299,600712,600712,600721,600721,600731,600732,600742,600743,600744,600745,600757,600757,600758,600758,600758,600760,600760,600773,600773,600816,600816,600816,600832,600839,600839,600840,600840,600882,600883,600883,600884,600884,600884,600884,600884,600885,600885,600887,600891,600891,600892,600895,600895,600987,601070,601070,601078,601085,601085,601085,601085,601086,601095,601095,601105,601106,601111,601115,601116,601626,601773,601784,602042,602290,602505,602507,602563,602563,602563,602564,602564,602669,602669,602755,602755,603053,603053,603053,603928,603936,603975,604603,604851,604979,604980,604980,800084,800084,800164,800164,800164,800165,800165,800594,800594,800594,800621,800779,801098,801099,801301,801451,801562,801563,801564,801565,801642,801720,801721,801935,801949,801952,802174,802185,802375,802376,802394,802399,802402,802408,802412,802412,802424,802424,802471,802484,802485,802486,802489,802489,802490,802490,802511,802650,802651,802656,802657,802705,802705,802751,802751,802752,802982,803013,803013,803016)))
	BEGIN
		SELECT 'Ошибка, есть партии в базе Elit без кодов УКТВЕД !!!'
		SELECT * FROM Elit.dbo.t_PInP where CstProdCode is null and PPID <> 0
			and ProdID in (SELECT distinct ec.ProdID FROM Elit.dbo.r_ProdEC ec where ISNUMERIC(ExtProdID) = 1 and cast(ExtProdID as bigint) in (600072,600132,600133,600134,600135,600136,600159,600160,600168,600267,600267,600299,600712,600712,600721,600721,600731,600732,600742,600743,600744,600745,600757,600757,600758,600758,600758,600760,600760,600773,600773,600816,600816,600816,600832,600839,600839,600840,600840,600882,600883,600883,600884,600884,600884,600884,600884,600885,600885,600887,600891,600891,600892,600895,600895,600987,601070,601070,601078,601085,601085,601085,601085,601086,601095,601095,601105,601106,601111,601115,601116,601626,601773,601784,602042,602290,602505,602507,602563,602563,602563,602564,602564,602669,602669,602755,602755,603053,603053,603053,603928,603936,603975,604603,604851,604979,604980,604980,800084,800084,800164,800164,800164,800165,800165,800594,800594,800594,800621,800779,801098,801099,801301,801451,801562,801563,801564,801565,801642,801720,801721,801935,801949,801952,802174,802185,802375,802376,802394,802399,802402,802408,802412,802412,802424,802424,802471,802484,802485,802486,802489,802489,802490,802490,802511,802650,802651,802656,802657,802705,802705,802751,802751,802752,802982,803013,803013,803016))
		RAISERROR('Ошибка, есть партии в базе Elit без кодов УКТВЕД !!!', 10, 1) WITH NOWAIT
	END

END

	IF @Testing2 = 1 OR 1=0
		SELECT * FROM #TempRetFinal WITH (NOLOCK) ORDER BY  ChID, CodeID2 
		/*
		SELECT * FROM #TempRetFinal where TaxDocID = 8248 and TaxDocDate = '2017-04-24' ORDER BY  ChID, CodeID2 
		SELECT *  FROM #TempFindProdElitAll where rating  = -1
		SELECT *  FROM #TempFindProdElitAll_tmp where rating  = -1
		*/

	DECLARE @MSG NVARCHAR(250)
	DECLARE @ChID_Inv INT, @CodeID2 INT
	DECLARE @ChID_Ret INT, @DocID_Ret INT, @DocDate_Ret SMALLDATETIME 

	DECLARE CURSOR1 CURSOR LOCAL FAST_FORWARD FOR 
		SELECT distinct ChID, CodeID2 FROM #TempRetFinal WITH (NOLOCK) GROUP BY ChID, CodeID2 ORDER BY 1, 2

	OPEN CURSOR1
		FETCH NEXT FROM CURSOR1 INTO @ChID_Inv, @CodeID2
	WHILE @@FETCH_STATUS = 0
	BEGIN
		--Script
		--для отладки
		IF @Testing2 = 1 OR 1=0 SELECT * FROM #TempRetFinal where ChID = @ChID_Inv and CodeID2 =  @CodeID2
		
		/*Блок создания ВТП с признаком2 */
		--IF EXISTS (SELECT top 1 1 FROM #TempRetFinal WHERE ChID = @ChID_Inv and CodeID2 =  @CodeID2)
		--BEGIN
			SET @ChID_Ret = (SELECT MAX(ChID) + 1 FROM ElitDistr.dbo.t_Ret)
			SET @DocID_Ret = (SELECT ISNULL(MAX(DocID),0) + 1 FROM ElitDistr.dbo.t_Ret r WHERE r.OurID = 1 /*(SELECT top 1 OurID FROM Elit.dbo.t_Inv WHERE DocID = @DocID)*/ )
			SET @DocDate_Ret = @DocDate --ISNULL((SELECT MIN(@DocDate) FROM #TempRetFinal WHERE ChID = @ChID_Inv and CodeID2 =  @CodeID2), dbo.zf_GetDate(GETDATE()) )

		--для отладки
		IF @Testing2 = 1 OR 1=0 select @ChID_Inv ChID_Inv, @ChID_Ret ChID_Ret
		IF @Testing2 = 1 OR 1=0
			SELECT top 1 
			--ChID, DocID, IntDocID, DocDate, KursMC, OurID, StockID, CompID, CodeID1, CodeID2, CodeID3, CodeID4, CodeID5, EmpID, Notes, Discount, SrcDocID, SrcDocDate, PayDelay, CurrID, TSumCC_nt, TTaxSum, TSumCC_wt, TSpendSumCC, TRouteSumCC, StateCode, InDocID, TaxDocID, TaxDocDate, Address, DelivID, KursCC, TSumCC, DepID, SrcTaxDocID, SrcTaxDocDate, DriverID, CompAddID, LinkID, TerrID
			@ChID_Ret ChID ,@DocID_Ret DocID ,DocID IntDocID, @DocDate_Ret  DocDate
			,KursMC, 
			1 OurID, 20 StockID, 10797 CompID, 63 CodeID1, @CodeID2 CodeID2, 
			CodeID3, CodeID4, CodeID5, EmpID, 
			ISNULL(Notes,'') + CASE WHEN @CodeID2 = 19 THEN ' Возврат ' ELSE ' Корректировка ' END + '- Создано для медок' Notes, 
			Discount, 
			TaxDocID as SrcDocID, TaxDocDate as SrcDocDate, 
			PayDelay, CurrID, 0 TSumCC_nt, 0 TTaxSum, 0 TSumCC_wt, 0 TSpendSumCC, 0 TRouteSumCC, 190 StateCode, InDocID, 
			0 TaxDocID, @DocDate_Ret TaxDocDate, 
			Address, DelivID, KursCC, 0 TSumCC, DepID, 
			TaxDocID as SrcTaxDocID, TaxDocDate as SrcTaxDocDate, 
			DriverID, CompAddID, LinkID, TerrID --, MorePrc,   LetAttor,  OrderID, PayConditionID 
			FROM Elit.dbo.t_Inv i
			WHERE i.ChID = @ChID_Inv and i.OurID = 1 
				
			INSERT ElitDistr.dbo.t_Ret 
				SELECT top 1 
				--ChID, DocID, IntDocID, DocDate, KursMC, OurID, StockID, CompID, CodeID1, CodeID2, CodeID3, CodeID4, CodeID5, EmpID, Notes, Discount, SrcDocID, SrcDocDate, PayDelay, CurrID, TSumCC_nt, TTaxSum, TSumCC_wt, TSpendSumCC, TRouteSumCC, StateCode, InDocID, TaxDocID, TaxDocDate, Address, DelivID, KursCC, TSumCC, DepID, SrcTaxDocID, SrcTaxDocDate, DriverID, CompAddID, LinkID, TerrID
				@ChID_Ret ChID ,@DocID_Ret DocID ,DocID IntDocID, @DocDate_Ret  DocDate
				,KursMC, 
				1 OurID, 20 StockID, 10797 CompID, 63 CodeID1, @CodeID2 CodeID2, 
				CodeID3, CodeID4, CodeID5, EmpID, 
				ISNULL(Notes,'') + CASE WHEN @CodeID2 = 19 THEN ' Возврат ' ELSE ' Корректировка ' END + '- Создано новым скриптом' Notes, 
				Discount, 
				TaxDocID as SrcDocID, TaxDocDate as SrcDocDate, 
				PayDelay, CurrID, 0 TSumCC_nt, 0 TTaxSum, 0 TSumCC_wt, 0 TSpendSumCC, 0 TRouteSumCC, 190 StateCode, InDocID, 
				0 TaxDocID, @DocDate_Ret TaxDocDate, 
				Address, DelivID, KursCC, 0 TSumCC, DepID, 
				TaxDocID as SrcTaxDocID, TaxDocDate as SrcTaxDocDate, 
				DriverID, CompAddID, LinkID, TerrID --, MorePrc,   LetAttor,  OrderID, PayConditionID 
				FROM Elit.dbo.t_Inv i
				WHERE i.ChID = @ChID_Inv and i.OurID = 1 
				
				--для отладки
				IF   1=0 and @ChID_Ret = 7000
				BEGIN
				SELECT max(ChID), max(Pos_Medoc), ProdID, max(PPID), max(UM), sum(Qty), max(PriceCC_nt), (sum(Qty) * max(PriceCC_nt)) SumCC_nt, max(Tax), (sum(Qty) * max(Tax)) TaxSum, max(PriceCC_wt), (sum(Qty) * max(PriceCC_wt)) SumCC_wt, max(BarCode), max(SecID) FROM (
					SELECT 
					--ChID, SrcPosID, ProdID, PPID, UM, Qty, PriceCC_nt, SumCC_nt, Tax, TaxSum, PriceCC_wt, SumCC_wt, BarCode, SecID
					@ChID_Ret ChID, 
					--t.SrcPosID_Inv, 
					t.Pos_Medoc, -- теперь позиция из медка вставляется в возврат
					t.ProdID, t.PPID, d.UM, t.QtyRealRet Qty, d.PriceCC_nt, 
					(d.PriceCC_nt * t.QtyRealRet) SumCC_nt, d.Tax, (d.Tax * t.QtyRealRet) TaxSum, d.PriceCC_wt, (d.PriceCC_wt * t.QtyRealRet) SumCC_wt, d.BarCode, d.SecID
					FROM Elit.dbo.t_Inv i
					JOIN Elit.dbo.t_InvD d ON d.ChID = i.ChID
					JOIN #TempRetFinal t ON t.ChID =i.ChID AND t.ProdId = d.ProdID AND t.SrcPosID_Inv = d.SrcPosID
					where i.ChID = @ChID_Inv AND t.CodeID2 = @CodeID2 AND t.QtyRealRet > 0
					) gr group by ProdID 
				
					SELECT d.* FROM  Elit.dbo.t_Inv i
					JOIN Elit.dbo.t_InvD d ON d.ChID = i.ChID
					JOIN #TempRetFinal t ON t.ChID =i.ChID AND t.ProdId = d.ProdID --AND t.SrcPosID_Inv = d.SrcPosID
					where i.ChID = @ChID_Inv AND t.CodeID2 = @CodeID2 AND t.QtyRealRet > 0  
				END
									
			INSERT ElitDistr.dbo.t_RetD 
				SELECT max(ChID), max(Pos_Medoc), ProdID, max(PPID), max(UM), sum(Qty), max(PriceCC_nt), (sum(Qty) * max(PriceCC_nt)) SumCC_nt, max(Tax), (sum(Qty) * max(Tax)) TaxSum, max(PriceCC_wt), (sum(Qty) * max(PriceCC_wt)) SumCC_wt, max(BarCode), max(SecID) FROM (
				SELECT 
				--ChID, SrcPosID, ProdID, PPID, UM, Qty, PriceCC_nt, SumCC_nt, Tax, TaxSum, PriceCC_wt, SumCC_wt, BarCode, SecID
				@ChID_Ret ChID, 
				--t.SrcPosID_Inv, 
				t.Pos_Medoc, -- теперь позиция из медка вставляется в возврат
				t.ProdID, t.PPID, d.UM, t.QtyRealRet Qty, d.PriceCC_nt, 
				(d.PriceCC_nt * t.QtyRealRet) SumCC_nt, d.Tax, (d.Tax * t.QtyRealRet) TaxSum, d.PriceCC_wt, (d.PriceCC_wt * t.QtyRealRet) SumCC_wt, d.BarCode, d.SecID
				FROM Elit.dbo.t_Inv i
				JOIN Elit.dbo.t_InvD d ON d.ChID = i.ChID
				JOIN #TempRetFinal t ON t.ChID =i.ChID AND t.ProdId = d.ProdID AND t.SrcPosID_Inv = d.SrcPosID
				where i.ChID = @ChID_Inv AND t.CodeID2 = @CodeID2 AND t.QtyRealRet > 0
				) gr group by ProdID 

			/*заносим в доп. таблицу данные для медка*/
			DELETE ElitDistr.dbo.t_RetD_medoc where chid = @ChID_Ret
			
			INSERT ElitDistr.dbo.t_RetD_medoc 
				SELECT max(ChID), max(Pos_Medoc), MAX(ProdName),
				--(SELECT top 1 ProdName FROM #TempFindProdElitAll_tmp tf where tf.ProdIDMA = gr.ProdIDMA and tf.ProdIDMA_Qty = gr.ProdIDMA_Qty and tf.ProdID_Elit = t.ProdID and tf.DNN = t.TaxDocDate and tf.NNN = t.TaxDocID and tf.Pos = t.Pos_Medoc) , 
				max(Pos_Medoc), ProdID, max(PPID), max(UM), sum(Qty), max(PriceCC_nt), (sum(Qty) * max(PriceCC_nt)) SumCC_nt, max(Tax), (sum(Qty) * max(Tax)) TaxSum, max(PriceCC_wt), (sum(Qty) * max(PriceCC_wt)) SumCC_wt, max(BarCode), max(SecID) 
				FROM (
					SELECT 
					@ChID_Ret ChID, 
					t.Pos_Medoc,t.ProdID,tf.ProdName, t.PPID, d.UM, t.QtyRealRet Qty, d.PriceCC_nt, 
					(d.PriceCC_nt * t.QtyRealRet) SumCC_nt, d.Tax, (d.Tax * t.QtyRealRet) TaxSum, d.PriceCC_wt, (d.PriceCC_wt * t.QtyRealRet) SumCC_wt, d.BarCode, d.SecID
					FROM Elit.dbo.t_Inv i
					JOIN Elit.dbo.t_InvD d ON d.ChID = i.ChID
					JOIN #TempRetFinal t ON t.ChID =i.ChID AND t.ProdId = d.ProdID 
					AND t.SrcPosID_Inv = d.SrcPosID
					left join #TempFindProdElitAll_tmp tf on tf.ProdIDMA = t.ProdIDMA and tf.ProdIDMA_Qty = t.ProdIDMA_Qty 
					--and tf.ProdID_Elit = t.ProdID 
--временое решение для товара 31606
and t.ProdID =
case when tf.ProdID_Elit = 31606 then 32618 else tf.ProdID_Elit  end 
					and tf.DNN = t.TaxDocDate and tf.NNN = t.TaxDocID and tf.Pos = t.Pos_Medoc 
					where i.ChID = @ChID_Inv AND t.CodeID2 = @CodeID2 AND t.QtyRealRet > 0
				) gr group by ProdID 
/*
*/

--[t_RetD_medoc]
/*
SELECT * FROM #TempFindProdElitAll_tmp
(SELECT top 1 ProdName FROM #TempFindProdElitAll_tmp tf where tf.ProdIDMA = and tf.ProdIDMA_Qty =  and tf.ProdID_Elit = and tf.DNN = and tf.NNN = and tf.Pos = )

N, ProdIDMA, ProdIDMA_Qty, ProdIDMA_RealPrice, ChID, DocID, TaxDocID, TaxDocDate, ProdID, PPID, QtyInv, vozv_Elit, vozv_ElitDistr, QtyRet, rem, abs_razn, QtyRealRet, CodeID2, SrcPosID_Inv, Pos_Medoc, sumQtyInv
SELECT * FROM #TempRetFinal
SELECT * FROM #TempRetFinal where PPID = 0
SELECT * FROM #TempFindProdElitAll_tmp
SELECT * FROM #TempFindProdElitAll
N, ProdIDMA, ProdIDMA_Qty, ProdID_Elit, DNN, NNN, ProdName, UM, Pos, TQty, Price, SumCC, QtyRealRet, CodeID2, rating
*/


		--SELECT 'Создался новый документ: возврат товара от получателя. №' + CAST(@DocID_Ret as Varchar(30)) + ' из РН №' + CAST((SELECT top 1 DocID FROM  Elit.dbo.t_Inv i where i.ChID = @ChID_Inv) as Varchar(30))
		
		--SELECT * FROM ElitDistr.dbo.t_Ret WHERE ChID = @ChID_Ret
		--SELECT * FROM ElitDistr.dbo.t_RetD WHERE ChID = @ChID_Ret
		
			--SELECT * FROM #TempRetFinal ORDER BY 1, 2
			IF @Testing2 = 1 OR 1=0 SELECT * FROM #TempRetFinal where ProdID = 28241 ORDER BY 1, 2
			
		--проверка по количеству для одиночного товара
		IF ISNULL((SELECT sum(Qty) FROM ElitDistr.dbo.t_RetD WHERE ChID = @ChID_Ret),0) <> ISNULL((SELECT sum(QtyRealRet) FROM #TempRetFinal WHERE ChID = @ChID_Inv and CodeID2 = @CodeID2),0)
		BEGIN
			SELECT 'Ошибка, количество фактических возвратов не равно необходимым !!!', ISNULL((SELECT sum(Qty) FROM ElitDistr.dbo.t_RetD WHERE ChID = @ChID_Ret),0) 'фактических', ISNULL((SELECT sum(QtyRealRet) FROM #TempRetFinal WHERE ChID = @ChID_Inv and CodeID2 = @CodeID2),0) 'необходимым', @ChID_Inv ChID_Inv, @CodeID2 CodeID2
			SELECT * FROM ElitDistr.dbo.t_RetD WHERE ChID = @ChID_Ret
			SELECT * FROM ElitDistr.dbo.t_InvD WHERE ChID = @ChID_Inv
			SELECT * FROM #TempRetFinal WHERE ChID = @ChID_Inv and CodeID2 = @CodeID2
			IF @Testing2 = 1 OR 1=1 SELECT * FROM #TempRetFinal 
			RAISERROR('Ошибка, количество фактических возвратов не равно необходимым !!!', 10, 1) WITH NOWAIT
		END
		
		FETCH NEXT FROM CURSOR1 INTO @ChID_Inv, @CodeID2
	END
	CLOSE CURSOR1
	DEALLOCATE CURSOR1



	--для отладки
	SELECT COUNT(*) 'итого возвратов' FROM ElitDistr.dbo.t_Ret WHERE DocDate = @DocDate
	SELECT SUM(Qty) 'итого количество возвратов' FROM ElitDistr.dbo.t_RetD WHERE ChID in (SELECT ChID FROM ElitDistr.dbo.t_Ret WHERE DocDate = @DocDate)
	SELECT * FROM ElitDistr.dbo.t_Ret WHERE DocDate = @DocDate ORDER BY 1
	SELECT * FROM ElitDistr.dbo.t_RetD WHERE ChID in (SELECT ChID FROM ElitDistr.dbo.t_Ret WHERE DocDate = @DocDate) ORDER BY 1
	SELECT * FROM ElitDistr.dbo.t_RetD_medoc WHERE ChID in (SELECT ChID FROM ElitDistr.dbo.t_Ret WHERE DocDate = @DocDate) ORDER BY 1
	SELECT pp.FEAProdID 'если null то добавьте код УКТВЕД' ,pp.* FROM ElitDistr.dbo.t_PInP pp 
	JOIN (SELECT * FROM ElitDistr.dbo.t_RetD WHERE ChID in (SELECT ChID FROM ElitDistr.dbo.t_Ret WHERE DocDate = @DocDate)) d on d.ProdID = pp.ProdID and d.PPID = pp.PPID
	where pp.FEAProdID is null

	IF @Testing2 = 1 OR 1=0 
	BEGIN
		select  m.SrcTaxDocID, m.SrcTaxDocDate,d.* from t_Ret m join t_retD  d on m.chid=d.chid WHERE  DocDate = '2018-06-01' and ProdID = 32236 ORDER BY  1
		select  m.SrcTaxDocID, m.SrcTaxDocDate,d.* from t_Ret m join t_retD  d on m.chid=d.chid WHERE  DocDate = '2018-06-02' and ProdID = 32236 ORDER BY  1
		--SELECT * FROM ElitDistr.dbo.t_RetD_medoc WHERE ChID in (SELECT ChID FROM ElitDistr.dbo.t_Ret WHERE DocDate = '2018-06-01') and ProdID = 32236
		--SELECT * FROM ElitDistr.dbo.t_RetD_medoc WHERE ChID in (SELECT ChID FROM ElitDistr.dbo.t_Ret WHERE DocDate = @DocDate) and ProdID = 32236
	END

	IF @ROLLBACK_TRAN = 1 
	BEGIN
		ROLLBACK TRAN   
	END
	ELSE
	BEGIN
		IF @@TRANCOUNT > 0
		  COMMIT
		ELSE
		BEGIN
		  RAISERROR ('ВНИМАНИЕ!!! Работа инструмента завершилась ошибкой!', 10, 1)
		  ROLLBACK
		END   
	END

END
--##############################################################################
--##############################################################################
--##############################################################################
SELECT '##### 4 Комплектация и Расходная накладная'
IF 14=0
BEGIN
	BEGIN TRAN
	DECLARE @DocDate4 SMALLDATETIME = (SELECT top 1 BDate FROM #D) --'2018-08-01' --дата возврата (два раза в месяц)
	DECLARE @ROLLBACK_TRAN4  int = 1      -- 1 тестирование c откатом, выполнится ROLLBACK TRAN   0 рабочий режим, выполнится COMMIT TRAN
	DECLARE  @Testing3 INT = 0 --1 вывод данных для отладки
	--IF @Testing3 = 1 OR 1=0
	
	IF OBJECT_ID (N'tempdb..#tmp', N'U') IS NOT NULL DROP TABLE #tmp
	CREATE TABLE #TMP(
	ProdIDMA int  null,
	ProdIdNabor int  null,
	QtyRet numeric(21,9) null,
	ProdId int  null,
	PriceShop numeric(21,9) null,
	Price numeric(21,9) null,
	PBGrID int null,)
	
	--таблица для комплектации
	IF OBJECT_ID ('tempdb..#komplekt', 'U') IS NOT NULL   DROP TABLE #komplekt;
	CREATE TABLE #komplekt(
	ProdIdNabor int  null,
	ProdID1 int  null,
	PPID1 int  null,
	ProdID2 int  null,
	PPID2 int  null,
	QtySRec numeric(21,9) null,
	Price numeric(21,9) null,
	Price1 numeric(21,9) null,
	Price_optim numeric(21,9) null,
	Price2 numeric(21,9) null,)	
	
	INSERT #TMP
		SELECT ProdIDMA, ProdIdNabor, SUM(QtyRet) QtyRet, ProdId, MIN(PriceShop) PriceShop , MIN(Price) Price
			,(SELECT top 1 p.PBGrID FROM Elit.dbo.r_Prods p where p.ProdID = gr.ProdId) PBGrID_p 
		FROM (
			SELECT ProdIDMA ProdIDMA, 
			ISNULL(  (SELECT top 1 ProdIdNabor FROM #ProdIdNabor pn where pn.ProdIDMA = (SELECT top 1 ExtProdID FROM Elit.dbo.r_ProdEC ec where ISNUMERIC(ExtProdID) = 1 and CompID = 10793  and ec.ProdID = trf.ProdID)),
				ISNULL( (SELECT top 1 ProdIdNabor FROM #ProdIdNabor pn where pn.ProdIDMA = (SELECT top 1 ExtProdID FROM Elit.dbo.r_ProdEC ec where ISNUMERIC(ExtProdID) = 1 and CompID in (10790,10791,10793)  and ec.ProdID = trf.ProdID)),
					(SELECT top 1 ProdIdNabor FROM #ProdIdNabor pn where pn.ProdID = trf.ProdID) )  ) ProdIdNabor,
			--(SELECT top 1 ProdIdNabor FROM #ProdIdNabor pn where pn.ProdID = trf.ProdID)	ProdIdNabor,
				QtyRealRet QtyRet,	ProdID ProdId, trf.PPID,	ProdIDMA_RealPrice PriceShop,	ProdIDMA_RealPrice/1.05/1.2 Price
			FROM #TempRetFinal trf	
		) gr
		group by ProdIDMA, ProdIdNabor, ProdId
		ORDER BY ProdIDMA--, ProdIdNabor
	
	IF @Testing3 = 1 OR 1=0 SELECT * FROM #TMP --where ProdIdNabor in (634093)
		ORDER BY 1

	DELETE #komplekt

	DECLARE @ProdID1 int,@PPID1 int,@ProdID2 int,@PPID2 int,@QtySRec numeric(21,9),@Rasch numeric (21,9)
	DECLARE @ProdIDMA4 INT,@ProdIdNabor INT ,@QtyRet4 INT,@ProdId INT ,@PriceShop NUMERIC(21,9),@Price NUMERIC (21,9),@PBGrID int, @Price1 NUMERIC (21,9)
	DECLARE CURSOR1 CURSOR --LOCAL FAST_FORWARD
	FOR 
	SELECT ProdIDMA,ProdIdNabor,QtyRet,ProdId,PriceShop,Price,PBGrID FROM #tmp WITH (NOLOCK) ORDER BY ProdIDMA
	--SELECT top 2 ProdIDMA,ProdIdNabor,QtyRet,ProdId,PriceShop,Price,PBGrID FROM #tmp where ProdIdNabor in (634153,634154)

	OPEN CURSOR1
	FETCH NEXT FROM CURSOR1 INTO @ProdIDMA4,@ProdIdNabor,@QtyRet4,@ProdId,@PriceShop,@Price,@PBGrID
	WHILE @@FETCH_STATUS = 0
	BEGIN
	--0 обнуление 
		SELECT @ProdID1  = NULL, @PPID1  = NULL, @ProdID2  = NULL, @PPID2  = NULL, @QtySRec  = NULL
		
	--1 ProdIdNabor = @ProdIdNabor

	--2 ProdID1
		SET @ProdID1 = @ProdId
		
	--3 PPID1 выбрать партию с максимальным количеством
		--SET @PPID1 = (SELECT top 1 PPID FROM #Rec1 r where ProdId = @ProdId and r.TQty >= @QtyRet4 ORDER BY TQty desc)
	--3 PPID1 выбрать партию с минимальной ценой
		SET @PPID1 = (SELECT top 1 PPID FROM #Rec1 r where ProdId = @ProdId /*and r.TQty >= @QtyRet4*/ ORDER BY Price/*,TQty*/)
		--    SELECT * FROM #Rec1 r where ProdId in (28578) ORDER BY Price
		
		IF @PPID1 is null 
			SET @PPID1 = (SELECT top 1 PPID FROM #Rec1 r where ProdId = @ProdId ORDER BY TQty desc)
			--   SELECT  PPID , * FROM #Rec1 r where ProdId = 26135 ORDER BY TQty desc
		
		--уменьшаем остаток
		UPDATE #Rec1
		SET TQty = TQty - @QtyRet4
		WHERE ProdId = @ProdId AND PPID = @PPID1
		
	--4 ProdID2 и PPID2 
		SELECT top 1 @Price1 = Price FROM #Rec1 r where r.ProdID = @ProdID1 and r.PPID = @PPID1 --цена прихода первого товара

		--SELECT * FROM #Rec1 r where r.ProdID = 26135 and r.PPID = 1159

		SELECT top(1) @ProdID2 = r.ProdID, @PPID2 = r.PPID  FROM #Rec2 r
		JOIN r_Prods p on p.ProdID = r.ProdID and p.PBGrID = @PBGrID
		where r.Price < (@Price - @Price1) --цена меньше максимальной
		--where r.Price*0.85 < (@Price - @Price1) --цена уменьшеная на 15% меньше максимальной (это временно, чтоб подобрать пары)
			and r.TQty >= @QtyRet4 --остаток товара больше запрашиваемого
		ORDER BY abs(r.Price - ((@Price - @Price1)/2))/*разница между ценой прихода и оптимальной расчетной ценой*/, r.Price desc, TQty desc, PPID

		--уменьшаем остаток
		UPDATE #Rec2
		SET TQty = TQty - @QtyRet4
		WHERE ProdID = @ProdID2 AND PPID = @PPID2

	--для отладки при ошибках	
	IF (SELECT SUM(TQty) FROM #Rec2) > 0 --если приход "мусор" присутствует тогда подбираем товар из мусора
		IF @PPID1 is null OR @ProdID2 is null OR @PPID2 is null --and @ProdIdNabor in ( 634001)  and 1=1 --для отладки
		BEGIN
			SELECT @ProdIDMA4 '@ProdIDMA4',@ProdIdNabor '@ProdIdNabor',@QtyRet4 '@QtyRet4',@ProdId '@ProdId',@PriceShop '@PriceShop',@Price '@Price',@PBGrID '@PBGrID'
			SELECT @ProdIdNabor ProdIdNabor
			SELECT @QtyRet4 'запрашиваемый остаток товара'
			SELECT @Price '@Price цена продажи набора без налога'
			SELECT @Price1 '@Price1 цена прихода первого товара'
			SELECT @ProdID1 ProdID1, @PPID1 PPID1, @ProdID2 ProdID2, @PPID2 PPID2
			
			SELECT 'выборка по условию'
			SELECT r.ProdID ProdID2, r.PPID PPID2,abs(r.Price - ((@Price - @Price1)/2)) price_razn, (@Price - @Price1)/2 Price_optim, *  FROM #Rec2 r
			JOIN r_Prods p on p.ProdID = r.ProdID and p.PBGrID = @PBGrID
			where r.Price < (@Price - @Price1) --цена меньше максимальной
			--where r.Price*0.85 < (@Price - @Price1) --цена меньше максимальной
				and r.TQty >= @QtyRet4 --остаток товара больше запрашиваемого
			ORDER BY abs(r.Price - ((@Price - @Price1)/2))/*разница между ценой прихода и оптимальной расчетной ценой*/, r.Price desc, TQty desc, PPID
			
			SELECT 'выборка без условия: цена меньше максимальной, остаток товара больше запрашиваемого'
			SELECT r.ProdID ProdID2, r.PPID PPID2,abs(r.Price - ((@Price - @Price1)/2)) price_razn, (@Price - @Price1)/2 Price_optim, r.Price 'r.Price', (@Price - @Price1) 'Максимум (< @Price - @Price1)',*  FROM #Rec2 r
			JOIN r_Prods p on p.ProdID = r.ProdID and p.PBGrID = @PBGrID
			--where r.Price < (@Price - @Price1) --цена меньше максимальной
			--	and r.TQty >= @QtyRet4 --остаток товара больше запрашиваемого
			ORDER BY abs(r.Price - ((@Price - @Price1)/2))/*разница между ценой прихода и оптимальной расчетной ценой*/, r.Price desc, TQty desc, PPID
			
			SELECT 'PPID1 выбрать партию с максимальным количеством'
			SELECT  PPID,* FROM #Rec1 r where ProdId = @ProdId and r.TQty >= @QtyRet4 ORDER BY Price,TQty-- desc
		END

	--если не нашли второй товар то подбираем чай
	IF @ProdID2 is null OR @PPID2 is null 
	BEGIN
		
		SELECT top(1) @ProdID2 = r.ProdID, @PPID2 = r.PPID  FROM #Rec3 r
		JOIN r_Prods p on p.ProdID = r.ProdID --and p.PBGrID = @PBGrID
		where r.Price < (@Price - @Price1) --цена меньше максимальной
		--where r.Price*0.85 < (@Price - @Price1) --цена уменьшеная на 15% меньше максимальной (это временно, чтоб подобрать пары)
			and r.TQty >= @QtyRet4 --остаток товара больше запрашиваемого
		ORDER BY abs(r.Price - ((@Price - @Price1)/2))/*разница между ценой прихода и оптимальной расчетной ценой*/, r.Price desc, TQty desc, PPID

		--уменьшаем остаток
		UPDATE #Rec3
		SET TQty = TQty - @QtyRet4
		WHERE ProdID = @ProdID2 AND PPID = @PPID2
		
		SET @QtySRec = @QtyRet4
		
		INSERT #komplekt
		SELECT @ProdIdNabor ProdIdNabor,@ProdID1 ProdID1,@PPID1 PPID1,@ProdID2 ProdID2,@PPID2 PPID2,@QtySRec QtySRec,@Price Price,@Price1 Price1,
		  (@Price - @Price1)/2  Price_optim, (SELECT top 1 Price FROM #Rec3 r where r.ProdID = @ProdID2 and r.PPID = @PPID2) Price2
		  
		IF (SELECT SUM(TQty) FROM #Rec2) > 0 --если приход "мусор" присутствует и ничего в нем не нашли тогда подбираем чай
			SELECT 'если не нашли второй товар то подбираем чай', @ProdID2 ProdID2, @PPID2 PPID2
		
	END
	ELSE
	BEGIN
	--5 @QtySRec = @QtyRet4
		SET @QtySRec = @QtyRet4
		
		/* для отладки
		SELECT * FROM #Rec2 where ProdID = 30767 and PPID = 240
		
		update  #Rec2  set Price = 25.071031747000
		where ProdID = 30767 and PPID = 240
		*/
		
		INSERT #komplekt
		SELECT @ProdIdNabor ProdIdNabor,@ProdID1 ProdID1,@PPID1 PPID1,@ProdID2 ProdID2,@PPID2 PPID2,@QtySRec QtySRec,@Price Price,@Price1 Price1,
		  (@Price - @Price1)/2  Price_optim, (SELECT top 1 Price FROM #Rec2 r where r.ProdID = @ProdID2 and r.PPID = @PPID2) Price2
		  --abs( isnull((SELECT top 1 Price FROM #Rec2 r where r.ProdID = @ProdID1 and r.PPID = @PPID1),0)  - ((@Price - @Price1)/2) ) Price_optim
	END
	
	--для отладки при ошибках на чае		
	IF @PPID1 is null OR @ProdID2 is null OR @PPID2 is null --and @ProdIdNabor in ( 634001)  and 1=1 --для отладки
	BEGIN
		SELECT '' 'ошибки на чае', @ProdIDMA4 '@ProdIDMA4',@ProdIdNabor '@ProdIdNabor',@QtyRet4 '@QtyRet4',@ProdId '@ProdId',@PriceShop '@PriceShop',@Price '@Price',@PBGrID '@PBGrID'
		SELECT @ProdIdNabor ProdIdNabor
		SELECT @QtyRet4 'запрашиваемый остаток товара'
		SELECT @Price '@Price цена продажи набора без налога'
		SELECT @Price1 '@Price1 цена прихода первого товара'
		SELECT @ProdID1 ProdID1, @PPID1 PPID1, @ProdID2 ProdID2, @PPID2 PPID2
		
		SELECT 'выборка по условию'
		SELECT r.ProdID ProdID2, r.PPID PPID2,abs(r.Price - ((@Price - @Price1)/2)) price_razn, (@Price - @Price1)/2 Price_optim, *  FROM #Rec3 r
		JOIN r_Prods p on p.ProdID = r.ProdID --and p.PBGrID = @PBGrID
		where r.Price < (@Price - @Price1) --цена меньше максимальной
		--where r.Price*0.85 < (@Price - @Price1) --цена меньше максимальной
			and r.TQty >= @QtyRet4 --остаток товара больше запрашиваемого
		ORDER BY abs(r.Price - ((@Price - @Price1)/2))/*разница между ценой прихода и оптимальной расчетной ценой*/, r.Price desc, TQty desc, PPID
		
		SELECT 'выборка без условия: цена меньше максимальной, остаток товара больше запрашиваемого'
		SELECT r.ProdID ProdID2, r.PPID PPID2,abs(r.Price - ((@Price - @Price1)/2)) price_razn, (@Price - @Price1)/2 Price_optim, r.Price 'r.Price', (@Price - @Price1) 'Максимум (< @Price - @Price1)',*  FROM #Rec3 r
		JOIN r_Prods p on p.ProdID = r.ProdID --and p.PBGrID = @PBGrID
		--where r.Price < (@Price - @Price1) --цена меньше максимальной
		--	and r.TQty >= @QtyRet4 --остаток товара больше запрашиваемого
		ORDER BY abs(r.Price - ((@Price - @Price1)/2))/*разница между ценой прихода и оптимальной расчетной ценой*/, r.Price desc, TQty desc, PPID
		
		SELECT 'PPID1 выбрать партию с максимальным количеством'
		SELECT  PPID,* FROM #Rec1 r where ProdId = @ProdId and r.TQty >= @QtyRet4 ORDER BY Price,TQty-- desc
	END
	        
		FETCH NEXT FROM CURSOR1 INTO @ProdIDMA4,@ProdIdNabor,@QtyRet4,@ProdId,@PriceShop,@Price,@PBGrID
	END

	CLOSE CURSOR1
	DEALLOCATE CURSOR1


	IF @Testing3 = 1 OR 1=0 SELECT ProdIdNabor,ProdID1,PPID1,ProdID2,PPID2,QtySRec FROM #komplekt 
	IF @Testing3 = 1 OR 1=0 SELECT * FROM #komplekt 
	--604603	634093	90	31441	255.100000000	202.460317460	59
	--802484	634137	159	32393	90.000000000	71.428571429	34
	--SELECT * FROM #Rec3   where prodid = 630062 and ppid = 	1 

	
	DECLARE 
	@CurrID SMALLINT, 
	@KursMC NUMERIC(21,9), 
	@ChID INT, 
	@DocID INT, 
	@AChID INT, 
	@SubSrcPosID INT,
	@DQty NUMERIC(21,9), 
	@SQty NUMERIC(21,9), 
	@SubPPID INT, 
	@SubQty NUMERIC(21,9), 
	@SubProdID INT,
	@SubPriceCC_wt NUMERIC(21,9), 
	@TaxPercent NUMERIC(21,9), 
	@SubUM VARCHAR(10), 
	@SubBarCode VARCHAR(42), 
	@SumQty NUMERIC(21,9),
	@SrcPosID4 INT, 
	@ProdID4 INT, 
	@UM VARCHAR(10), 
	@BarCode VARCHAR(42), 
	@Qty NUMERIC(21,9), 
	@RemQty NUMERIC(21,9),
	@PriceCC NUMERIC(21,9), 
	@PPID INT, 
	@SubStockID INT,
	@PPID_START INT, 
	@PPID_END INT, 
	@IsBlackSale TINYINT,
	@STR VARCHAR(MAX), 
	@PSTR VARCHAR(255) = '',
	@Notes varchar (150),
	@ChIDStart INT,
	@ChIDEnd INT,
	@OurID INT = NULL, 
	@StockID INT = NULL, 
	@DocCode INT = NULL,
	@CompID INT = NULL,
	@SubTax NUMERIC(21,9),
	@SubPriceCC_nt NUMERIC(21,9),
	@SubSumCC_wt NUMERIC(21,9),
	@SubTaxSum NUMERIC(21,9),
	@SubSumCC_nt NUMERIC(21,9)
	
	SELECT '## Комплектация ##'
	
	BEGIN   
		SELECT @ChIDStart = ChStart, @ChIDEnd = ChEnd FROM dbo.zf_ChIDRange()
		SET @CurrID = dbo.zf_GetCurrCC() --Валюта
		SET @KursMC = dbo.zf_GetRateMC(dbo.zf_GetCurrCC()) --Курс ОВ 
        --SET @DocDate4 = '2018-02-16' --дата комплектации
        SET @OurID = 1
        SET @StockID = 20
        /* Получение новых кода регистрации и номера для последующего импорта "Комплектация товара: Заголовок" */
        EXEC dbo.z_NewChID 't_SRec', @ChID OUTPUT
        EXEC dbo.z_NewDocID 11321, 't_SRec', @OurID, @DocID OUTPUT 
		SET @Notes = 'Обработан с шаблона'
		
        /* Импорт в "Комплектация товара: Заголовок" */ 
        INSERT t_SRec
        (ChID, DocID, IntDocID, DocDate, KursMC, OurID, StockID, 
         CodeID1, CodeID2, CodeID3, CodeID4, CodeID5, EmpID,Notes ,SubDocDate, SubStockID, CurrID)
        VALUES
        (@ChID, @DocID, @DocID, @DocDate4 , @KursMC, @OurID, @StockID, 
         100, 0, 0, 0, 0,  0,@Notes, @DocDate4 , @StockID, @CurrID)
    
		/* Курсор импорта проданных в "Продажа товара оператором" комплектов в "Комплектация товара: Комплекты" */
		DECLARE SRecA CURSOR LOCAL FOR
			SELECT ROW_NUMBER() OVER (ORDER BY m.ProdIdNabor) SrcPosID, m.ProdIdNabor, SUM(m.QtySRec) TQty 
			FROM #komplekt m
			GROUP BY m.ProdIdNabor 
			 
        OPEN SRecA
        FETCH NEXT FROM SRecA INTO @SrcPosID4, @ProdID4, @Qty
        WHILE @@FETCH_STATUS = 0
        BEGIN
			IF @Testing3 = 1 OR 1=0 SELECT @SrcPosID4 SrcPosID4, @ProdID4 ProdID4, @Qty Qty
			
			/* Получение нового дополнительного кода регистрации для конкретного комплекта */
			SELECT @AChID = ISNULL(MAX(AChID),0) + 1 FROM t_SRecA WITH(NOLOCK)  WHERE AChID BETWEEN  @ChIDStart AND @ChIDEnd 
      
			SELECT @UM = UM FROM r_Prods WHERE ProdID = @ProdID4 /* еденица измерения*/
			SELECT @BarCode = BarCode FROM r_ProdMQ WHERE ProdID = @ProdID4 and UM = @UM /*штрихкод*/
			IF @BarCode is null SET @BarCode = ISNULL(@BarCode,'')
			
			IF @Testing3 = 1 OR 1=0 SELECT 'ChID, SrcPosID, ProdID, PPID, UM, Qty, SetCostCC, PriceCC_nt, SumCC_nt, Tax, TaxSum, PriceCC_wt, SumCC_wt,Extra, PriceCC, NewPriceCC_nt, NewSumCC_nt, NewTax, NewTaxSum, NewPriceCC_wt, NewSumCC_wt, AChID, BarCode, SecID'
			IF @Testing3 = 1 OR 1=0 SELECT @ChID, @SrcPosID4, @ProdID4, 0, @UM, @Qty, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, @AChID, @BarCode, 1

			/* Импорт данных о проданных комплектах в "Комплектация товара: Комплекты" */
			INSERT t_SRecA
				(ChID, SrcPosID, ProdID, PPID, UM, Qty, SetCostCC, PriceCC_nt, SumCC_nt, Tax, TaxSum, PriceCC_wt, SumCC_wt,
				Extra, PriceCC, NewPriceCC_nt, NewSumCC_nt, NewTax, NewTaxSum, NewPriceCC_wt, NewSumCC_wt, AChID, BarCode, SecID)
			VALUES
				(@ChID, @SrcPosID4, @ProdID4, 0, @UM, @Qty, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, @AChID, @BarCode, 1)      
      
			SET @SubSrcPosID = 0             
       
			/* Курсор импорта данных в "Комплектация товара: Комплектующие" на основании составных товаров комплектов */
			DECLARE SRecD CURSOR FOR
				SELECT ProdID1,PPID1,QtySRec FROM #komplekt m where m.ProdIdNabor = @ProdID4
				union all 
				SELECT ProdID2,PPID2,QtySRec FROM #komplekt m where m.ProdIdNabor = @ProdID4

			OPEN SRecD
			FETCH NEXT FROM SRecD INTO @SubProdID, @SubPPID, @SubQty
			WHILE @@FETCH_STATUS = 0
			BEGIN

            SET @SubSrcPosID = @SubSrcPosID + 1
			SELECT @SubUM = UM FROM r_Prods WHERE ProdID = @SubProdID /* еденица измерения*/
			SELECT @SubBarCode = BarCode FROM r_ProdMQ WHERE ProdID = @SubProdID and UM = @SubUM /*штрихкод*/
			SELECT @SubPriceCC_wt = ISNULL(CostCC,0) FROM dbo.t_PInP where ProdID = @SubProdID and PPID = @SubPPID /* Цена с НДС*/
			SET @TaxPercent = dbo.zf_GetProdExpTax(@SubProdID, @OurID)
			SET @SubTax  = dbo.zf_GetIncludedTax(@SubPriceCC_wt, @TaxPercent) /* НДС*/
			SET @SubPriceCC_nt = @SubPriceCC_wt - @SubTax /* Цена без НДС*/
			SET @SubSumCC_wt= @SubQty * @SubPriceCC_wt /* Сумма с НДС*/
			SET @SubTaxSum  = @SubQty * @SubTax /* Сумма НДС*/
			SET @SubSumCC_nt = @SubQty * @SubPriceCC_nt /* Сумма без НДС*/
		         
        
			INSERT dbo.t_SRecD
			SELECT @AChID AChID,@SubSrcPosID SubSrcPosID,@SubProdID SubProdID,@SubPPID SubPPID,
				@SubUM SubUM,@SubQty SubQty,@SubPriceCC_nt SubPriceCC_nt,@SubSumCC_nt SubSumCC_nt,
				@SubTax SubTax,@SubTaxSum SubTaxSum,@SubPriceCC_wt SubPriceCC_wt,@SubSumCC_wt SubSumCC_wt,
				@SubPriceCC_nt SubNewPriceCC_nt,@SubSumCC_nt SubNewSumCC_nt,@SubTax SubNewTax,
				@SubTaxSum SubNewTaxSum,@SubPriceCC_wt SubNewPriceCC_wt,@SubSumCC_wt SubNewSumCC_wt,1 SubSecID,@SubBarCode SubBarCode

			--SELECT * FROM [ElitDistr_TEST].dbo.t_SRecD where AChID = 6813 and SubPPID = 240
			--SELECT * FROM [ElitDistr_TEST].dbo.t_PInP where ProdID = 30767 and PPID = 240

            FETCH NEXT FROM SRecD INTO @SubProdID, @SubPPID, @SubQty
          END
          CLOSE SRecD
          DEALLOCATE SRecD
      
          /* Блок расчёта суммарной стоимости конкретного комплекта на основании его комплектующих -------------------------------------------------*/
      
          /* Присвоение значения суммарной стоимости комплекта на основании его комплектующих */
          SELECT @PriceCC = ISNULL(dbo.zf_RoundPriceRec(SUM(SubSumCC_wt / @Qty)), 0) FROM t_SRecD WITH(NOLOCK) WHERE AChID = @AChID

          SELECT @PPID = dbo.tf_NewPPID(@OurID,@ProdID4)
          SET @CompID = 0 --предприятие
 
      
        
          /* создаём новую партию на основании ранее полученного значения с параметрами суммарной стоимости комплекта */
          --ADocCode = 11321 - Комплектация товара
	      EXEC t_SavePP 
	        1, 11321, @AChID, 0, @CurrID, @KursMC, 
	        0, @PriceCC, @PriceCC, @PriceCC, 0, 
	        'Комплектация товара', @ProdID4, @PPID, @PPID, 
	        @CompID, @DocDate4 , NULL, 0, 
	        @DocDate4, 0
		/*@ANewPP BIT, @ADocCode INT, @AChID INT, @AInMC BIT, @ACurrID INT, @ARateMC NUMERIC(21, 9),
		@APriceMC NUMERIC(21, 9), @APriceCC NUMERIC(21, 9),@ACostAC NUMERIC(21, 9), @ACostCC NUMERIC(21, 9), @APPWeight NUMERIC(21, 9), 
		@APPDesc VARCHAR(200), @AProdID INT, @APPID INT, @APriority INT, 
		@ACompID INT, @AProdDate SMALLDATETIME, @AArticle VARCHAR(200), @APPDelay SMALLINT,
		@AProdPPDate SMALLDATETIME, @AIsCommission BIT*/
  
          /* Обновление суммарной стоимости конкретного комплекта в "Комплектация товара: Комплекты" */
          UPDATE t_SRecA
          SET 
           PPID = @PPID, 
           PriceCC_nt = dbo.zf_GetProdPrice_nt(@PriceCC, ProdID ), 
           SumCC_nt = dbo.zf_GetProdPrice_nt(@PriceCC, ProdID ) * Qty,
           Tax = dbo.zf_GetProdPrice_wtTax(@PriceCC, ProdID ), 
           TaxSum = dbo.zf_GetProdPrice_wtTax(@PriceCC, ProdID ) * Qty, 
           PriceCC_wt = @PriceCC, 
           SumCC_wt = @PriceCC * Qty,
           NewPriceCC_nt = dbo.zf_GetProdPrice_nt(@PriceCC, ProdID ), 
           NewSumCC_nt = dbo.zf_GetProdPrice_nt(@PriceCC, ProdID ) * Qty,
           NewTax = dbo.zf_GetProdPrice_wtTax(@PriceCC, ProdID ), 
           NewTaxSum = dbo.zf_GetProdPrice_wtTax(@PriceCC, ProdID ) * Qty, 
           NewPriceCC_wt = @PriceCC, NewSumCC_wt = @PriceCC * Qty
          WHERE AChID = @AChID                                 
      
          FETCH NEXT FROM SRecA INTO @SrcPosID4, @ProdID4, @Qty
        END
        CLOSE SRecA
        DEALLOCATE SRecA

	END


	--для проверки результата
	SELECT * FROM t_SRec where ChID = @ChID
	SELECT * FROM t_SRecA where ChID = @ChID ORDER BY 2
	SELECT * FROM t_SRecD where AChID in (SELECT AChID FROM t_SRecA where ChID = @ChID) ORDER BY 1,3,2

	SELECT 'Партии участвующие в комплектации'
	SELECT p.* FROM t_PInP p
	join t_SRecA d on d.ProdID = p.ProdID and d.PPID = p.PPID
	where d.ChiD = @ChID
	ORDER BY ProdID,PPID


SELECT 'Расходная накладная'
IF 2=2
BEGIN
	DECLARE @NewChIDInv INT, @NewDocIDInv INT
	EXEC ElitDistr.dbo.z_NewChID 't_Inv', @NewChIDInv OUTPUT /* новый ChID для t_Inv*/
	EXEC ElitDistr.dbo.z_NewDocID 11011, 't_Inv', 1 /*фирма*/, @NewDocIDInv OUTPUT /* новый DocID для t_Inv*/
	
	INSERT ElitDistr.dbo.t_Inv
		SELECT @NewChIDInv ChID, @NewDocIDInv DocID, @NewDocIDInv IntDocID, @DocDate4 DocDate, ElitDistr.dbo.zf_GetRateCC(1) KursMC, 
		1 OurID, 20 StockID, 10797 CompID, 63 CodeID1, 18 CodeID2, 4 CodeID3, 102 CodeID4, 0 CodeID5, 0 Discount, 180 PayDelay, 0 EmpID, 
		'Создано скриптом наборов' Notes, 0 TaxDocID, @DocDate4 TaxDocDate, 0 MorePrc, NULL SrcDocID, NULL SrcDocDate, NULL LetAttor, 
		2 CurrID, 0 TSumCC_nt, 0 TTaxSum, 0 TSumCC_wt, 0 TSpendSumCC, 0 TRouteSumCC, 190 StateCode, 0 InDocID, 
		'магазин "Vintage" м.Дніпропетровськ, б-р Катеринославський, 1' Address, 0 DelivID, 1 KursCC, 0 TSumCC, 0 DepID, 
		0 SrcTaxDocID, NULL SrcTaxDocDate, NULL OrderID, 0 DriverID, 0 CompAddID, 0 LinkID, 0 TerrID
	
	SELECT * FROM ElitDistr.dbo.t_Inv where ChID = @NewChIDInv
	
	INSERT ElitDistr.dbo.t_InvD
		SELECT @NewChIDInv ChID, SrcPosID, ProdID, PPID, UM, Qty, 
		ISNULL( (ElitDistr.dbo.zf_GetProdPrice_nt( (SELECT top 1 PriceMC * dbo.zf_GetRateCC(mp.CurrID) FROM ElitDistr.dbo.r_ProdMP mp where mp.ProdID = a.ProdID and mp.PLID = 66), a.ProdID )),0) PriceCC_nt, 
		ROUND(ISNULL( (ElitDistr.dbo.zf_GetProdPrice_nt( (SELECT top 1 PriceMC * dbo.zf_GetRateCC(mp.CurrID) FROM ElitDistr.dbo.r_ProdMP mp where mp.ProdID = a.ProdID and mp.PLID = 66), a.ProdID )),0) * a.Qty,2) SumCC_nt, 
		ISNULL( (ElitDistr.dbo.zf_GetProdPrice_wtTax( (SELECT top 1 PriceMC * dbo.zf_GetRateCC(mp.CurrID) FROM ElitDistr.dbo.r_ProdMP mp where mp.ProdID = a.ProdID and mp.PLID = 66), a.ProdID )),0) Tax,
		ROUND(ISNULL( (ElitDistr.dbo.zf_GetProdPrice_wtTax( (SELECT top 1 PriceMC * dbo.zf_GetRateCC(mp.CurrID) FROM ElitDistr.dbo.r_ProdMP mp where mp.ProdID = a.ProdID and mp.PLID = 66), a.ProdID )),0) * a.Qty,2) TaxSum,
		ISNULL((SELECT PriceMC * dbo.zf_GetRateCC(mp.CurrID) FROM ElitDistr.dbo.r_ProdMP mp where mp.ProdID = a.ProdID and mp.PLID = 66),0) PriceCC_wt, 
		ROUND(ISNULL((SELECT PriceMC * dbo.zf_GetRateCC(mp.CurrID) FROM ElitDistr.dbo.r_ProdMP mp where mp.ProdID = a.ProdID and mp.PLID = 66),0) * a.Qty,2) SumCC_wt, 
		BarCode, SecID, 
		ISNULL((SELECT PriceMC * dbo.zf_GetRateCC(mp.CurrID) FROM ElitDistr.dbo.r_ProdMP mp where mp.ProdID = a.ProdID and mp.PLID = 66),0) PurPriceCC_wt
		FROM ElitDistr.dbo.t_SRecA a where ChID = @ChID ORDER BY 2
		
	SELECT * FROM ElitDistr.dbo.t_InvD where ChID = @NewChIDInv
	
	--проверка наличия кода УКТВЕД
	SELECT pp.FEAProdID 'если null то добавьте код УКТВЕД' ,pp.* FROM ElitDistr.dbo.t_PInP pp 
	JOIN (SELECT * FROM ElitDistr.dbo.t_InvD WHERE ChID in (SELECT ChID FROM ElitDistr.dbo.t_Inv WHERE DocDate = @DocDate4)) d on d.ProdID = pp.ProdID and d.PPID = pp.PPID
	where pp.FEAProdID is null

/*	
	
	SELECT * FROM ElitDistr.dbo.t_InvD where ChID in (SELECT ChID FROM ElitDistr.dbo.t_Inv where DocDate = '2018-06-01')ORDER BY 2
	SELECT 777 ChID, SrcPosID, ProdID, PPID, UM, Qty, 
	ISNULL( (ElitDistr.dbo.zf_GetProdPrice_nt( (SELECT top 1 PriceMC * dbo.zf_GetRateCC(mp.CurrID) FROM ElitDistr.dbo.r_ProdMP mp where mp.ProdID = a.ProdID and mp.PLID = 66), a.ProdID )),0) PriceCC_nt, 
	ISNULL( (ElitDistr.dbo.zf_GetProdPrice_nt( (SELECT top 1 PriceMC * dbo.zf_GetRateCC(mp.CurrID) FROM ElitDistr.dbo.r_ProdMP mp where mp.ProdID = a.ProdID and mp.PLID = 66), a.ProdID )),0) * a.Qty SumCC_nt, 
	ISNULL( (ElitDistr.dbo.zf_GetProdPrice_wtTax( (SELECT top 1 PriceMC * dbo.zf_GetRateCC(mp.CurrID) FROM ElitDistr.dbo.r_ProdMP mp where mp.ProdID = a.ProdID and mp.PLID = 66), a.ProdID )),0) Tax,
	ISNULL( (ElitDistr.dbo.zf_GetProdPrice_wtTax( (SELECT top 1 PriceMC * dbo.zf_GetRateCC(mp.CurrID) FROM ElitDistr.dbo.r_ProdMP mp where mp.ProdID = a.ProdID and mp.PLID = 66), a.ProdID )),0) * a.Qty TaxSum,
	ISNULL((SELECT PriceMC * dbo.zf_GetRateCC(mp.CurrID) FROM ElitDistr.dbo.r_ProdMP mp where mp.ProdID = a.ProdID and mp.PLID = 66),0) PriceCC_wt, 
	ISNULL((SELECT PriceMC * dbo.zf_GetRateCC(mp.CurrID) FROM ElitDistr.dbo.r_ProdMP mp where mp.ProdID = a.ProdID and mp.PLID = 66),0) * a.Qty SumCC_wt, 
	BarCode, SecID, 
	ISNULL((SELECT PriceMC * dbo.zf_GetRateCC(mp.CurrID) FROM ElitDistr.dbo.r_ProdMP mp where mp.ProdID = a.ProdID and mp.PLID = 66),0) PurPriceCC_wt
	FROM ElitDistr.dbo.t_SRecA a where ChID in (SELECT ChID FROM ElitDistr.dbo.t_SRec where DocDate = '2018-06-01') ORDER BY 2
	
	
	SELECT * FROM ElitDistr.dbo.t_InvD where ChID in (SELECT ChID FROM ElitDistr.dbo.t_Inv where DocDate = '2018-06-16')ORDER BY 2
	SELECT * FROM ElitDistr.dbo.t_SRec where DocDate = '2018-09-01'
	SELECT * FROM ElitDistr.dbo.t_SRecA where ChID in (SELECT ChID FROM ElitDistr.dbo.t_SRec where DocDate = '2018-09-01') ORDER BY 2
	SELECT * FROM ElitDistr.dbo.t_SRecD where AChID in (SELECT AChID FROM ElitDistr.dbo.t_SRecA where ChID in (SELECT ChID FROM ElitDistr.dbo.t_SRec where DocDate = '2018-09-01')) ORDER BY 2
	
	SELECT * FROM ElitDistr.dbo.t_SRecA where ChID in (SELECT ChID FROM ElitDistr.dbo.t_SRec where DocDate = '2018-06-16') ORDER BY 2
	
	--SELECT PriceMC * dbo.zf_GetRateCC(CurrID) FROM ElitDistr.dbo.r_ProdMP where ProdID = 634000 and PLID = 66
	--SELECT ElitDistr.dbo.zf_GetRateCC(1)/*Курс, ВC - текущий курс*/
	--SELECT ElitDistr.dbo.zf_GetProdPrice_nt(61.200000009000000, 634000 )
	--SELECT ElitDistr.dbo.zf_GetProdPrice_wtTax(61.200000009000000, 634000 )
	
	SELECT * FROM ElitDistr.dbo.t_SRec where DocDate = '2018-08-01'
	delete ElitDistr.dbo.t_SRec where DocDate = '2018-08-01'
	SELECT * FROM ElitDistr.dbo.t_Inv where DocDate = '2018-08-01'
	delete ElitDistr.dbo.t_Inv where DocDate = '2018-08-01'
*/	


	
END



	IF @ROLLBACK_TRAN4 = 1 
	BEGIN
		ROLLBACK TRAN   
	END
	ELSE
	BEGIN
		IF @@TRANCOUNT > 0
		  COMMIT
		ELSE
		BEGIN
		  RAISERROR ('ВНИМАНИЕ!!! Работа инструмента завершилась ошибкой!', 10, 1)
		  ROLLBACK
		END   
	END
	  
END
--##############################################################################
--##############################################################################
--##############################################################################
--##############################################################################
SELECT '##### 6 Присвоение налоговых номеров'
IF 15=0
BEGIN
	select  *  from ElitDistr.dbo.t_Inv WHERE  DocDate = (SELECT top 1 BDate FROM #D)--'2018-08-01'
	/*обновить налоговый номер в РН 
	BEGIN TRAN
		UPDATE ElitDistr.dbo.t_Inv SET TaxDocID = 5680 WHERE OurID = 1 AND DocID = 317
	ROLLBACK TRAN
	*/ 	
	
	select  *  from ElitDistr.dbo.t_Ret WHERE  DocDate = (SELECT top 1 BDate FROM #D) ORDER BY StateCode,DocID

	--шаблон для обновить налоговый номер в возврате 
	--UPDATE ElitDistr.dbo.t_Ret SET TaxDocID = 0 WHERE OurID = 1 AND DocID = 0 
	
	/* \\s-sql-d4\OT38ElitServer\Import\ElitDistr\Шаблон для обновления налоговых номеров.xlsx
	  ="UPDATE ElitDistr.dbo.t_Ret SET TaxDocID = "&B2&" WHERE OurID = 1 AND DocID = "&A2
	*/

IF 2=0
BEGIN

UPDATE ElitDistr.dbo.t_Ret SET TaxDocID = 5096 WHERE OurID = 1 AND DocID = 787007
UPDATE ElitDistr.dbo.t_Ret SET TaxDocID = 5097 WHERE OurID = 1 AND DocID = 787008
UPDATE ElitDistr.dbo.t_Ret SET TaxDocID = 5098 WHERE OurID = 1 AND DocID = 787009
UPDATE ElitDistr.dbo.t_Ret SET TaxDocID = 5099 WHERE OurID = 1 AND DocID = 787010
UPDATE ElitDistr.dbo.t_Ret SET TaxDocID = 5100 WHERE OurID = 1 AND DocID = 787011
UPDATE ElitDistr.dbo.t_Ret SET TaxDocID = 5101 WHERE OurID = 1 AND DocID = 787012
UPDATE ElitDistr.dbo.t_Ret SET TaxDocID = 5102 WHERE OurID = 1 AND DocID = 787013
UPDATE ElitDistr.dbo.t_Ret SET TaxDocID = 5103 WHERE OurID = 1 AND DocID = 787014
UPDATE ElitDistr.dbo.t_Ret SET TaxDocID = 5104 WHERE OurID = 1 AND DocID = 787015
UPDATE ElitDistr.dbo.t_Ret SET TaxDocID = 5105 WHERE OurID = 1 AND DocID = 787016
UPDATE ElitDistr.dbo.t_Ret SET TaxDocID = 5106 WHERE OurID = 1 AND DocID = 787017
UPDATE ElitDistr.dbo.t_Ret SET TaxDocID = 5107 WHERE OurID = 1 AND DocID = 787018
UPDATE ElitDistr.dbo.t_Ret SET TaxDocID = 5108 WHERE OurID = 1 AND DocID = 787019
UPDATE ElitDistr.dbo.t_Ret SET TaxDocID = 5109 WHERE OurID = 1 AND DocID = 787020
UPDATE ElitDistr.dbo.t_Ret SET TaxDocID = 5110 WHERE OurID = 1 AND DocID = 787021
UPDATE ElitDistr.dbo.t_Ret SET TaxDocID = 5111 WHERE OurID = 1 AND DocID = 787022
UPDATE ElitDistr.dbo.t_Ret SET TaxDocID = 5112 WHERE OurID = 1 AND DocID = 787023
UPDATE ElitDistr.dbo.t_Ret SET TaxDocID = 5113 WHERE OurID = 1 AND DocID = 787024
UPDATE ElitDistr.dbo.t_Ret SET TaxDocID = 5114 WHERE OurID = 1 AND DocID = 787025
UPDATE ElitDistr.dbo.t_Ret SET TaxDocID = 5115 WHERE OurID = 1 AND DocID = 787026
UPDATE ElitDistr.dbo.t_Ret SET TaxDocID = 5116 WHERE OurID = 1 AND DocID = 787027
UPDATE ElitDistr.dbo.t_Ret SET TaxDocID = 5117 WHERE OurID = 1 AND DocID = 787028
UPDATE ElitDistr.dbo.t_Ret SET TaxDocID = 5118 WHERE OurID = 1 AND DocID = 787029
UPDATE ElitDistr.dbo.t_Ret SET TaxDocID = 5119 WHERE OurID = 1 AND DocID = 787030
UPDATE ElitDistr.dbo.t_Ret SET TaxDocID = 5120 WHERE OurID = 1 AND DocID = 787031
UPDATE ElitDistr.dbo.t_Ret SET TaxDocID = 5121 WHERE OurID = 1 AND DocID = 787032
UPDATE ElitDistr.dbo.t_Ret SET TaxDocID = 5122 WHERE OurID = 1 AND DocID = 787033
UPDATE ElitDistr.dbo.t_Ret SET TaxDocID = 5123 WHERE OurID = 1 AND DocID = 787034
UPDATE ElitDistr.dbo.t_Ret SET TaxDocID = 5124 WHERE OurID = 1 AND DocID = 787035
UPDATE ElitDistr.dbo.t_Ret SET TaxDocID = 5125 WHERE OurID = 1 AND DocID = 787036
UPDATE ElitDistr.dbo.t_Ret SET TaxDocID = 5126 WHERE OurID = 1 AND DocID = 787037
UPDATE ElitDistr.dbo.t_Ret SET TaxDocID = 5127 WHERE OurID = 1 AND DocID = 787038
UPDATE ElitDistr.dbo.t_Ret SET TaxDocID = 5128 WHERE OurID = 1 AND DocID = 787039
UPDATE ElitDistr.dbo.t_Ret SET TaxDocID = 5129 WHERE OurID = 1 AND DocID = 787040
UPDATE ElitDistr.dbo.t_Ret SET TaxDocID = 5130 WHERE OurID = 1 AND DocID = 787041
UPDATE ElitDistr.dbo.t_Ret SET TaxDocID = 5131 WHERE OurID = 1 AND DocID = 787042
UPDATE ElitDistr.dbo.t_Ret SET TaxDocID = 5132 WHERE OurID = 1 AND DocID = 787043
UPDATE ElitDistr.dbo.t_Ret SET TaxDocID = 5133 WHERE OurID = 1 AND DocID = 787044
UPDATE ElitDistr.dbo.t_Ret SET TaxDocID = 5134 WHERE OurID = 1 AND DocID = 787045
UPDATE ElitDistr.dbo.t_Ret SET TaxDocID = 5135 WHERE OurID = 1 AND DocID = 787046
UPDATE ElitDistr.dbo.t_Ret SET TaxDocID = 5136 WHERE OurID = 1 AND DocID = 787047
UPDATE ElitDistr.dbo.t_Ret SET TaxDocID = 5137 WHERE OurID = 1 AND DocID = 787048
UPDATE ElitDistr.dbo.t_Ret SET TaxDocID = 5138 WHERE OurID = 1 AND DocID = 787049
UPDATE ElitDistr.dbo.t_Ret SET TaxDocID = 5139 WHERE OurID = 1 AND DocID = 787050
UPDATE ElitDistr.dbo.t_Ret SET TaxDocID = 5140 WHERE OurID = 1 AND DocID = 787051
UPDATE ElitDistr.dbo.t_Ret SET TaxDocID = 5141 WHERE OurID = 1 AND DocID = 787052
UPDATE ElitDistr.dbo.t_Ret SET TaxDocID = 5142 WHERE OurID = 1 AND DocID = 787053
UPDATE ElitDistr.dbo.t_Ret SET TaxDocID = 5176 WHERE OurID = 1 AND DocID = 787054
UPDATE ElitDistr.dbo.t_Ret SET TaxDocID = 5177 WHERE OurID = 1 AND DocID = 787055
UPDATE ElitDistr.dbo.t_Ret SET TaxDocID = 5178 WHERE OurID = 1 AND DocID = 787056
UPDATE ElitDistr.dbo.t_Ret SET TaxDocID = 5179 WHERE OurID = 1 AND DocID = 787057
UPDATE ElitDistr.dbo.t_Ret SET TaxDocID = 5180 WHERE OurID = 1 AND DocID = 787058
UPDATE ElitDistr.dbo.t_Ret SET TaxDocID = 5181 WHERE OurID = 1 AND DocID = 787059
UPDATE ElitDistr.dbo.t_Ret SET TaxDocID = 5182 WHERE OurID = 1 AND DocID = 787060
UPDATE ElitDistr.dbo.t_Ret SET TaxDocID = 5183 WHERE OurID = 1 AND DocID = 787061
UPDATE ElitDistr.dbo.t_Ret SET TaxDocID = 5184 WHERE OurID = 1 AND DocID = 787062
UPDATE ElitDistr.dbo.t_Ret SET TaxDocID = 5185 WHERE OurID = 1 AND DocID = 787063
UPDATE ElitDistr.dbo.t_Ret SET TaxDocID = 5186 WHERE OurID = 1 AND DocID = 787064
UPDATE ElitDistr.dbo.t_Ret SET TaxDocID = 5187 WHERE OurID = 1 AND DocID = 787065
UPDATE ElitDistr.dbo.t_Ret SET TaxDocID = 5188 WHERE OurID = 1 AND DocID = 787066
UPDATE ElitDistr.dbo.t_Ret SET TaxDocID = 5189 WHERE OurID = 1 AND DocID = 787067
UPDATE ElitDistr.dbo.t_Ret SET TaxDocID = 5190 WHERE OurID = 1 AND DocID = 787068
UPDATE ElitDistr.dbo.t_Ret SET TaxDocID = 5191 WHERE OurID = 1 AND DocID = 787069
UPDATE ElitDistr.dbo.t_Ret SET TaxDocID = 5192 WHERE OurID = 1 AND DocID = 787070
UPDATE ElitDistr.dbo.t_Ret SET TaxDocID = 5193 WHERE OurID = 1 AND DocID = 787071
UPDATE ElitDistr.dbo.t_Ret SET TaxDocID = 5194 WHERE OurID = 1 AND DocID = 787072
UPDATE ElitDistr.dbo.t_Ret SET TaxDocID = 5195 WHERE OurID = 1 AND DocID = 787073
UPDATE ElitDistr.dbo.t_Ret SET TaxDocID = 5196 WHERE OurID = 1 AND DocID = 787074
UPDATE ElitDistr.dbo.t_Ret SET TaxDocID = 5197 WHERE OurID = 1 AND DocID = 787075
UPDATE ElitDistr.dbo.t_Ret SET TaxDocID = 5198 WHERE OurID = 1 AND DocID = 787076
UPDATE ElitDistr.dbo.t_Ret SET TaxDocID = 5199 WHERE OurID = 1 AND DocID = 787077
UPDATE ElitDistr.dbo.t_Ret SET TaxDocID = 5200 WHERE OurID = 1 AND DocID = 787078
UPDATE ElitDistr.dbo.t_Ret SET TaxDocID = 5201 WHERE OurID = 1 AND DocID = 787079
UPDATE ElitDistr.dbo.t_Ret SET TaxDocID = 5202 WHERE OurID = 1 AND DocID = 787080
UPDATE ElitDistr.dbo.t_Ret SET TaxDocID = 5203 WHERE OurID = 1 AND DocID = 787081
UPDATE ElitDistr.dbo.t_Ret SET TaxDocID = 5204 WHERE OurID = 1 AND DocID = 787082
UPDATE ElitDistr.dbo.t_Ret SET TaxDocID = 5205 WHERE OurID = 1 AND DocID = 787083
UPDATE ElitDistr.dbo.t_Ret SET TaxDocID = 5206 WHERE OurID = 1 AND DocID = 787084
UPDATE ElitDistr.dbo.t_Ret SET TaxDocID = 5207 WHERE OurID = 1 AND DocID = 787085
UPDATE ElitDistr.dbo.t_Ret SET TaxDocID = 5208 WHERE OurID = 1 AND DocID = 787086
UPDATE ElitDistr.dbo.t_Ret SET TaxDocID = 5209 WHERE OurID = 1 AND DocID = 787087
UPDATE ElitDistr.dbo.t_Ret SET TaxDocID = 5210 WHERE OurID = 1 AND DocID = 787088
UPDATE ElitDistr.dbo.t_Ret SET TaxDocID = 5211 WHERE OurID = 1 AND DocID = 787089
UPDATE ElitDistr.dbo.t_Ret SET TaxDocID = 5212 WHERE OurID = 1 AND DocID = 787090
UPDATE ElitDistr.dbo.t_Ret SET TaxDocID = 5213 WHERE OurID = 1 AND DocID = 787091
UPDATE ElitDistr.dbo.t_Ret SET TaxDocID = 5214 WHERE OurID = 1 AND DocID = 787092
UPDATE ElitDistr.dbo.t_Ret SET TaxDocID = 5215 WHERE OurID = 1 AND DocID = 787093
UPDATE ElitDistr.dbo.t_Ret SET TaxDocID = 5216 WHERE OurID = 1 AND DocID = 787094
UPDATE ElitDistr.dbo.t_Ret SET TaxDocID = 5217 WHERE OurID = 1 AND DocID = 787095
UPDATE ElitDistr.dbo.t_Ret SET TaxDocID = 5226 WHERE OurID = 1 AND DocID = 787096
UPDATE ElitDistr.dbo.t_Ret SET TaxDocID = 5227 WHERE OurID = 1 AND DocID = 787097
UPDATE ElitDistr.dbo.t_Ret SET TaxDocID = 5228 WHERE OurID = 1 AND DocID = 787098
UPDATE ElitDistr.dbo.t_Ret SET TaxDocID = 5229 WHERE OurID = 1 AND DocID = 787099
UPDATE ElitDistr.dbo.t_Ret SET TaxDocID = 5230 WHERE OurID = 1 AND DocID = 787100
UPDATE ElitDistr.dbo.t_Ret SET TaxDocID = 5231 WHERE OurID = 1 AND DocID = 787101
UPDATE ElitDistr.dbo.t_Ret SET TaxDocID = 5232 WHERE OurID = 1 AND DocID = 787102
UPDATE ElitDistr.dbo.t_Ret SET TaxDocID = 5233 WHERE OurID = 1 AND DocID = 787103
UPDATE ElitDistr.dbo.t_Ret SET TaxDocID = 5234 WHERE OurID = 1 AND DocID = 787104
UPDATE ElitDistr.dbo.t_Ret SET TaxDocID = 5243 WHERE OurID = 1 AND DocID = 787105
UPDATE ElitDistr.dbo.t_Ret SET TaxDocID = 5244 WHERE OurID = 1 AND DocID = 787106
UPDATE ElitDistr.dbo.t_Ret SET TaxDocID = 5245 WHERE OurID = 1 AND DocID = 787107
UPDATE ElitDistr.dbo.t_Ret SET TaxDocID = 5246 WHERE OurID = 1 AND DocID = 787108
UPDATE ElitDistr.dbo.t_Ret SET TaxDocID = 5247 WHERE OurID = 1 AND DocID = 787109
UPDATE ElitDistr.dbo.t_Ret SET TaxDocID = 5248 WHERE OurID = 1 AND DocID = 787110
UPDATE ElitDistr.dbo.t_Ret SET TaxDocID = 5249 WHERE OurID = 1 AND DocID = 787111
UPDATE ElitDistr.dbo.t_Ret SET TaxDocID = 5250 WHERE OurID = 1 AND DocID = 787112
UPDATE ElitDistr.dbo.t_Ret SET TaxDocID = 5251 WHERE OurID = 1 AND DocID = 787113
UPDATE ElitDistr.dbo.t_Ret SET TaxDocID = 5252 WHERE OurID = 1 AND DocID = 787114
UPDATE ElitDistr.dbo.t_Ret SET TaxDocID = 5253 WHERE OurID = 1 AND DocID = 787115
UPDATE ElitDistr.dbo.t_Ret SET TaxDocID = 5254 WHERE OurID = 1 AND DocID = 787116
UPDATE ElitDistr.dbo.t_Ret SET TaxDocID = 5255 WHERE OurID = 1 AND DocID = 787117
UPDATE ElitDistr.dbo.t_Ret SET TaxDocID = 5256 WHERE OurID = 1 AND DocID = 787118
UPDATE ElitDistr.dbo.t_Ret SET TaxDocID = 5257 WHERE OurID = 1 AND DocID = 787119
UPDATE ElitDistr.dbo.t_Ret SET TaxDocID = 5258 WHERE OurID = 1 AND DocID = 787120
UPDATE ElitDistr.dbo.t_Ret SET TaxDocID = 5259 WHERE OurID = 1 AND DocID = 787121
UPDATE ElitDistr.dbo.t_Ret SET TaxDocID = 5260 WHERE OurID = 1 AND DocID = 787122
UPDATE ElitDistr.dbo.t_Ret SET TaxDocID = 5261 WHERE OurID = 1 AND DocID = 787123
UPDATE ElitDistr.dbo.t_Ret SET TaxDocID = 5262 WHERE OurID = 1 AND DocID = 787124
UPDATE ElitDistr.dbo.t_Ret SET TaxDocID = 5263 WHERE OurID = 1 AND DocID = 787125
UPDATE ElitDistr.dbo.t_Ret SET TaxDocID = 5264 WHERE OurID = 1 AND DocID = 787126
UPDATE ElitDistr.dbo.t_Ret SET TaxDocID = 5265 WHERE OurID = 1 AND DocID = 787127
UPDATE ElitDistr.dbo.t_Ret SET TaxDocID = 5266 WHERE OurID = 1 AND DocID = 787128
UPDATE ElitDistr.dbo.t_Ret SET TaxDocID = 5267 WHERE OurID = 1 AND DocID = 787129
UPDATE ElitDistr.dbo.t_Ret SET TaxDocID = 5268 WHERE OurID = 1 AND DocID = 787130
UPDATE ElitDistr.dbo.t_Ret SET TaxDocID = 5269 WHERE OurID = 1 AND DocID = 787131
UPDATE ElitDistr.dbo.t_Ret SET TaxDocID = 5270 WHERE OurID = 1 AND DocID = 787132
UPDATE ElitDistr.dbo.t_Ret SET TaxDocID = 5271 WHERE OurID = 1 AND DocID = 787133
UPDATE ElitDistr.dbo.t_Ret SET TaxDocID = 5272 WHERE OurID = 1 AND DocID = 787134
UPDATE ElitDistr.dbo.t_Ret SET TaxDocID = 5273 WHERE OurID = 1 AND DocID = 787135
UPDATE ElitDistr.dbo.t_Ret SET TaxDocID = 5274 WHERE OurID = 1 AND DocID = 787136
UPDATE ElitDistr.dbo.t_Ret SET TaxDocID = 5275 WHERE OurID = 1 AND DocID = 787137
UPDATE ElitDistr.dbo.t_Ret SET TaxDocID = 5276 WHERE OurID = 1 AND DocID = 787138
UPDATE ElitDistr.dbo.t_Ret SET TaxDocID = 5277 WHERE OurID = 1 AND DocID = 787139
UPDATE ElitDistr.dbo.t_Ret SET TaxDocID = 5278 WHERE OurID = 1 AND DocID = 787140
UPDATE ElitDistr.dbo.t_Ret SET TaxDocID = 5279 WHERE OurID = 1 AND DocID = 787141
UPDATE ElitDistr.dbo.t_Ret SET TaxDocID = 5280 WHERE OurID = 1 AND DocID = 787142
UPDATE ElitDistr.dbo.t_Ret SET TaxDocID = 5281 WHERE OurID = 1 AND DocID = 787143
UPDATE ElitDistr.dbo.t_Ret SET TaxDocID = 5282 WHERE OurID = 1 AND DocID = 787144
UPDATE ElitDistr.dbo.t_Ret SET TaxDocID = 5283 WHERE OurID = 1 AND DocID = 787145
UPDATE ElitDistr.dbo.t_Ret SET TaxDocID = 5284 WHERE OurID = 1 AND DocID = 787146
UPDATE ElitDistr.dbo.t_Ret SET TaxDocID = 5285 WHERE OurID = 1 AND DocID = 787147
UPDATE ElitDistr.dbo.t_Ret SET TaxDocID = 5286 WHERE OurID = 1 AND DocID = 787148
UPDATE ElitDistr.dbo.t_Ret SET TaxDocID = 5287 WHERE OurID = 1 AND DocID = 787149
UPDATE ElitDistr.dbo.t_Ret SET TaxDocID = 5288 WHERE OurID = 1 AND DocID = 787150
UPDATE ElitDistr.dbo.t_Ret SET TaxDocID = 5289 WHERE OurID = 1 AND DocID = 787151
UPDATE ElitDistr.dbo.t_Ret SET TaxDocID = 5290 WHERE OurID = 1 AND DocID = 787152
UPDATE ElitDistr.dbo.t_Ret SET TaxDocID = 5291 WHERE OurID = 1 AND DocID = 787153
UPDATE ElitDistr.dbo.t_Ret SET TaxDocID = 5292 WHERE OurID = 1 AND DocID = 787154
UPDATE ElitDistr.dbo.t_Ret SET TaxDocID = 5345 WHERE OurID = 1 AND DocID = 787155
UPDATE ElitDistr.dbo.t_Ret SET TaxDocID = 5346 WHERE OurID = 1 AND DocID = 787156
UPDATE ElitDistr.dbo.t_Ret SET TaxDocID = 5347 WHERE OurID = 1 AND DocID = 787157
UPDATE ElitDistr.dbo.t_Ret SET TaxDocID = 5348 WHERE OurID = 1 AND DocID = 787158
UPDATE ElitDistr.dbo.t_Ret SET TaxDocID = 5349 WHERE OurID = 1 AND DocID = 787159
UPDATE ElitDistr.dbo.t_Ret SET TaxDocID = 5350 WHERE OurID = 1 AND DocID = 787160
UPDATE ElitDistr.dbo.t_Ret SET TaxDocID = 5351 WHERE OurID = 1 AND DocID = 787161
UPDATE ElitDistr.dbo.t_Ret SET TaxDocID = 5352 WHERE OurID = 1 AND DocID = 787162
UPDATE ElitDistr.dbo.t_Ret SET TaxDocID = 5353 WHERE OurID = 1 AND DocID = 787163
UPDATE ElitDistr.dbo.t_Ret SET TaxDocID = 5354 WHERE OurID = 1 AND DocID = 787164
UPDATE ElitDistr.dbo.t_Ret SET TaxDocID = 5355 WHERE OurID = 1 AND DocID = 787165
UPDATE ElitDistr.dbo.t_Ret SET TaxDocID = 5356 WHERE OurID = 1 AND DocID = 787166
UPDATE ElitDistr.dbo.t_Ret SET TaxDocID = 5357 WHERE OurID = 1 AND DocID = 787167
UPDATE ElitDistr.dbo.t_Ret SET TaxDocID = 5358 WHERE OurID = 1 AND DocID = 787168
UPDATE ElitDistr.dbo.t_Ret SET TaxDocID = 5359 WHERE OurID = 1 AND DocID = 787169
UPDATE ElitDistr.dbo.t_Ret SET TaxDocID = 5360 WHERE OurID = 1 AND DocID = 787170
UPDATE ElitDistr.dbo.t_Ret SET TaxDocID = 5361 WHERE OurID = 1 AND DocID = 787171
UPDATE ElitDistr.dbo.t_Ret SET TaxDocID = 5362 WHERE OurID = 1 AND DocID = 787172
UPDATE ElitDistr.dbo.t_Ret SET TaxDocID = 5363 WHERE OurID = 1 AND DocID = 787173
UPDATE ElitDistr.dbo.t_Ret SET TaxDocID = 5364 WHERE OurID = 1 AND DocID = 787174
UPDATE ElitDistr.dbo.t_Ret SET TaxDocID = 5365 WHERE OurID = 1 AND DocID = 787175
UPDATE ElitDistr.dbo.t_Ret SET TaxDocID = 5366 WHERE OurID = 1 AND DocID = 787176
UPDATE ElitDistr.dbo.t_Ret SET TaxDocID = 5367 WHERE OurID = 1 AND DocID = 787177
UPDATE ElitDistr.dbo.t_Ret SET TaxDocID = 5368 WHERE OurID = 1 AND DocID = 787178
UPDATE ElitDistr.dbo.t_Ret SET TaxDocID = 5369 WHERE OurID = 1 AND DocID = 787179
UPDATE ElitDistr.dbo.t_Ret SET TaxDocID = 5504 WHERE OurID = 1 AND DocID = 787180
UPDATE ElitDistr.dbo.t_Ret SET TaxDocID = 5505 WHERE OurID = 1 AND DocID = 787181
UPDATE ElitDistr.dbo.t_Ret SET TaxDocID = 5506 WHERE OurID = 1 AND DocID = 787182
UPDATE ElitDistr.dbo.t_Ret SET TaxDocID = 5507 WHERE OurID = 1 AND DocID = 787183
UPDATE ElitDistr.dbo.t_Ret SET TaxDocID = 5508 WHERE OurID = 1 AND DocID = 787184
UPDATE ElitDistr.dbo.t_Ret SET TaxDocID = 5509 WHERE OurID = 1 AND DocID = 787185
UPDATE ElitDistr.dbo.t_Ret SET TaxDocID = 5510 WHERE OurID = 1 AND DocID = 787186
UPDATE ElitDistr.dbo.t_Ret SET TaxDocID = 5511 WHERE OurID = 1 AND DocID = 787187
UPDATE ElitDistr.dbo.t_Ret SET TaxDocID = 5512 WHERE OurID = 1 AND DocID = 787188
UPDATE ElitDistr.dbo.t_Ret SET TaxDocID = 5513 WHERE OurID = 1 AND DocID = 787189
UPDATE ElitDistr.dbo.t_Ret SET TaxDocID = 5514 WHERE OurID = 1 AND DocID = 787190
UPDATE ElitDistr.dbo.t_Ret SET TaxDocID = 5515 WHERE OurID = 1 AND DocID = 787191
UPDATE ElitDistr.dbo.t_Ret SET TaxDocID = 5516 WHERE OurID = 1 AND DocID = 787192
UPDATE ElitDistr.dbo.t_Ret SET TaxDocID = 5517 WHERE OurID = 1 AND DocID = 787193
UPDATE ElitDistr.dbo.t_Ret SET TaxDocID = 5518 WHERE OurID = 1 AND DocID = 787194
UPDATE ElitDistr.dbo.t_Ret SET TaxDocID = 5519 WHERE OurID = 1 AND DocID = 787195
UPDATE ElitDistr.dbo.t_Ret SET TaxDocID = 5520 WHERE OurID = 1 AND DocID = 787196
UPDATE ElitDistr.dbo.t_Ret SET TaxDocID = 5521 WHERE OurID = 1 AND DocID = 787197
UPDATE ElitDistr.dbo.t_Ret SET TaxDocID = 5522 WHERE OurID = 1 AND DocID = 787198
UPDATE ElitDistr.dbo.t_Ret SET TaxDocID = 5523 WHERE OurID = 1 AND DocID = 787199
UPDATE ElitDistr.dbo.t_Ret SET TaxDocID = 5524 WHERE OurID = 1 AND DocID = 787200
UPDATE ElitDistr.dbo.t_Ret SET TaxDocID = 5525 WHERE OurID = 1 AND DocID = 787201
UPDATE ElitDistr.dbo.t_Ret SET TaxDocID = 5526 WHERE OurID = 1 AND DocID = 787202
UPDATE ElitDistr.dbo.t_Ret SET TaxDocID = 5527 WHERE OurID = 1 AND DocID = 787203
UPDATE ElitDistr.dbo.t_Ret SET TaxDocID = 5528 WHERE OurID = 1 AND DocID = 787204
UPDATE ElitDistr.dbo.t_Ret SET TaxDocID = 5529 WHERE OurID = 1 AND DocID = 787205
UPDATE ElitDistr.dbo.t_Ret SET TaxDocID = 5530 WHERE OurID = 1 AND DocID = 787206
UPDATE ElitDistr.dbo.t_Ret SET TaxDocID = 5531 WHERE OurID = 1 AND DocID = 787207
UPDATE ElitDistr.dbo.t_Ret SET TaxDocID = 5532 WHERE OurID = 1 AND DocID = 787208
UPDATE ElitDistr.dbo.t_Ret SET TaxDocID = 5533 WHERE OurID = 1 AND DocID = 787209
UPDATE ElitDistr.dbo.t_Ret SET TaxDocID = 5534 WHERE OurID = 1 AND DocID = 787210
UPDATE ElitDistr.dbo.t_Ret SET TaxDocID = 5535 WHERE OurID = 1 AND DocID = 787211
UPDATE ElitDistr.dbo.t_Ret SET TaxDocID = 5536 WHERE OurID = 1 AND DocID = 787212
UPDATE ElitDistr.dbo.t_Ret SET TaxDocID = 5537 WHERE OurID = 1 AND DocID = 787213
UPDATE ElitDistr.dbo.t_Ret SET TaxDocID = 5538 WHERE OurID = 1 AND DocID = 787214
UPDATE ElitDistr.dbo.t_Ret SET TaxDocID = 5539 WHERE OurID = 1 AND DocID = 787215
UPDATE ElitDistr.dbo.t_Ret SET TaxDocID = 5540 WHERE OurID = 1 AND DocID = 787216
UPDATE ElitDistr.dbo.t_Ret SET TaxDocID = 5541 WHERE OurID = 1 AND DocID = 787217
UPDATE ElitDistr.dbo.t_Ret SET TaxDocID = 5542 WHERE OurID = 1 AND DocID = 787218
UPDATE ElitDistr.dbo.t_Ret SET TaxDocID = 5543 WHERE OurID = 1 AND DocID = 787219
UPDATE ElitDistr.dbo.t_Ret SET TaxDocID = 5544 WHERE OurID = 1 AND DocID = 787220
UPDATE ElitDistr.dbo.t_Ret SET TaxDocID = 5669 WHERE OurID = 1 AND DocID = 787221
UPDATE ElitDistr.dbo.t_Ret SET TaxDocID = 5670 WHERE OurID = 1 AND DocID = 787222
UPDATE ElitDistr.dbo.t_Ret SET TaxDocID = 5671 WHERE OurID = 1 AND DocID = 787223
UPDATE ElitDistr.dbo.t_Ret SET TaxDocID = 5672 WHERE OurID = 1 AND DocID = 787224
UPDATE ElitDistr.dbo.t_Ret SET TaxDocID = 5673 WHERE OurID = 1 AND DocID = 787225
UPDATE ElitDistr.dbo.t_Ret SET TaxDocID = 5674 WHERE OurID = 1 AND DocID = 787226
UPDATE ElitDistr.dbo.t_Ret SET TaxDocID = 5675 WHERE OurID = 1 AND DocID = 787227
UPDATE ElitDistr.dbo.t_Ret SET TaxDocID = 5676 WHERE OurID = 1 AND DocID = 787228
UPDATE ElitDistr.dbo.t_Ret SET TaxDocID = 5677 WHERE OurID = 1 AND DocID = 787229
UPDATE ElitDistr.dbo.t_Ret SET TaxDocID = 5678 WHERE OurID = 1 AND DocID = 787230
UPDATE ElitDistr.dbo.t_Ret SET TaxDocID = 5679 WHERE OurID = 1 AND DocID = 787231



END


END
--##############################################################################
--##############################################################################
--##############################################################################
--##############################################################################
--##############################################################################
SELECT '##### 7 проверка формирования выгрузки в медок'
IF 16=0
BEGIN
  IF OBJECT_ID (N'tempdb..#temp', N'U') IS NOT NULL DROP TABLE #temp
  CREATE TABLE #temp (ChID INT,summ numeric(21,9),summ_Ret numeric(21,9))

  DECLARE @ChID_Ret_test INT, @pos int = 0, @p100 int = 0
  DECLARE CUR_test_Ret CURSOR STATIC
  FOR 
  select ChID from ElitDistr.dbo.t_Ret WITH (NOLOCK) WHERE  DocDate = (SELECT top 1 BDate FROM #D) and OurID = 1 and StockID = 20 ORDER BY ChID 
  
  OPEN CUR_test_Ret
  	FETCH NEXT FROM CUR_test_Ret INTO @ChID_Ret_test
  WHILE @@FETCH_STATUS = 0
  BEGIN
  	--Script
  	BEGIN TRY	
  	--EXEC [dbo].[ap_Export_J1201208_Medoc] @ChID = @ChID_Ret_test, @DocCode = 0
  	--если ошибка то проверьте таблицу at_r_OurMEDoc
	IF @pos = 0 SET @p100 = @@CURSOR_ROWS
  	SET @pos = @pos + 1
	RAISERROR ('Выполнено %u из %u', 10,1,@pos,@p100) WITH NOWAIT

	INSERT #temp (summ)
		EXEC ElitDistr.[dbo].[ap_Export_J1201208_Medoc] @ChID = @ChID_Ret_test, @DocCode = 0
	UPDATE #temp set ChID = @ChID_Ret_test where ChID is NULL
	UPDATE #temp set summ_Ret = (SELECT sum(SumCC_nt) FROM ElitDistr.dbo.t_RetD where ChID = @ChID_Ret_test) where ChID = @ChID_Ret_test
		
	END TRY  
	BEGIN CATCH
		SELECT 
		@ChID_Ret_test ChID_Ret_test 
		,'EXEC [dbo].[ap_Export_J1201208_Medoc] @ChID = '+cast(@ChID_Ret_test as varchar(30))+', @DocCode = 11003' Run
		,ERROR_NUMBER() AS ErrorNumber  
		,ERROR_SEVERITY() AS ErrorSeverity  
		,ERROR_STATE() AS ErrorState  
		,ERROR_PROCEDURE() AS ErrorProcedure  
		,ERROR_LINE() AS ErrorLine  
		,ERROR_MESSAGE() AS ErrorMessage; 
	END CATCH
	
  	--SELECT * FROM at_r_OurMEDoc ORDER BY 1
  	
  	FETCH NEXT FROM CUR_test_Ret INTO @ChID_Ret_test
  END
  CLOSE CUR_test_Ret
  DEALLOCATE CUR_test_Ret
  
	SELECT 'Ели пусто то ошибок нет. Все Ок!'
	
  	SELECT * FROM #temp where summ <> -summ_Ret
  	
END


/*

select * from #Rec3

select * from t_SRecD

SELECT * FROM ElitDistr.dbo.t_InvD

IF OBJECT_ID (N'tempdb..#temp', N'U') IS NOT NULL DROP TABLE #temp
CREATE TABLE #temp (
ChID INT,
summ numeric(21,9))
INSERT #temp (summ)
EXEC ElitDistr.[dbo].[ap_Export_J1201208_Medoc] @ChID = 6529, @DocCode = 0
SELECT * FROM #temp
UPDATE #temp set ChID = @ChID where ChID is NULL

  		EXEC [dbo].[ap_Export_J1201208_Medoc] @ChID = 6529, @DocCode = 11003
  		EXEC [dbo].[ap_Export_J1201208_Medoc] @ChID = 6529, @DocCode = -1
  		EXEC [dbo].[ap_Export_J1201208_Medoc] @ChID = 6529, @DocCode = 0
  		SELECT -sum(SumCC_nt) FROM ElitDistr.dbo.t_RetD WITH (NOLOCK) WHERE ChID = 6529
6385,6386,6387,6388,6389,6390,6391,6392,6393,6394,6395,6396,6397,6398,6399,6400,6401,6402,6403,6404,6405,6406,6407,6408,6409,6410,6411,6412,6413,6414,6415,6416,6417,6418,6419,6420,6421,6422,6423,6424,6425,6426,6427,6428,6429,6430,6431,6432,6433,6434,6435,6436,6437,6438,6439,6440,6441,6442,6443,6444,6445,6446,6447,6448,6449,6450,6451,6452,6453,6454,6455,6456,6457,6458,6459,6460,6461,6462,6463,6464,6465,6466,6467,6468,6469,6470,6471,6472,6473,6474,6475,6476,6477,6478,6479,6480,6481,6482,6483,6484,6485,6486,6487,6488,6489,6490,6491,6492,6493,6494,6495,6496,6497,6498,6499,6500,6501,6502,6503,6504,6505,6506,6507,6508,6509,6510,6511,6512,6513,6514,6515,6516,6517,6518,6519,6520,6521,6522,6523,6524,6525,6526,6527,6528,6529,6530,6531,6532,6533,6534,6535,6536,6537,6538,6539,6540,6541,6542,6543,6544,6545,6546,6547,6548,6549,6550,6551,6552,6553,6554,6555,6556,6557,6558,6559,6560,6561,6562,6563,6564,6565,6566,6567,6568,6569,6570,6571,6572,6573,6574,6575,6576,6577,6578,6579,6580,6581,6582,6583,6584,6585,6586,6587,6588,6589,6590,6591,6592

EXEC sp_msforeachtable 'select db_name()', @whereand = 'and db_name() = ''ElitDistr'''


BEGIN TRAN

INSERT ElitDistr.dbo.t_Ret 
			SELECT top 1 
			--ChID, DocID, IntDocID, DocDate, KursMC, OurID, StockID, CompID, CodeID1, CodeID2, CodeID3, CodeID4, CodeID5, EmpID, Notes, Discount, SrcDocID, SrcDocDate, PayDelay, CurrID, TSumCC_nt, TTaxSum, TSumCC_wt, TSpendSumCC, TRouteSumCC, StateCode, InDocID, TaxDocID, TaxDocDate, Address, DelivID, KursCC, TSumCC, DepID, SrcTaxDocID, SrcTaxDocDate, DriverID, CompAddID, LinkID, TerrID
			4906 ChID ,784903 DocID ,DocID IntDocID, '2018-04-01'  DocDate
			,KursMC, 
			1 OurID, 20 StockID, 10797 CompID, 63 CodeID1, 19 CodeID2, 
			CodeID3, CodeID4, CodeID5, EmpID, 
			ISNULL(Notes,'') + CASE WHEN 19 = 19 THEN ' Возврат ' ELSE ' Корректировка ' END + '- Создано новым скриптом' Notes, 
			Discount, 
			TaxDocID as SrcDocID, TaxDocDate as SrcDocDate, 
			PayDelay, CurrID, 0 TSumCC_nt, 0 TTaxSum, 0 TSumCC_wt, 0 TSpendSumCC, 0 TRouteSumCC, 190 StateCode, InDocID, 
			0 TaxDocID, '2018-04-01' TaxDocDate, 
			Address, DelivID, KursCC, 0 TSumCC, DepID, 
			TaxDocID as SrcTaxDocID, TaxDocDate as SrcTaxDocDate, 
			DriverID, CompAddID, LinkID, TerrID --, MorePrc,   LetAttor,  OrderID, PayConditionID 
			FROM Elit.dbo.t_Inv i
			WHERE i.ChID = 200043028 and i.OurID = 1 


			SELECT * FROM  Elit.dbo.t_Inv i
			WHERE i.ChID = 200043028 and i.OurID = 1 

ROLLBACK TRAN


--количество товаров которое участвует в накладной
SELECT DNN, NNN, COUNT(*) count_prod FROM (
SELECT DNN, NNN,ProdID_Elit FROM #TempFindProdElitAll group by DNN, NNN, ProdID_Elit
)s1 group by DNN, NNN
ORDER BY 3 desc


SELECT * FROM #TempRetFinal where ChID = 200020530 and ProdID = 3499

SELECT max(ChID), max(SrcPosID_Inv), ProdID, max(PPID), max(UM), sum(Qty), max(PriceCC_nt), (sum(Qty) * max(PriceCC_nt)) SumCC_nt, max(Tax), (sum(Qty) * max(Tax)) TaxSum, max(PriceCC_wt), (sum(Qty) * max(PriceCC_wt)) SumCC_wt, max(BarCode), max(SecID) FROM (
SELECT 
--ChID, SrcPosID, ProdID, PPID, UM, Qty, PriceCC_nt, SumCC_nt, Tax, TaxSum, PriceCC_wt, SumCC_wt, BarCode, SecID
1 ChID, t.SrcPosID_Inv, t.ProdID, t.PPID, d.UM, t.QtyRealRet Qty, d.PriceCC_nt, (d.PriceCC_nt * t.QtyRealRet) SumCC_nt, d.Tax, (d.Tax * t.QtyRealRet) TaxSum, d.PriceCC_wt, (d.PriceCC_wt * t.QtyRealRet) SumCC_wt, d.BarCode, d.SecID
FROM Elit.dbo.t_Inv i
JOIN Elit.dbo.t_InvD d ON d.ChID = i.ChID
JOIN #TempRetFinal t ON t.ChID =i.ChID AND t.ProdId = d.ProdID AND t.SrcPosID_Inv = d.SrcPosID
where i.ChID = 200020530 AND t.CodeID2 = 19 AND t.QtyRealRet > 0
) gr group by ProdID 

SELECT * FROM Elit.dbo.t_Inv i
JOIN Elit.dbo.t_InvD d ON d.ChID = i.ChID
JOIN #TempRetFinal t ON t.ChID =i.ChID AND t.ProdId = d.ProdID AND t.SrcPosID_Inv = d.SrcPosID
where i.ChID = 200020530 and d.ProdID = 3499

SELECT d.* FROM Elit.dbo.t_Inv i
JOIN Elit.dbo.t_InvD d ON d.ChID = i.ChID
JOIN #TempRetFinal t ON t.ChID =i.ChID AND t.ProdId = d.ProdID AND t.SrcPosID_Inv = d.SrcPosID
ORDER BY 1,2,3,4

101534178	19
200020530	1	3499	137
200020530	2	3499	140
*/
--SELECT DocID, TaxDocDate, TaxDocID FROM #TempRetFinal	group BY DocID, TaxDocDate, TaxDocID ORDER BY 1,2

/*
--1. вытягиваем продажи в ElitR за 15 дней по кодам товаров которые участвуют в наборах
USE ElitR
--SELECT d.ProdID ProdIDMA, sum(d.Qty) tqty FROM t_Sale m
SELECT d.* FROM t_Sale m
JOIN t_SaleD d ON d.ChID = m.ChID
JOIN r_Prods p ON p.ProdID = d.ProdID
WHERE 
--d.ProdID in (600072,600132,600133,600134,600135,600136,600159,600160,600168,600267,600267,600299,600712,600712,600721,600721,600731,600732,600742,600743,600744,600745,600757,600757,600758,600758,600758,600760,600760,600773,600773,600816,600816,600816,600832,600839,600839,600840,600840,600882,600883,600883,600884,600884,600884,600884,600884,600885,600885,600887,600891,600891,600892,600895,600895,600987,601070,601070,601078,601085,601085,601085,601085,601086,601095,601095,601105,601106,601111,601115,601116,601626,601773,601784,602042,602290,602505,602507,602563,602563,602563,602564,602564,602669,602669,602755,602755,603053,603053,603053,603928,603936,603975,604603,604851,604979,604980,604980,800084,800084,800164,800164,800164,800165,800165,800594,800594,800594,800621,800779,801098,801099,801301,801451,801562,801563,801564,801565,801642,801720,801721,801935,801949,801952,802174,802185,802375,802376,802394,802399,802402,802408,802412,802412,802424,802424,802471,802484,802485,802486,802489,802489,802490,802490,802511,802650,802651,802656,802657,802705,802705,802751,802751,802752,802982,803013,803013,803016) 
d.ProdID in (600072) 
and m.DocDate between '2018-04-01' and '2018-04-15'
and m.CodeID1 = 63 
and m. CodeID3 <> 89
and m.OurID = 6
group by d.ProdID
ORDER BY 1
--ProdID	tqty
--600072	71.000000000
SELECT sum(ds.Qty) tqty FROM t_Sale ms JOIN t_SaleD ds ON ds.ChID = ms.ChID
WHERE ds.ProdID in (600712) and ms.DocDate between '2018-04-01' and '2018-04-15' and ms.CodeID1 = 63 and ms.CodeID3 <> 89 and ms.OurID = 6

--2. находим элитовские кода
SELECT distinct ec.ProdID , ec.ExtProdID
, (SELECT SUM(Qty) FROM ElitDistr.dbo.t_rem rem where rem.ProdID = ec.ProdID and rem.StockID = 20 and rem.OurID = 1 ) rem

FROM elit.dbo.r_ProdEC ec
where 
ISNUMERIC(ExtProdID)=1
and cast(ExtProdID as bigint) in (
600072,600132,600133,600134,600135,600136,600159,600160,600168,600267,600299,600712,600721,600731,600732,600742,600743,600744,600745,600757,600758,600760,600773,600816,600832,600840,600882,600883,600884,600885,600887,600891,600892,600895,601070,601078,601085,601086,601095,601105,601106,601111,601115,601116,601626,601773,601784,602042,602290,602505,602563,602564,602669,602755,603053,603928,603936,604603,604851,604979,604980,800084,800164,800165,800594,800621,800779,801098,801099,801301,801451,801562,801563,801564,801565,801642,801720,801721,801935,801949,802174,802375,802376,802394,802399,802402,802408,802412,802424,802471,802484,802485,802486,802489,802490,802511,802650,802651,802656,802657,802705,802751,802982,803013,803016
--600712
)
ORDER BY 2
--ProdID
--4668
--30767
SELECT distinct ec.ProdID FROM elit.dbo.r_ProdEC ec
where ISNUMERIC(ExtProdID) = 1 and cast(ExtProdID as bigint) in (600712)
*/

----d.RealPrice минимальную
--SELECT d.ProdID, d.Qty, d.RealPrice, d.* FROM t_Sale m
--JOIN t_SaleD d ON d.ChID = m.ChID
--JOIN r_Prods p ON p.ProdID = d.ProdID
--WHERE 
----d.ProdID in (600072,600132,600133,600134,600135,600136,600159,600160,600168,600267,600267,600299,600712,600712,600721,600721,600731,600732,600742,600743,600744,600745,600757,600757,600758,600758,600758,600760,600760,600773,600773,600816,600816,600816,600832,600839,600839,600840,600840,600882,600883,600883,600884,600884,600884,600884,600884,600885,600885,600887,600891,600891,600892,600895,600895,600987,601070,601070,601078,601085,601085,601085,601085,601086,601095,601095,601105,601106,601111,601115,601116,601626,601773,601784,602042,602290,602505,602507,602563,602563,602563,602564,602564,602669,602669,602755,602755,603053,603053,603053,603928,603936,603975,604603,604851,604979,604980,604980,800084,800084,800164,800164,800164,800165,800165,800594,800594,800594,800621,800779,801098,801099,801301,801451,801562,801563,801564,801565,801642,801720,801721,801935,801949,801952,802174,802185,802375,802376,802394,802399,802402,802408,802412,802412,802424,802424,802471,802484,802485,802486,802489,802489,802490,802490,802511,802650,802651,802656,802657,802705,802705,802751,802751,802752,802982,803013,803013,803016) 
--d.ProdID in (600712) 
--and m.DocDate between '2018-04-01' and '2018-04-15'
--and m.CodeID1 = 63 
--and m. CodeID3 <> 89
--and m.OurID = 6


----3. поиск РН по которым можно вернуть товар
--SELECT *, ISNULL(QtyInv,0) - ISNULL(vozv_Elit,0) - ISNULL(vozv_ElitDistr,0) as QtyRet 
--, (SELECT SUM(Qty) FROM ElitDistr.dbo.t_rem rem where rem.ProdID = s1.ProdID and rem.StockID = 20 and rem.OurID = 1 ) rem
--FROM (
--SELECT m.ChID, m.DocID,m.TaxDocID, m.TaxDocDate,d.ProdID, d.PPID, d.Qty QtyInv
--,(
--SELECT sum(dr.Qty) vozv_Elit FROM Elit.dbo.t_Ret mr
--JOIN Elit.dbo.t_RetD dr ON dr.ChID = mr.ChID
--WHERE mr.OurID = 1 and mr.CompID = 10797
--and mr.SrcTaxDocID = m.TaxDocID 
--and mr.SrcTaxDocDate= m.TaxDocDate
--and dr.ProdID = d.ProdID
--and dr.PPID = d.PPID
--GROUP BY dr.ProdID, dr.PPID
-- ) as vozv_Elit
-- ,(
--SELECT sum(dr.Qty) vozv_ElitDistr FROM ElitDistr.dbo.t_Ret mr
--JOIN ElitDistr.dbo.t_RetD dr ON dr.ChID = mr.ChID
--WHERE mr.OurID = 1 and mr.CompID = 10797
--and mr.SrcTaxDocID = m.TaxDocID 
--and mr.SrcTaxDocDate= m.TaxDocDate
--and dr.ProdID = d.ProdID
--and dr.PPID = d.PPID
--GROUP BY dr.ProdID, dr.PPID
-- ) as vozv_ElitDistr
---- ,d.*, m.* 
--FROM Elit.dbo.t_Inv m
--JOIN Elit.dbo.t_InvD d ON d.ChID = m.ChID
--WHERE m.OurID = 1 and m.CompID = 10797
--and m.DocDate between '2017-04-01' and '2018-03-31' --последний день предыдущего месяца
--and d.ProdID in (28578,30551,31134,32060,32791)
--and d.Qty > 0
----ORDER BY m.TaxDocDate,m.TaxDocID
--) s1
--where (ISNULL(QtyInv,0) - ISNULL(vozv_Elit,0) - ISNULL(vozv_ElitDistr,0)) > 0
----ORDER BY TaxDocDate
--ORDER BY ISNULL(vozv_Elit,0) + ISNULL(vozv_ElitDistr,0),10 desc



--DECLARE @ProdIDMA4 int = 600712
----600072,600132,600133,600134,600135,600136,600159,600160,600168,600267,600299,600712,600721,600731,600732,600742,600743,600744,600745,600757,600758,600760,600773,600816,600832,600840,600882,600883,600884,600885,600887,600891,600892,600895,601070,601078,601085,601086,601095,601105,601106,601111,601115,601116,601626,601773,601784,602042,602290,602505,602563,602564,602669,602755,603053,603928,603936,604603,604851,604979,604980,800084,800164,800165,800594,800621,800779,801098,801099,801301,801451,801562,801563,801564,801565,801642,801720,801721,801935,801949,802174,802375,802376,802394,802399,802402,802408,802412,802424,802471,802484,802485,802486,802489,802490,802511,802650,802651,802656,802657,802705,802751,802982,803013,803016


--(SELECT sum(ISNULL(QtyInv,0) - ISNULL(vozv_Elit,0) - ISNULL(vozv_ElitDistr,0)) as TQtyRet 
--FROM (
--	SELECT m.ChID, m.DocID,m.TaxDocID, m.TaxDocDate,d.ProdID, d.PPID, d.Qty QtyInv
--	,(
--	SELECT sum(dr.Qty) vozv_Elit FROM Elit.dbo.t_Ret mr
--	JOIN Elit.dbo.t_RetD dr ON dr.ChID = mr.ChID
--	WHERE mr.OurID = 1 and mr.CompID = 10797
--	and mr.SrcTaxDocID = m.TaxDocID 
--	and mr.SrcTaxDocDate= m.TaxDocDate
--	and dr.ProdID = d.ProdID
--	and dr.PPID = d.PPID
--	GROUP BY dr.ProdID, dr.PPID
--	 ) as vozv_Elit
--	 ,(
--	SELECT sum(dr.Qty) vozv_ElitDistr FROM ElitDistr.dbo.t_Ret mr
--	JOIN ElitDistr.dbo.t_RetD dr ON dr.ChID = mr.ChID
--	WHERE mr.OurID = 1 and mr.CompID = 10797
--	and mr.SrcTaxDocID = m.TaxDocID 
--	and mr.SrcTaxDocDate= m.TaxDocDate
--	and dr.ProdID = d.ProdID
--	and dr.PPID = d.PPID
--	GROUP BY dr.ProdID, dr.PPID
--	 ) as vozv_ElitDistr
--	-- ,d.*, m.* 
--	FROM Elit.dbo.t_Inv m
--	JOIN Elit.dbo.t_InvD d ON d.ChID = m.ChID
--	WHERE m.OurID = 1 and m.CompID = 10797
--	and m.DocDate between '2017-04-01' and '2018-03-31' --последний день предыдущего месяца
--	and d.ProdID = 32060
--	and d.Qty > 0
--) s2 where (ISNULL(QtyInv,0) - ISNULL(vozv_Elit,0) - ISNULL(vozv_ElitDistr,0)) > 0
--) p1



