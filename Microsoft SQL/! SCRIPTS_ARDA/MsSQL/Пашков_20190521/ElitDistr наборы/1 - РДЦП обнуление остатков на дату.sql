-- Резервное копирование ElitDistr
IF 1=0
BEGIN
	USE master
	DECLARE @BkDate varchar(10)=CONVERT(varchar(10), GETDATE(), 120)
	DECLARE @BkTime varchar(8)=REPLACE(CONVERT(varchar(100), GETDATE(), 114), ':', '-')
	DECLARE @LocalPath varchar(MAX)='E:\OT38ElitServer\Import\Backup'
	DECLARE @DBName sysname = 'ElitDistr' -- ElitDistr
	DECLARE @Cmd varchar(8000)
	DECLARE @BkpFileName varchar(MAX)
	DECLARE @BkpFilePath varchar(MAX)
	SET @BkpFileName = @DBName + '_backup_' + @BkDate + '_' + @BkTime + '.bak'
	SET @BkpFilePath = @LocalPath + '\' + @BkpFileName
	    
		BACKUP DATABASE @DBName TO DISK = @BkpFilePath
		  WITH INIT, NOUNLOAD, NAME = @BkpFileName, SKIP, STATS=10, NOFORMAT, COMPRESSION

	SELECT @BkpFilePath, @DBName  
END



--1 РДЦП обнуление остатков на дату
USE ElitDistr

DECLARE @DocDate SMALLDATETIME = '20190501' --дата РДЦП (один раз в месяц, первый день месяца )
DECLARE @ROLLBACK_TRAN  int = 1      -- 1 тестирование, выполнится ROLLBACK TRAN   0 рабочий режим, выполнится COMMIT TRAN
--delete t_Epp where DocDate = '2018-08-01'
/*проверка остатков. их не должно быть после РДЦП
SELECT * FROM t_rem where OurID = 1 and StockID = 20 and (Qty <> 0 or AccQty <> 0)
*/

DECLARE 
	@Testing BIT = 0, /*Установка тестирования: 1 - режим тестирования включен;(При тестировании берем текущие остатки для ускорения)  0 - режим тестирования отключен;*/
	@OurID INT, 
	@OurID_Out INT, 
	@Sklad_In INT, 
	@Sklad_Out INT, 
	@TaxDocDate SMALLDATETIME, 
	@Notes VARCHAR(250), 
	@CompID INT,
	@KursMC NUMERIC(21,9),
	@KursCC NUMERIC(21,9),
	@ChID INT, 
	@DocID INT, 
	@InDocID INT,
	@StockID INT,
	@NewChID INT, 
	@NewDocID INT, 
	@NewInDocIDCRet INT,
	@CompIDRec INT, 
	@CurrID INT,
	@CodeID1 INT, 
	@CodeID2 INT, 
	@CodeID3 INT, 
	@CodeID4 INT, 
	@CodeID5 INT, 
	@CRetCodeID1 INT, 
	@CRetCodeID2 INT, 
	@CRetCodeID3 INT, 
	@CRetCodeID4 INT, 
	@CRetCodeID5 INT, 
	@RecCodeID1 INT, 
	@RecCodeID2 INT, 
	@RecCodeID3 INT, 
	@RecCodeID4 INT, 
	@RecCodeID5 INT, 
	@SrcDocID VARCHAR(250), 
	@InDocIDCRet INT,
	@StateCode INT,
	@StateCodeCRet INT,
	@EmpID INT,
	@PayDelay INT,
	@Discount NUMERIC(21,9),
	@Qty NUMERIC(21,9),
	@TQty NUMERIC(21,9),
	@SrcPosID INT,
	@ProdID INT,
	@PPID INT,
	@UM VARCHAR(10),
	@PriceCC_nt NUMERIC(21,9), 
	@SumCC_nt NUMERIC(21,9), 
	@Tax NUMERIC(21,9), 
	@TaxSum NUMERIC(21,9), 
	@PriceCC_wt NUMERIC(21,9), 
	@SumCC_wt NUMERIC(21,9), 
	@BarCode VARCHAR(42),
	@TaxPercent NUMERIC(21,9),
	@NewQty NUMERIC(21,9),
	@PriceCC NUMERIC(21,9),
	@NewChIDRec INT, 
	@NewDocIDRec INT,
	@NewInDocIDRec INT, 
	@InDocIDRec INT,
	@StateCodeRec INT,
	@DepID INT,
	@PriceMC_In NUMERIC(21,9),
	@PriceMC NUMERIC(21,9),
	@NewPPID INT,
	@DocCode INT, 
	@TableName VARCHAR(250),
	
	@sql NVARCHAR(MAX) = ''
   
BEGIN TRAN
 	--SET @DocDate = '2018-01-31' --дата документа
 	SET @OurID = 1 --фирма
 	SET @StockID = 20 --склад
 	
 	SET @TableName = 't_Epp'
 	SET @DocCode = (SELECT top 1 DocCode FROM z_Tables where TableName = @TableName) 
 	--SELECT @DocCode
	EXEC dbo.z_NewChID @TableName, @NewChID OUTPUT /* новый ChID для t_Epp*/
	EXEC dbo.z_NewDocID @DocCode, @TableName, @OurID, @NewDocID OUTPUT /* новый DocID для t_Epp*/
	/*SET @NewDocIDCRet = ISNULL((SELECT MAX(DocID) FROM t_CRet WHERE OurID = @OurID), 0) + 1*/
	SET @InDocID = @NewDocID /*Вн. Номер*/
	SET @CompID = 81 --Предприятие
	SET @CurrID = 2 --код валюты (в ElitDistr гривна = 2, доллар = 1)
	SET @KursMC = dbo.zf_GetRateMC(@CurrID)/*Курс, ОВ - текущий курс*/ --28
	SET @KursCC = dbo.zf_GetRateCC(@CurrID)/*Курс, ВC - текущий курс*/ --1
	SET @CodeID1 = 82 /* Признак 1*/
	SET @CodeID2 = 3 /* Признак 2*/
	SET @CodeID3 = 4 /* Признак 3*/
	SET @CodeID4 = 0 /* Признак 4*/
	SET @CodeID5 = 0 /* Признак 5*/
	--SET @CodeID4 = ISNULL((SELECT top 1 CAST(Notes AS INT) FROM r_Uni WHERE RefTypeID = 1000000008 AND ISNUMERIC(Notes) = 1 AND RefID = @Sklad_In ), 0) /* Признак 4 для t_CRet*/
	--SET @CodeID5 = ISNULL((SELECT top 1 CAST(Notes AS INT) FROM r_Uni WHERE RefTypeID = 1000000009 AND ISNUMERIC(Notes) = 1 AND RefID = @Sklad_In ), 0) /* Признак 5 для t_CRet*/
	SET @Notes = 'создано скриптом: РДЦП обнуление остатков на дату.sql'
	--SET @SrcDocID = cast(YEAR (@DocDate) as char(4)) + case len(cast(MONTH(@DocDate) as char(2))) when 1 then '0' + cast(MONTH(@DocDate) as char(2)) when 2 then cast(MONTH(@DocDate) as char(2)) end /* Номер источника*/
	SET @TaxDocDate = @DocDate /*дата налоговой*/
	SET @StateCode = 0 /*Статус*/
	SET @EmpID = dbo.zf_GetEmpCode()/*Служащий*/
	SET @PayDelay = 30 /*Отсрочка платежа*/
	SET @Discount = 0 /*Скидка*/

	/*Создаем новый заголовок t_Epp*/
	INSERT t_Epp 
	SELECT @NewChID ChID, @NewDocID DocID, @InDocID IntDocID, @DocDate DocDate, 
		@KursMC KursMC, @OurID OurID, @StockID StockID, @CompID CompID, 
		@CodeID1 CodeID1, @CodeID2 CodeID2, @CodeID3 CodeID3, @CodeID4 CodeID4, @CodeID5 CodeID5,
		0 Discount, 0 PayDelay, @EmpID EmpID, @Notes Notes, 0 SrcTaxDocID, NULL SrcTaxDocDate, 
		0 TaxDocID, @TaxDocDate TaxDocDate, NULL SrcDocID, NULL SrcDocDate, NULL LetAttor, 
		@CurrID CurrID, 0 TSumCC_nt, 0 TTaxSum, 0 TSumCC_wt, 0 TSpendSumCC, 0 TRouteSumCC, 
		@StateCode StateCode, @KursCC KursCC, 0 TSumCC, 0 DepID, 0 DriverID 


	INSERT t_EppD
	SELECT 
	@NewChID ChID, ROW_NUMBER()OVER(ORDER BY SecID, ProdID, PPID, Qty) SrcPosID, 
	ProdID, PPID, (SELECT top 1 UM FROM r_Prods WHERE r_Prods.ProdID = cr.ProdID) UM, Qty, 
	(SELECT ISNULL(CostMC * @KursMC,0) FROM t_PInP pp WITH(NOLOCK) WHERE pp.ProdID = cr.ProdID AND pp.PPID = cr.PPID) - ( dbo.zf_GetIncludedTax((SELECT ISNULL(CostMC * @KursMC,0) FROM t_PInP pp WITH(NOLOCK) WHERE pp.ProdID = cr.ProdID AND pp.PPID = cr.PPID), dbo.zf_GetProdExpTax(cr.ProdID, @OurID)) ) as PriceCC_nt, 
	((SELECT ISNULL(CostMC * @KursMC,0) FROM t_PInP pp WITH(NOLOCK) WHERE pp.ProdID = cr.ProdID AND pp.PPID = cr.PPID) - ( dbo.zf_GetIncludedTax((SELECT ISNULL(CostMC * @KursMC,0) FROM t_PInP pp WITH(NOLOCK) WHERE pp.ProdID = cr.ProdID AND pp.PPID = cr.PPID), dbo.zf_GetProdExpTax(cr.ProdID, @OurID)) )) * ABS(cr.Qty) as SumCC_nt, 
	( dbo.zf_GetIncludedTax((SELECT ISNULL(CostMC * @KursMC,0) FROM t_PInP pp WITH(NOLOCK) WHERE pp.ProdID = cr.ProdID AND pp.PPID = cr.PPID), dbo.zf_GetProdExpTax(cr.ProdID, @OurID)) ) Tax, 
	( dbo.zf_GetIncludedTax((SELECT ISNULL(CostMC * @KursMC,0) FROM t_PInP pp WITH(NOLOCK) WHERE pp.ProdID = cr.ProdID AND pp.PPID = cr.PPID), dbo.zf_GetProdExpTax(cr.ProdID, @OurID)) ) * ABS(cr.Qty) as TaxSum, 
	(SELECT ISNULL(CostMC * @KursMC,0) FROM t_PInP pp WITH(NOLOCK) WHERE pp.ProdID = cr.ProdID AND pp.PPID = cr.PPID) as PriceCC_wt, 
	(SELECT ISNULL(CostMC * @KursMC,0) FROM t_PInP pp WITH(NOLOCK) WHERE pp.ProdID = cr.ProdID AND pp.PPID = cr.PPID) * ABS(cr.Qty) as SumCC_wt,
	(SELECT top 1 m.BarCode FROM r_Prods p, r_ProdMQ m WHERE m.ProdID=p.ProdID AND p.UM=m.UM AND m.ProdID= cr.ProdID) BarCode,
	--( SELECT top 1 BarCode FROM r_ProdMQ mq WHERE mq.ProdID = cr.ProdID and mq.UM = ((SELECT top 1 UM FROM r_Prods WHERE r_Prods.ProdID = cr.ProdID)) ) BarCode, 
	SecID
	--FROM t_rem cr
	FROM [dbo].[zf_t_CalcRemByDateDate](null, @DocDate) cr
	WHERE OurID = @OurID AND StockID = @StockID AND (cr.Qty <> 0 OR cr.AccQty <> 0)
	--для обнуления только этих товаров
	--and cr.ProdID in (632482,636727,632505,636704,630112,632436,632459,636750,630083,630106,632365,630129,632342,630152,632405,636733,632499,632511,630035,630198,632359,632605,636687,632545,630089,630095,630189,632353,630043,632551,630146,632399,632565,630003,632542,630195,632448,632373,632422,636713,632491,632734,632585,632591,632634,630029,632442,632614,636693,632465,636744,632571,632522,630209,632336,630066,632479,632622,632628,630115,632528,630215,632379,632428,636707,636756,630063,630015,632339,632554,630109,632362,632531,630086,632385,632508,636701,630155,632485,636724,632462,636747,632439,632416,632393,630046,632345,632548,632608,632594,632402,632408,636730,636736,632456,630192,632356,632602,636684,630092,632502,630218,632376,636716,632445,632519,636690,630098,630149,632396,632562,632568,630126,632419,632468,630032,632611,632539,632637,632488,632333,632382,636661,636710,632582,632631,632574,632425,636753,630118,632525,632625,630087,632340,632411,636656,630064,632388,630133,632457,636702,630110,632434,636725,636748,632486,632463,632440,630093,632357,632394,636685,630047,632348,632557,636639,632497,632503,632597,632603,630041,632451,632403,636731,632328,632589,630193,630050,630121,632397,632471,632520,632420,632663,636742,630101,630127,632540,632514,632563,636719,630176,632334,630070,632371,632534,632620,632632,636699,636711,632569,630113,632377,632626,636705,632477,632526,632506,632577,636751,636728,630038,632460,630061,630184,632483,630084,632337,632414,632437,630130,632368,632391,632500,632560,636722,632546,632360,632606,636688,630090,630144,600830,630044,632454,630190,632354,632600,630004,632423,632494,636739,632351,632400,632517,632566,630124,632374,632543,630196,632586,632443,632609,632537,636696,630030,630104,632417,636745,632523,630210,632617,632629,632331,632580,636659,632431,632474,632480,636759,630216,632380,632623,636708,630018,632601,630039,632363,632578,630062,632386,632555,630085,630208,632409,632532,630108,632438,632509,632392,630202,632415,632346,632595,630033,630045,636637,636723,630185,632355,636683,632449,632455,632549,632501,630099,632352,632518,632375,636691,636740,630219,632469,632446,632495,630125,630056,632561,636717,632489,632538,632612,630105,630211,632369,632418,636697,636746,632383,632581,632618,630013,632426,632432,636754,630119,632332,636660,632475,632575,632624,630182,632435,630088,630205,632412,632529,636703,630136,632481,632458,632343,632389,632366,630188,632512,630199,632406,636734,632395,632558,630036,630096,632349,632598,632604,632498,632552,630042,632452,632541,630145,632398,632472,636714,630122,636737,630102,632515,632592,630002,632492,632615,630053,632466,632564,632635,636720,630128,636694,636743,632429,636757,632535,632572,632584,632335,632372,636700,632521,632621,630065,632478,630116,632329,630206,632530,632553,636752,632484,630183,632507,632361,632367,630131,632338,632344,632461,632413,632390,630200,632607,632547,632559,636721,632407,636735,632593,630037,632350,632401,636729,630091,632599,630123,630217,632424,636715,632493,632567,636738,630097,632544,630031,630197,632444,632610,632616,636689,636695,632467,632516,630054,630103,632587,632636,630117,632524,632536,632381,632430,636709,636758,632630,632473,632330,632573,630040,630111,632364,632387,632410,632579,630134,632433,632556,636749,630203,632533,632510,632487,632341,632464,630034,632358,632441,636686,630094,632596,632347,636638,632450,632504,632404,636732,632550,632447,632613,636692,630100,632496,632421,632470,632633,632490,632733,636741,632513,636669,636718,632370,632619,636698,630057,630071,632570,632384,636712,630114,630120,632527,630014,632627,432453,630214,632378,632427,632476,636706,636755)

SELECT * FROM t_Epp WHERE ChiD = @NewChID
SELECT * FROM t_EppD WHERE ChiD = @NewChID ORDER BY 2

SELECT OurID, StockID, SecID, ProdID, PPID, Qty, AccQty FROM t_rem 
where OurID = 1 and StockID = 20 and (Qty <> 0 or AccQty <> 0)
ORDER BY 1,2,3,4,5,6,7
--Qty	2596452,000000000	-170,000000000	40859,000000000	8232
	


SELECT OurID, StockID, SecID, ProdID, PPID, Qty, AccQty 
FROM [dbo].[zf_t_CalcRemByDateDate](null, @DocDate) cr
--FROM [dbo].[zf_t_CalcRemByDateDate](null, '2018-03-01') cr
WHERE OurID = 1 and StockID = 20 and (Qty <> 0 or AccQty <> 0)
--Qty	2596452,000000000	-170,000000000	40859,000000000	8232
/*


*/

IF @ROLLBACK_TRAN = 1 
BEGIN
	ROLLBACK TRAN   
END
ELSE
BEGIN
	IF @@TRANCOUNT > 0
	  COMMIT
	ELSE
	BEGIN
	  RAISERROR ('ВНИМАНИЕ!!! Работа инструмента завершилась ошибкой!', 10, 1)
	  ROLLBACK
	END   
END